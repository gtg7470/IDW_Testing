ARM GAS  /tmp/ccrJoCXE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"spwf04WiFi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.cmd_funcArgs.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 2C00     		.ascii	",\000"
  21 0002 0000     		.align	2
  22              	.LC1:
  23 0004 4E554C4C 		.ascii	"NULL\000"
  23      00
  24              		.section	.text.cmd_funcArgs,"ax",%progbits
  25              		.align	1
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	cmd_funcArgs:
  33              	.LVL0:
  34              	.LFB282:
  35              		.file 1 "Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c"
   1:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** /**
   2:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  ******************************************************************************
   3:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * @file    spwf04_serial_to_spi.c
   4:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * @author  Central LAB
   5:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * @version V2.1.0
   6:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * @date    17-May-2016
   7:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * @brief   Converts AT Cmd Strings to SPI Cmd structure
   8:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  ******************************************************************************
   9:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * @attention
  10:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *
  11:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  12:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *
  13:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * Redistribution and use in source and binary forms, with or without modification,
  14:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * are permitted provided that the following conditions are met:
  15:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *   1. Redistributions of source code must retain the above copyright notice,
  16:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *      this list of conditions and the following disclaimer.
  17:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  18:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *      this list of conditions and the following disclaimer in the documentation
  19:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *      and/or other materials provided with the distribution.
  20:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  21:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *      may be used to endorse or promote products derived from this software
  22:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *      without specific prior written permission.
ARM GAS  /tmp/ccrJoCXE.s 			page 2


  23:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *
  24:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  27:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  28:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  29:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  30:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  31:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  32:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  33:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  *
  35:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  ******************************************************************************
  36:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****  */
  37:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** /* Includes ------------------------------------------------------------------*/
  38:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include <stdint.h>
  39:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include <stdio.h>
  40:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include <stdlib.h>
  41:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include <string.h>
  42:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  43:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include "enum.h"
  44:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include "wifi_module.h"
  45:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #include "wifi_globals.h"
  46:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  47:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #define u8 unsigned char
  48:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #define CONSOLE_TypeDef void
  49:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #define SPWF_SPI_MSG_ID 0x02
  50:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #define SPI_WRITE_DELAY 100
  51:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  52:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** //static ConsoleErr cmd_func(int id, char *args);
  53:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** static ConsoleErr cmd_funcArgs(int id, char *args, char *data, int len, int mode);
  54:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  55:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  56:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** struct console_cmd {
  57:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	char *cmd;
  58:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	char *args;
  59:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	char *help;
  60:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	ConsoleErr (*func)(int id, char *args, char *data, int len, int mode);
  61:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	u8 show;
  62:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	u8 id;
  63:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** };
  64:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  65:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #define CONSOLE_CMD(__id, __c, __f, __s, __h)				{ .id = __id, .cmd = __c , .func = __f , .show = _
  66:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #define CONSOLE_CMD2(__id, __c, __f, __s, __a, __h)	{ .id = __id, .cmd = __c , .func = __f , .show 
  67:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  68:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** // FULL list console commands
  69:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** static const struct console_cmd cmds[] = {
  70:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	/* General Utilities */
  71:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x01, "AT",                cmd_funcArgs,	1, "Null command, always returns OK"),
  72:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x02, "AT+S.HELP",	        cmd_funcArgs,   1, "[=<command>]", "Display AT-Command inf
  73:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  74:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x03, "AT+S.RESET",        cmd_funcArgs,	1, "Provide a software reset"),
  75:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  76:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x04, "AT+S.PMS",	        cmd_funcArgs,	1, "=<0|1|2|3>", "Enable active/powersave/sto
  77:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x05, "AT+S.STS",	        cmd_funcArgs,	1, "[=<sts_var>]", "Report [single] status/st
  78:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x06, "AT+S.RTOSSTS",      cmd_funcArgs,	1, "Report status/statistics of RTOS"),
  79:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x07, "AT+S.SSXSTS",	cmd_funcArgs,	1, "Report status/statistics of TCP/IP"),
ARM GAS  /tmp/ccrJoCXE.s 			page 3


  80:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x08, "AT+S.PYTHON",	cmd_funcArgs,	1, "[=<filename>]", "Enter interactive uPhyton she
  81:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  82:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	/* Module Configuration */
  83:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x09, "AT+S.GCFG",		cmd_funcArgs,	1, "[=<cfg_var>]", "Report [single] configuration v
  84:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x0A, "AT+S.SCFG",		cmd_funcArgs,	1, "=<key>,<value>", "Set configuration variable"),
  85:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x0B, "AT+S.WCFG",		cmd_funcArgs,	1, "Save configuration variables to flash"),
  86:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x0C, "AT+S.FCFG",		cmd_funcArgs,	1, "Restore factory configuration variables from fl
  87:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x0D, "AT+S.NVW",		cmd_funcArgs,	1, "=<magic>", "Save factory configuration variables
  88:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x0E, "AT+S.MFGTEST",	cmd_funcArgs,	1, "=<magic>,<low|high|HSI|SYS>", "Perform Manufa
  89:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
  90:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	/* STM32 Peripherals */
  91:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x11, "AT+S.TIME",		cmd_funcArgs,	1, "[=<time>]", "Get/Set current time in seconds"),
  92:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x12, "AT+S.RANDOM",	cmd_funcArgs,	1, "Provide a new random number"),
  93:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x13, "AT+S.GPIOC",	cmd_funcArgs,	1, "=<num>,<in|out>,<r|f|b>", "Configure specified 
  94:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x14, "AT+S.GPIOR",	cmd_funcArgs,	1, "=<num>", "Read specified GPIO"),
  95:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x15, "AT+S.GPIOW",	cmd_funcArgs,	1, "=<num>,<val>", "Write specified GPIO"),
  96:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x16, "AT+S.DAC",		cmd_funcArgs,	1, "=<0|value>", "Disable/Enable DAC on GPIO15"),
  97:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x17, "AT+S.ADC",		cmd_funcArgs,	1, "Read ADC value on GPIO1"),
  98:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x18, "AT+S.PWM",		cmd_funcArgs,	1, "=frequency,duty_cycle", "Set PWM on GPIO2"),
  99:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 100:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	/* FileSystem Management*/
 101:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         CONSOLE_CMD (0x21, "AT+S.FSU",		cmd_funcArgs,	1, "Unmount/Erase Volume"),
 102:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x23, "AT+S.FSC",		cmd_funcArgs, 	1, "=<filename>,<datalen><CR><data>", "Create a fil
 103:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	//CONSOLE_CMD2(0x22, "AT+S.FSA",	cmd_funcArgs,	1, "=<filename>,<datalen><CR><data>", "Append to an
 104:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x25, "AT+S.FSD",		cmd_funcArgs,	1, "=<filename>", "Delete an existing file"),
 105:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x26, "AT+S.FSR",		cmd_funcArgs,	1, "=<old_filename>,<new_filename>", "Rename an exis
 106:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x27, "AT+S.FSL",		cmd_funcArgs,   1, "[=<filename>]", "List existing filename(s)"),
 107:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x28, "AT+S.FSP",		cmd_funcArgs,	1, "=<filename>,<offset>,<length>", "Print the conte
 108:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x29, "AT+S.HASH",	        cmd_funcArgs,	1, "=<functions,<filename>", "Compute Digest
 109:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x2A, "AT+S.WPAECERT",	cmd_funcArgs,	1, "=<ca|cert|key|auth|content>,<length|option>"
 110:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x2B, "AT+S.TLSCERT",	cmd_funcArgs,	1, "=<ca|cert|key|auth|content>,<length|option>",
 111:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 112:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	/* Network Management */
 113:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	//CONSOLE_CMD2(0x31, "AT+S.CMDREQ",	cmd_funcArgs,	1, "=<length><CR><data>", "Issue a radio command
 114:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x32, "AT+S.WIFI",		cmd_funcArgs,	1, "=<0|1>", "Disable/Enable WiFi radio"),
 115:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x33, "AT+S.SCAN",		cmd_funcArgs,	1, "=<d|s|m>,<filename>", "Perform a scan with/out 
 116:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x34, "AT+S.SSIDTXT",      cmd_funcArgs,	1, "[=<ssidtxt>]", "Get/Set an ASCII SSID"),
 117:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x35, "AT+S.PEERS",	cmd_funcArgs,	1, "[=peer_number[,peer_var]]", "Dump contents of t
 118:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x36, "AT+S.WPS",		cmd_funcArgs,	1, "[=<8-digit pin>]", "Initiate a WPS exchange"),
 119:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x37, "AT+S.RENEW",	cmd_funcArgs,	1, "Send an IPv4 Address Renew Request"),
 120:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x38, "AT+S.NTP",		cmd_funcArgs,	1, "Force an NTP Query"),
 121:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x39, "AT+S.PING",		cmd_funcArgs,	1, "=<count>,<size>,<hostname>,<IPv>", "Send pings 
 122:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x41, "AT+S.SOCKON",	cmd_funcArgs,	1, "=<hostname>,<IPv>,<port>,<TCP local port>,<t|u
 123:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x42, "AT+S.SOCKQ",	cmd_funcArgs,   1, "=<id>", "Query socket client for pending data
 124:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x43, "AT+S.SOCKC",	cmd_funcArgs,	1, "=<id>", "Close socket client"),
 125:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x44, "AT+S.SOCKW",	cmd_funcArgs,	1, "=<id>,<len>", "Write data to socket client"),
 126:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x45, "AT+S.SOCKR",	cmd_funcArgs,	1, "=<id>,<len>", "Read data from socket client"),
 127:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x46, "AT+S.SOCKL",	cmd_funcArgs,	1, "List opened socket clients"),
 128:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x47, "AT+S.SOCKDON",	cmd_funcArgs,   1, "=<port>,<t|u|s1|s2>", "Open a socket server
 129:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x48, "AT+S.SOCKDQ",	cmd_funcArgs,	1, "=<sid>,<cid>", "Query socket server for pendin
 130:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x49, "AT+S.SOCKDC",	cmd_funcArgs,	1, "=<sid>[,<cid>]", "Close socket server [or disc
 131:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x4A, "AT+S.SOCKDW",	cmd_funcArgs,	1, "=<sid>,<cid>,<len>", "Write data to socket ser
 132:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x4B, "AT+S.SOCKDR",	cmd_funcArgs,	1, "=<sid>,<cid>,<len>", "Read data from socket se
 133:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** //	CONSOLE_CMD2(0x4C, "AT+S.SOCKDL",	cmd_funcArgs,	1, "[=<sid>]", "List bound socket clients [on a 
 134:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         CONSOLE_CMD (0x4C, "AT+S.SOCKDL",	cmd_funcArgs,	1, "List bound socket clients"),
 135:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x4F, "AT+S.SELFTEST",	cmd_funcArgs, 	1, "=<magic>,<ip>,<port>,<num>,<size>,<t|u>", "
 136:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x51, "AT+S.TFTPGET",	cmd_funcArgs,	1, "=<hostname>,<IPv>,<filename>", "GET Request t
ARM GAS  /tmp/ccrJoCXE.s 			page 4


 137:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x52, "AT+S.TFTPPUT",	cmd_funcArgs,	1, "=<hostname>,<IPv>,<filename>", "PUT Request t
 138:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x53, "AT+S.SMTP",		cmd_funcArgs, 	1, "=<hostname>,<port>,<TLS>,<usn>,<pwd>,<heloID>,
 139:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x54, "AT+S.HTTPGET",	cmd_funcArgs, 	1, "=<hostname>,<path&queryopts>,<port>,<TLS>,<u
 140:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x55, "AT+S.HTTPPOST",	cmd_funcArgs, 	1, "=<hostname>,<path&queryopts>,<formcontent>,
 141:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         CONSOLE_CMD2(0x56, "AT+S.FWUPDATE",	cmd_funcArgs, 	1, "=<hostname>,<path&queryopts>,<port>,
 142:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         CONSOLE_CMD2(0x58, "AT+S.FSUPDATE",      cmd_funcArgs,   1, "=<hostname>,<path&queryopts>,<
 143:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x59, "AT+S.INPUTSSI",	cmd_funcArgs,	1, "Fill buffer for Raw text input SSI"),
 144:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x5A, "AT+S.MQTTCONN",	cmd_funcArgs, 	1, "=<hostname>,<path>,<port>,<TLS>,<usn>,<pwd>
 145:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x5B, "AT+S.MQTTSUB",	cmd_funcArgs, 	1, "=<id>,<topic>,<QoS>", "Subscribe topic to MQ
 146:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x5C, "AT+S.MQTTPUB",	cmd_funcArgs, 	1, "=<id>,<topic>,<QoS>,<retained>,<message>", "
 147:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x5D, "AT+S.MQTTUNSUB",	cmd_funcArgs, 	1, "=<id>,<topic>", "Unsubscribe topic from MQ
 148:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x5E, "AT+S.MQTTDISC",	cmd_funcArgs, 	1, "=<id>", "Disconnect from MQTT Broker"),
 149:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x61, "AT+S.WSOCKON",	cmd_funcArgs,	1, "=<hostname>,<port>,<path>,<TLS>,<usn>,<pwd>,<
 150:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x62, "AT+S.WSOCKQ",	cmd_funcArgs,	1, "=<id>", "Query web socket client for pending d
 151:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x63, "AT+S.WSOCKC",	cmd_funcArgs,	1, "=<id>,<status>", "Close web socket client usin
 152:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x64, "AT+S.WSOCKW",	cmd_funcArgs,	1, "=<id>,<lastFrame>,<lastFrag>,<binary>,<len>", 
 153:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD2(0x65, "AT+S.WSOCKR",	cmd_funcArgs,	1, "=<id>,<len>", "Read data from web socket clien
 154:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x66, "AT+S.WSOCKL",       cmd_funcArgs,	1, "List opened web socket clients"),
 155:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	/* Ensure Retro-Compatibility */
 156:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x00, "AT&V",		cmd_funcArgs,	0, "Report configuration variables"),
 157:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x00, "AT&W",		cmd_funcArgs,	0, "Save configuration variables to flash"),
 158:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x00, "AT&F",		cmd_funcArgs,	0, "Restore factory configuration variables from flash")
 159:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 160:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 	CONSOLE_CMD (0x00, NULL,		NULL,		0, NULL)
 161:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** };
 162:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 163:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** /**
 164:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** **/
 165:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** int get_cmd_id( char *str){
 166:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = 0;
 167:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****    for (i = 0 ; cmds[i].func != NULL ; i++) {
 169:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 170:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 				//cmd = (struct console_cmd *) &cmds[i];
 171:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 				break;
 172:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			}
 173:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****        }
 174:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       
 175:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       if (cmds[i].func == NULL){
 176:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         printf("Error: command not found");
 177:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         i = -1;
 178:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       }
 179:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       
 180:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       //printf("%d\r\n", i);
 181:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       return i;
 182:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 183:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 184:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** char * get_cmd_string(int id){
 185:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = 0;
 186:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   for (i = 0 ; cmds[i].func != NULL ; i++) {
 188:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 189:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       break;
 190:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       }
 191:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     }
 192:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 193:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (cmds[i].func == NULL){
ARM GAS  /tmp/ccrJoCXE.s 			page 5


 194:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     printf("Error: command not found");
 195:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 196:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 197:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   return cmds[i].cmd;
 198:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 199:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 200:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** // Run SPI command
 201:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** int run_spi_cmd(char *str, int mode){
 202:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // Split command stings and arguments
 203:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *args = strstr(str, "=");
 204:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *data = strstr(str, " ");
 205:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int len = 0;
 206:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 207:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (args){
 208:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     *args = '\0';
 209:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     args += 1;
 210:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 211:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 212:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (data){
 213:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     *data = '\0';
 214:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     data += 1;
 215:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 216:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     /* Commands with <DATA> at the end are of the form at+s.<cmd> = args1,args2,...,DATALENGTH "DAT
 217:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****        storing this DATALENGTH in len variable. */
 218:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     char *ptr = strrchr(args,',');
 219:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if(ptr!=NULL)
 220:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       sscanf(ptr+1,"%d",&len);
 221:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     /* format of INPUTSSI command is at+s.<cmd> = DATALENGTH "DATA"
 222:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****        so ptr will be NULL */
 223:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     else if(strstr(str,"AT+S.INPUTSSI"))
 224:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         len = atoi(args);
 225:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 226:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 227:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = get_cmd_id(str);
 228:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (i>=0){
 229:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     cmds[i].func(i, args, data, len, mode);
 230:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 231:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 232:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   return i;
 233:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 234:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 235:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** static ConsoleErr cmd_funcArgs(int id, char *args, char *data, int len, int mode){ 
  36              		.loc 1 235 82 view -0
  37              		.cfi_startproc
  38              		@ args = 4, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40              		.loc 1 235 82 is_stmt 0 view .LVU1
  41 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 40
  44              		.cfi_offset 3, -40
  45              		.cfi_offset 4, -36
  46              		.cfi_offset 5, -32
  47              		.cfi_offset 6, -28
  48              		.cfi_offset 7, -24
  49              		.cfi_offset 8, -20
  50              		.cfi_offset 9, -16
ARM GAS  /tmp/ccrJoCXE.s 			page 6


  51              		.cfi_offset 10, -12
  52              		.cfi_offset 11, -8
  53              		.cfi_offset 14, -4
  54 0004 0446     		mov	r4, r0
  55 0006 0D46     		mov	r5, r1
  56 0008 9146     		mov	r9, r2
  57 000a 9846     		mov	r8, r3
 236:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 237:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *tx = (char *)WiFi_SPI_Packet;
  58              		.loc 1 237 3 is_stmt 1 view .LVU2
  59              	.LVL1:
 238:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   uint8_t ll = 0;
  60              		.loc 1 238 3 view .LVU3
 239:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int offset = 0;
  61              		.loc 1 239 3 view .LVU4
 240:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int argc = 0;
  62              		.loc 1 240 3 view .LVU5
 241:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 242:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // Allocate buffer to store all data including message header
 243:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   //int tx_len = ((args != NULL) ? strlen(args) : 0) + 5;
 244:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 245:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   //Reset_AT_CMD_Buffer();  
 246:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   memset(tx, 0x0, sizeof WiFi_SPI_Packet);
  63              		.loc 1 246 3 view .LVU6
  64 000c 334E     		ldr	r6, .L15
  65 000e 7C22     		movs	r2, #124
  66              	.LVL2:
  67              		.loc 1 246 3 is_stmt 0 view .LVU7
  68 0010 0021     		movs	r1, #0
  69              	.LVL3:
  70              		.loc 1 246 3 view .LVU8
  71 0012 3046     		mov	r0, r6
  72              	.LVL4:
  73              		.loc 1 246 3 view .LVU9
  74 0014 FFF7FEFF 		bl	memset
  75              	.LVL5:
 247:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 248:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   tx[0] = SPWF_SPI_MSG_ID;
  76              		.loc 1 248 3 is_stmt 1 view .LVU10
  77              		.loc 1 248 9 is_stmt 0 view .LVU11
  78 0018 331F     		subs	r3, r6, #4
  79 001a 0222     		movs	r2, #2
  80 001c 06F8042C 		strb	r2, [r6, #-4]
 249:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // tx[1,2] --> Full MSG length filled lather
 250:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   tx[1] = 0;
  81              		.loc 1 250 3 is_stmt 1 view .LVU12
  82              		.loc 1 250 9 is_stmt 0 view .LVU13
  83 0020 0021     		movs	r1, #0
  84 0022 06F8031C 		strb	r1, [r6, #-3]
 251:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   tx[2] = 0x02;
  85              		.loc 1 251 3 is_stmt 1 view .LVU14
  86              		.loc 1 251 9 is_stmt 0 view .LVU15
  87 0026 06F8022C 		strb	r2, [r6, #-2]
 252:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   tx[3] = cmds[id].id; // Command id
  88              		.loc 1 252 3 is_stmt 1 view .LVU16
  89              		.loc 1 252 19 is_stmt 0 view .LVU17
  90 002a 04EB8404 		add	r4, r4, r4, lsl #2
ARM GAS  /tmp/ccrJoCXE.s 			page 7


  91              	.LVL6:
  92              		.loc 1 252 19 view .LVU18
  93 002e 2C4A     		ldr	r2, .L15+4
  94 0030 02EB8404 		add	r4, r2, r4, lsl #2
  95 0034 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
  96              		.loc 1 252 9 view .LVU19
  97 0036 06F8012C 		strb	r2, [r6, #-1]
 253:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // tx[4] --> N arguments will be filled later
 254:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   tx[4] = 0;
  98              		.loc 1 254 3 is_stmt 1 view .LVU20
  99              		.loc 1 254 9 is_stmt 0 view .LVU21
 100 003a 1971     		strb	r1, [r3, #4]
 255:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   offset = 5;
 101              		.loc 1 255 3 is_stmt 1 view .LVU22
 102              	.LVL7:
 256:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 257:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // Check if routine contains arguments
 258:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (args != NULL){
 103              		.loc 1 258 3 view .LVU23
 104              		.loc 1 258 6 is_stmt 0 view .LVU24
 105 003c 002D     		cmp	r5, #0
 106 003e 45D0     		beq	.L10
 107              	.LBB2:
 259:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     // String contains comma separated arguments
 260:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     //printf("$$ %s\r\n", args);
 261:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     char *token = strtok(args, ",");
 108              		.loc 1 261 5 is_stmt 1 view .LVU25
 109              		.loc 1 261 19 is_stmt 0 view .LVU26
 110 0040 2849     		ldr	r1, .L15+8
 111 0042 2846     		mov	r0, r5
 112 0044 FFF7FEFF 		bl	strtok
 113              	.LVL8:
 114 0048 0446     		mov	r4, r0
 115              	.LVL9:
 262:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     
 263:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     while(token){
 116              		.loc 1 263 5 is_stmt 1 view .LVU27
 117              	.LBE2:
 240:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 118              		.loc 1 240 7 is_stmt 0 view .LVU28
 119 004a 0027     		movs	r7, #0
 255:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 120              		.loc 1 255 10 view .LVU29
 121 004c 0526     		movs	r6, #5
 122              	.LBB3:
 123              		.loc 1 263 10 view .LVU30
 124 004e 10E0     		b	.L3
 125              	.LVL10:
 126              	.L13:
 264:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       //printf("%s\r\n", token);
 265:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       // Convert elemt into SPI field
 266:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         //sprintf(str, "%s", token);
 267:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         argc++;
 268:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         ll = strlen(token);
 269:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         if (strstr(token, "NULL") == NULL) {       
 270:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           //printf("Token len = %d\r\n", ll);          
 271:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           tx[offset++] = ll; 
ARM GAS  /tmp/ccrJoCXE.s 			page 8


 127              		.loc 1 271 11 is_stmt 1 view .LVU31
 128              		.loc 1 271 20 is_stmt 0 view .LVU32
 129 0050 06F1010A 		add	r10, r6, #1
 130              	.LVL11:
 131              		.loc 1 271 13 view .LVU33
 132 0054 2448     		ldr	r0, .L15+12
 133              		.loc 1 271 24 view .LVU34
 134 0056 06F800B0 		strb	fp, [r6, r0]
 272:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           memcpy(tx+offset, token, ll);
 135              		.loc 1 272 11 is_stmt 1 view .LVU35
 136 005a 5A46     		mov	r2, fp
 137 005c 2146     		mov	r1, r4
 138 005e 5044     		add	r0, r0, r10
 139 0060 FFF7FEFF 		bl	memcpy
 140              	.LVL12:
 273:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           offset += ll;
 141              		.loc 1 273 11 view .LVU36
 142              		.loc 1 273 18 is_stmt 0 view .LVU37
 143 0064 0BEB0A06 		add	r6, fp, r10
 144              	.LVL13:
 145              	.L5:
 274:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         } else {
 275:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           ll = 1;
 276:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           tx[offset++] = 0;//In case of NULL string just fill it up as 0
 277:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         }
 278:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 279:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         token = strtok(NULL, ",");
 146              		.loc 1 279 9 is_stmt 1 view .LVU38
 147              		.loc 1 279 17 is_stmt 0 view .LVU39
 148 0068 1E49     		ldr	r1, .L15+8
 149 006a 0020     		movs	r0, #0
 150 006c FFF7FEFF 		bl	strtok
 151              	.LVL14:
 152 0070 0446     		mov	r4, r0
 153              	.LVL15:
 154              	.L3:
 263:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       //printf("%s\r\n", token);
 155              		.loc 1 263 10 is_stmt 1 view .LVU40
 156 0072 84B1     		cbz	r4, .L12
 267:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         ll = strlen(token);
 157              		.loc 1 267 9 view .LVU41
 267:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         ll = strlen(token);
 158              		.loc 1 267 13 is_stmt 0 view .LVU42
 159 0074 0137     		adds	r7, r7, #1
 160              	.LVL16:
 268:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         if (strstr(token, "NULL") == NULL) {       
 161              		.loc 1 268 9 is_stmt 1 view .LVU43
 268:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         if (strstr(token, "NULL") == NULL) {       
 162              		.loc 1 268 14 is_stmt 0 view .LVU44
 163 0076 2046     		mov	r0, r4
 268:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         if (strstr(token, "NULL") == NULL) {       
 164              		.loc 1 268 14 view .LVU45
 165 0078 FFF7FEFF 		bl	strlen
 166              	.LVL17:
 268:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         if (strstr(token, "NULL") == NULL) {       
 167              		.loc 1 268 12 view .LVU46
 168 007c 5FFA80FB 		uxtb	fp, r0
ARM GAS  /tmp/ccrJoCXE.s 			page 9


 169              	.LVL18:
 269:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           //printf("Token len = %d\r\n", ll);          
 170              		.loc 1 269 9 is_stmt 1 view .LVU47
 269:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           //printf("Token len = %d\r\n", ll);          
 171              		.loc 1 269 13 is_stmt 0 view .LVU48
 172 0080 1A49     		ldr	r1, .L15+16
 173 0082 2046     		mov	r0, r4
 174 0084 FFF7FEFF 		bl	strstr
 175              	.LVL19:
 269:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           //printf("Token len = %d\r\n", ll);          
 176              		.loc 1 269 12 view .LVU49
 177 0088 0028     		cmp	r0, #0
 178 008a E1D0     		beq	.L13
 275:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****           tx[offset++] = 0;//In case of NULL string just fill it up as 0
 179              		.loc 1 275 11 is_stmt 1 view .LVU50
 180              	.LVL20:
 276:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         }
 181              		.loc 1 276 11 view .LVU51
 276:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         }
 182              		.loc 1 276 24 is_stmt 0 view .LVU52
 183 008c 164B     		ldr	r3, .L15+12
 184 008e 0022     		movs	r2, #0
 185 0090 F254     		strb	r2, [r6, r3]
 276:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         }
 186              		.loc 1 276 20 view .LVU53
 187 0092 0136     		adds	r6, r6, #1
 188              	.LVL21:
 276:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         }
 189              		.loc 1 276 20 view .LVU54
 190 0094 E8E7     		b	.L5
 191              	.LVL22:
 192              	.L12:
 280:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     }
 281:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (data && len > 0)
 193              		.loc 1 281 5 is_stmt 1 view .LVU55
 194              		.loc 1 281 8 is_stmt 0 view .LVU56
 195 0096 B9F1000F 		cmp	r9, #0
 196 009a 03D0     		beq	.L7
 197              		.loc 1 281 14 discriminator 1 view .LVU57
 198 009c B8F1000F 		cmp	r8, #0
 199 00a0 00DD     		ble	.L7
 282:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     {
 283:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         //memcpy(tx+offset, data, len);
 284:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         offset += len;
 200              		.loc 1 284 9 is_stmt 1 view .LVU58
 201              		.loc 1 284 16 is_stmt 0 view .LVU59
 202 00a2 4644     		add	r6, r6, r8
 203              	.LVL23:
 204              	.L7:
 285:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     }
 286:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 287:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     // Set Payload length
 288:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     tx[1] = ((offset-3) & 0xFF00)>>8;
 205              		.loc 1 288 5 is_stmt 1 view .LVU60
 206              		.loc 1 288 21 is_stmt 0 view .LVU61
 207 00a4 F21E     		subs	r2, r6, #3
 208              		.loc 1 288 34 view .LVU62
ARM GAS  /tmp/ccrJoCXE.s 			page 10


 209 00a6 1212     		asrs	r2, r2, #8
 210              		.loc 1 288 11 view .LVU63
 211 00a8 0F4B     		ldr	r3, .L15+12
 212 00aa 5A70     		strb	r2, [r3, #1]
 289:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     tx[2] = ((offset-3) & 0x00FF);
 213              		.loc 1 289 5 is_stmt 1 view .LVU64
 214              		.loc 1 289 21 is_stmt 0 view .LVU65
 215 00ac F21E     		subs	r2, r6, #3
 216              		.loc 1 289 11 view .LVU66
 217 00ae 9A70     		strb	r2, [r3, #2]
 290:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 291:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     // Set N arguments
 292:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     //printf("Argc %d %x\r\n", argc, tx[3]);
 293:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     tx[4] = argc;
 218              		.loc 1 293 5 is_stmt 1 view .LVU67
 219              		.loc 1 293 11 is_stmt 0 view .LVU68
 220 00b0 1F71     		strb	r7, [r3, #4]
 221              	.LVL24:
 222              	.L2:
 223              		.loc 1 293 11 view .LVU69
 224              	.LBE3:
 294:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 295:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 296:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #ifdef SPI_VCOM
 297:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   switch(tx[3])
 298:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   {
 299:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   case CMD_ID_SCAN:
 300:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     IO_status_flag.AT_event_processing = WIFI_NO_EVENT;
 301:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     IO_status_flag.AT_vcom_processing = WIFI_SCAN_EVENT;
 302:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     break;
 303:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   default:
 304:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     IO_status_flag.AT_vcom_processing = WIFI_NO_EVENT;
 305:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     IO_status_flag.AT_event_processing = WIFI_NO_EVENT;
 306:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     break;
 307:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 308:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** #endif  
 309:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 310:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (data && len > 0) {
 225              		.loc 1 310 3 is_stmt 1 view .LVU70
 226              		.loc 1 310 6 is_stmt 0 view .LVU71
 227 00b2 B9F1000F 		cmp	r9, #0
 228 00b6 02D0     		beq	.L8
 229              		.loc 1 310 12 discriminator 1 view .LVU72
 230 00b8 B8F1000F 		cmp	r8, #0
 231 00bc 08DC     		bgt	.L14
 232              	.L8:
 311:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     /*TIme needed to make sure internal DMA has been re-programmed?*/
 312:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 313:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** // <------------------Work-around not required in FW1.1.0 beta------------------>
 314:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** //    for (localloop = 0 ; localloop < SPI_WRITE_DELAY ; localloop++)
 315:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** //    {
 316:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** //      no_op(*(volatile uint32_t*)0x20000000);
 317:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** //    }
 318:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     SPI_Send_AT_Command(offset-len, mode);//send the SPI cmd packet
 319:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     //printf("Sending data: %d\r\n", len);
 320:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     //SPI_Transmit_Manager_Poll(data, len);//now send the data
 321:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   } else
ARM GAS  /tmp/ccrJoCXE.s 			page 11


 322:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     SPI_Send_AT_Command(offset, mode);
 233              		.loc 1 322 5 is_stmt 1 view .LVU73
 234 00be 0A99     		ldr	r1, [sp, #40]
 235 00c0 3046     		mov	r0, r6
 236 00c2 FFF7FEFF 		bl	SPI_Send_AT_Command
 237              	.LVL25:
 238              	.L9:
 323:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 324:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 325:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   return (ConsoleErr)0;
 239              		.loc 1 325 3 view .LVU74
 326:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 240              		.loc 1 326 1 is_stmt 0 view .LVU75
 241 00c6 0020     		movs	r0, #0
 242 00c8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 243              	.LVL26:
 244              	.L10:
 255:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 245              		.loc 1 255 10 view .LVU76
 246 00cc 0526     		movs	r6, #5
 247 00ce F0E7     		b	.L2
 248              	.LVL27:
 249              	.L14:
 318:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     //printf("Sending data: %d\r\n", len);
 250              		.loc 1 318 5 is_stmt 1 view .LVU77
 251 00d0 0A99     		ldr	r1, [sp, #40]
 252 00d2 A6EB0800 		sub	r0, r6, r8
 253 00d6 FFF7FEFF 		bl	SPI_Send_AT_Command
 254              	.LVL28:
 255 00da F4E7     		b	.L9
 256              	.L16:
 257              		.align	2
 258              	.L15:
 259 00dc 04000000 		.word	WiFi_SPI_Packet+4
 260 00e0 00000000 		.word	.LANCHOR0
 261 00e4 00000000 		.word	.LC0
 262 00e8 00000000 		.word	WiFi_SPI_Packet
 263 00ec 04000000 		.word	.LC1
 264              		.cfi_endproc
 265              	.LFE282:
 267              		.section	.rodata.get_cmd_id.str1.4,"aMS",%progbits,1
 268              		.align	2
 269              	.LC2:
 270 0000 4572726F 		.ascii	"Error: command not found\000"
 270      723A2063 
 270      6F6D6D61 
 270      6E64206E 
 270      6F742066 
 271              		.section	.text.get_cmd_id,"ax",%progbits
 272              		.align	1
 273              		.global	get_cmd_id
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	get_cmd_id:
 280              	.LVL29:
ARM GAS  /tmp/ccrJoCXE.s 			page 12


 281              	.LFB279:
 165:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = 0;
 282              		.loc 1 165 27 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = 0;
 286              		.loc 1 165 27 is_stmt 0 view .LVU79
 287 0000 70B5     		push	{r4, r5, r6, lr}
 288              	.LCFI1:
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 4, -16
 291              		.cfi_offset 5, -12
 292              		.cfi_offset 6, -8
 293              		.cfi_offset 14, -4
 294 0002 0546     		mov	r5, r0
 166:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   
 295              		.loc 1 166 3 is_stmt 1 view .LVU80
 296              	.LVL30:
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 297              		.loc 1 168 4 view .LVU81
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 298              		.loc 1 168 11 is_stmt 0 view .LVU82
 299 0004 0024     		movs	r4, #0
 300              	.LVL31:
 301              	.L18:
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 302              		.loc 1 168 17 is_stmt 1 discriminator 1 view .LVU83
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 303              		.loc 1 168 24 is_stmt 0 discriminator 1 view .LVU84
 304 0006 04EB8403 		add	r3, r4, r4, lsl #2
 305 000a 0D4A     		ldr	r2, .L24
 306 000c 02EB8303 		add	r3, r2, r3, lsl #2
 307 0010 DE68     		ldr	r6, [r3, #12]
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 308              		.loc 1 168 4 discriminator 1 view .LVU85
 309 0012 5EB1     		cbz	r6, .L19
 169:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 				//cmd = (struct console_cmd *) &cmds[i];
 310              		.loc 1 169 4 is_stmt 1 view .LVU86
 169:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 				//cmd = (struct console_cmd *) &cmds[i];
 311              		.loc 1 169 28 is_stmt 0 view .LVU87
 312 0014 04EB8403 		add	r3, r4, r4, lsl #2
 169:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 				//cmd = (struct console_cmd *) &cmds[i];
 313              		.loc 1 169 9 view .LVU88
 314 0018 4022     		movs	r2, #64
 315 001a 2946     		mov	r1, r5
 316 001c 0848     		ldr	r0, .L24
 317 001e 50F82300 		ldr	r0, [r0, r3, lsl #2]
 318 0022 FFF7FEFF 		bl	strncasecmp
 319              	.LVL32:
 169:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 				//cmd = (struct console_cmd *) &cmds[i];
 320              		.loc 1 169 7 view .LVU89
 321 0026 08B1     		cbz	r0, .L19
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 322              		.loc 1 168 40 is_stmt 1 discriminator 2 view .LVU90
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 323              		.loc 1 168 41 is_stmt 0 discriminator 2 view .LVU91
ARM GAS  /tmp/ccrJoCXE.s 			page 13


 324 0028 0134     		adds	r4, r4, #1
 325              	.LVL33:
 168:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 			if (!strncasecmp(cmds[i].cmd, str, 64)) {
 326              		.loc 1 168 41 discriminator 2 view .LVU92
 327 002a ECE7     		b	.L18
 328              	.L19:
 175:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         printf("Error: command not found");
 329              		.loc 1 175 7 is_stmt 1 view .LVU93
 175:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         printf("Error: command not found");
 330              		.loc 1 175 10 is_stmt 0 view .LVU94
 331 002c 0EB1     		cbz	r6, .L23
 332              	.LVL34:
 333              	.L17:
 182:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 334              		.loc 1 182 1 view .LVU95
 335 002e 2046     		mov	r0, r4
 336 0030 70BD     		pop	{r4, r5, r6, pc}
 337              	.LVL35:
 338              	.L23:
 176:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         i = -1;
 339              		.loc 1 176 9 is_stmt 1 view .LVU96
 340 0032 0448     		ldr	r0, .L24+4
 341 0034 FFF7FEFF 		bl	printf
 342              	.LVL36:
 177:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       }
 343              		.loc 1 177 9 view .LVU97
 177:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       }
 344              		.loc 1 177 11 is_stmt 0 view .LVU98
 345 0038 4FF0FF34 		mov	r4, #-1
 181:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 346              		.loc 1 181 7 is_stmt 1 view .LVU99
 181:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 347              		.loc 1 181 14 is_stmt 0 view .LVU100
 348 003c F7E7     		b	.L17
 349              	.L25:
 350 003e 00BF     		.align	2
 351              	.L24:
 352 0040 00000000 		.word	.LANCHOR0
 353 0044 00000000 		.word	.LC2
 354              		.cfi_endproc
 355              	.LFE279:
 357              		.section	.text.get_cmd_string,"ax",%progbits
 358              		.align	1
 359              		.global	get_cmd_string
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
 365              	get_cmd_string:
 366              	.LVL37:
 367              	.LFB280:
 184:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = 0;
 368              		.loc 1 184 30 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 184:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int i = 0;
ARM GAS  /tmp/ccrJoCXE.s 			page 14


 372              		.loc 1 184 30 is_stmt 0 view .LVU102
 373 0000 10B5     		push	{r4, lr}
 374              	.LCFI2:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 185:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 378              		.loc 1 185 3 is_stmt 1 view .LVU103
 379              	.LVL38:
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 380              		.loc 1 187 3 view .LVU104
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 381              		.loc 1 187 10 is_stmt 0 view .LVU105
 382 0002 0024     		movs	r4, #0
 383              	.LVL39:
 384              	.L27:
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 385              		.loc 1 187 16 is_stmt 1 discriminator 1 view .LVU106
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 386              		.loc 1 187 23 is_stmt 0 discriminator 1 view .LVU107
 387 0004 04EB8403 		add	r3, r4, r4, lsl #2
 388 0008 0C4A     		ldr	r2, .L33
 389 000a 02EB8303 		add	r3, r2, r3, lsl #2
 390 000e D968     		ldr	r1, [r3, #12]
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 391              		.loc 1 187 3 discriminator 1 view .LVU108
 392 0010 49B1     		cbz	r1, .L28
 188:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       break;
 393              		.loc 1 188 5 is_stmt 1 view .LVU109
 188:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       break;
 394              		.loc 1 188 16 is_stmt 0 view .LVU110
 395 0012 04EB8403 		add	r3, r4, r4, lsl #2
 396 0016 094A     		ldr	r2, .L33
 397 0018 02EB8303 		add	r3, r2, r3, lsl #2
 398 001c 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 188:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       break;
 399              		.loc 1 188 8 view .LVU111
 400 001e 8342     		cmp	r3, r0
 401 0020 01D0     		beq	.L28
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 402              		.loc 1 187 39 is_stmt 1 discriminator 2 view .LVU112
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 403              		.loc 1 187 40 is_stmt 0 discriminator 2 view .LVU113
 404 0022 0134     		adds	r4, r4, #1
 405              	.LVL40:
 187:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if (cmds[i].id == id) {
 406              		.loc 1 187 40 discriminator 2 view .LVU114
 407 0024 EEE7     		b	.L27
 408              	.L28:
 193:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     printf("Error: command not found");
 409              		.loc 1 193 3 is_stmt 1 view .LVU115
 193:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     printf("Error: command not found");
 410              		.loc 1 193 6 is_stmt 0 view .LVU116
 411 0026 29B1     		cbz	r1, .L32
 412              	.LVL41:
 413              	.L30:
 197:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
ARM GAS  /tmp/ccrJoCXE.s 			page 15


 414              		.loc 1 197 3 is_stmt 1 view .LVU117
 197:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 415              		.loc 1 197 17 is_stmt 0 view .LVU118
 416 0028 04EB8404 		add	r4, r4, r4, lsl #2
 417              	.LVL42:
 198:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 418              		.loc 1 198 1 view .LVU119
 419 002c 034B     		ldr	r3, .L33
 420 002e 53F82400 		ldr	r0, [r3, r4, lsl #2]
 421 0032 10BD     		pop	{r4, pc}
 422              	.LVL43:
 423              	.L32:
 194:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 424              		.loc 1 194 5 is_stmt 1 view .LVU120
 425 0034 0248     		ldr	r0, .L33+4
 426              	.LVL44:
 194:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 427              		.loc 1 194 5 is_stmt 0 view .LVU121
 428 0036 FFF7FEFF 		bl	printf
 429              	.LVL45:
 430 003a F5E7     		b	.L30
 431              	.L34:
 432              		.align	2
 433              	.L33:
 434 003c 00000000 		.word	.LANCHOR0
 435 0040 00000000 		.word	.LC2
 436              		.cfi_endproc
 437              	.LFE280:
 439              		.section	.rodata.run_spi_cmd.str1.4,"aMS",%progbits,1
 440              		.align	2
 441              	.LC3:
 442 0000 256400   		.ascii	"%d\000"
 443 0003 00       		.align	2
 444              	.LC4:
 445 0004 41542B53 		.ascii	"AT+S.INPUTSSI\000"
 445      2E494E50 
 445      55545353 
 445      4900
 446              		.section	.text.run_spi_cmd,"ax",%progbits
 447              		.align	1
 448              		.global	run_spi_cmd
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	run_spi_cmd:
 455              	.LVL46:
 456              	.LFB281:
 201:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // Split command stings and arguments
 457              		.loc 1 201 37 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 201:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   // Split command stings and arguments
 461              		.loc 1 201 37 is_stmt 0 view .LVU123
 462 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 463              	.LCFI3:
ARM GAS  /tmp/ccrJoCXE.s 			page 16


 464              		.cfi_def_cfa_offset 24
 465              		.cfi_offset 4, -24
 466              		.cfi_offset 5, -20
 467              		.cfi_offset 6, -16
 468              		.cfi_offset 7, -12
 469              		.cfi_offset 8, -8
 470              		.cfi_offset 14, -4
 471 0004 84B0     		sub	sp, sp, #16
 472              	.LCFI4:
 473              		.cfi_def_cfa_offset 40
 474 0006 0546     		mov	r5, r0
 475 0008 0F46     		mov	r7, r1
 203:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *data = strstr(str, " ");
 476              		.loc 1 203 3 is_stmt 1 view .LVU124
 203:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *data = strstr(str, " ");
 477              		.loc 1 203 16 is_stmt 0 view .LVU125
 478 000a 3D21     		movs	r1, #61
 479              	.LVL47:
 203:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *data = strstr(str, " ");
 480              		.loc 1 203 16 view .LVU126
 481 000c FFF7FEFF 		bl	strchr
 482              	.LVL48:
 203:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   char *data = strstr(str, " ");
 483              		.loc 1 203 16 view .LVU127
 484 0010 0446     		mov	r4, r0
 485              	.LVL49:
 204:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int len = 0;
 486              		.loc 1 204 3 is_stmt 1 view .LVU128
 204:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int len = 0;
 487              		.loc 1 204 16 is_stmt 0 view .LVU129
 488 0012 2021     		movs	r1, #32
 489 0014 2846     		mov	r0, r5
 490              	.LVL50:
 204:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   int len = 0;
 491              		.loc 1 204 16 view .LVU130
 492 0016 FFF7FEFF 		bl	strchr
 493              	.LVL51:
 494 001a 0646     		mov	r6, r0
 495              	.LVL52:
 205:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 496              		.loc 1 205 3 is_stmt 1 view .LVU131
 205:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 497              		.loc 1 205 7 is_stmt 0 view .LVU132
 498 001c 0023     		movs	r3, #0
 499 001e 0393     		str	r3, [sp, #12]
 207:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     *args = '\0';
 500              		.loc 1 207 3 is_stmt 1 view .LVU133
 207:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     *args = '\0';
 501              		.loc 1 207 6 is_stmt 0 view .LVU134
 502 0020 0CB1     		cbz	r4, .L36
 208:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     args += 1;
 503              		.loc 1 208 5 is_stmt 1 view .LVU135
 208:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     args += 1;
 504              		.loc 1 208 11 is_stmt 0 view .LVU136
 505 0022 04F8013B 		strb	r3, [r4], #1
 506              	.LVL53:
 209:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
ARM GAS  /tmp/ccrJoCXE.s 			page 17


 507              		.loc 1 209 5 is_stmt 1 view .LVU137
 508              	.L36:
 212:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     *data = '\0';
 509              		.loc 1 212 3 view .LVU138
 212:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     *data = '\0';
 510              		.loc 1 212 6 is_stmt 0 view .LVU139
 511 0026 66B1     		cbz	r6, .L37
 512              	.LBB4:
 213:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     data += 1;
 513              		.loc 1 213 5 is_stmt 1 view .LVU140
 213:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     data += 1;
 514              		.loc 1 213 11 is_stmt 0 view .LVU141
 515 0028 0023     		movs	r3, #0
 516 002a 06F8013B 		strb	r3, [r6], #1
 214:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 517              		.loc 1 214 5 is_stmt 1 view .LVU142
 518              	.LVL54:
 218:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if(ptr!=NULL)
 519              		.loc 1 218 5 view .LVU143
 218:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     if(ptr!=NULL)
 520              		.loc 1 218 17 is_stmt 0 view .LVU144
 521 002e 2C21     		movs	r1, #44
 522 0030 2046     		mov	r0, r4
 523 0032 FFF7FEFF 		bl	strrchr
 524              	.LVL55:
 219:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       sscanf(ptr+1,"%d",&len);
 525              		.loc 1 219 5 is_stmt 1 view .LVU145
 219:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****       sscanf(ptr+1,"%d",&len);
 526              		.loc 1 219 7 is_stmt 0 view .LVU146
 527 0036 D0B1     		cbz	r0, .L38
 220:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     /* format of INPUTSSI command is at+s.<cmd> = DATALENGTH "DATA"
 528              		.loc 1 220 7 is_stmt 1 view .LVU147
 529 0038 03AA     		add	r2, sp, #12
 530 003a 1249     		ldr	r1, .L41
 531 003c 0130     		adds	r0, r0, #1
 532              	.LVL56:
 220:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     /* format of INPUTSSI command is at+s.<cmd> = DATALENGTH "DATA"
 533              		.loc 1 220 7 is_stmt 0 view .LVU148
 534 003e FFF7FEFF 		bl	sscanf
 535              	.LVL57:
 536              	.L37:
 220:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     /* format of INPUTSSI command is at+s.<cmd> = DATALENGTH "DATA"
 537              		.loc 1 220 7 view .LVU149
 538              	.LBE4:
 227:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (i>=0){
 539              		.loc 1 227 3 is_stmt 1 view .LVU150
 227:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   if (i>=0){
 540              		.loc 1 227 11 is_stmt 0 view .LVU151
 541 0042 2846     		mov	r0, r5
 542 0044 FFF7FEFF 		bl	get_cmd_id
 543              	.LVL58:
 228:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     cmds[i].func(i, args, data, len, mode);
 544              		.loc 1 228 3 is_stmt 1 view .LVU152
 228:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     cmds[i].func(i, args, data, len, mode);
 545              		.loc 1 228 6 is_stmt 0 view .LVU153
 546 0048 051E     		subs	r5, r0, #0
 547              	.LVL59:
ARM GAS  /tmp/ccrJoCXE.s 			page 18


 228:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****     cmds[i].func(i, args, data, len, mode);
 548              		.loc 1 228 6 view .LVU154
 549 004a 0CDB     		blt	.L35
 229:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 550              		.loc 1 229 5 is_stmt 1 view .LVU155
 229:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 551              		.loc 1 229 12 is_stmt 0 view .LVU156
 552 004c 05EB8503 		add	r3, r5, r5, lsl #2
 553 0050 0D4A     		ldr	r2, .L41+4
 554 0052 02EB8303 		add	r3, r2, r3, lsl #2
 555 0056 D3F80C80 		ldr	r8, [r3, #12]
 229:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 556              		.loc 1 229 5 view .LVU157
 557 005a 0097     		str	r7, [sp]
 558 005c 039B     		ldr	r3, [sp, #12]
 559 005e 3246     		mov	r2, r6
 560 0060 2146     		mov	r1, r4
 561 0062 2846     		mov	r0, r5
 229:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 562              		.loc 1 229 5 view .LVU158
 563 0064 C047     		blx	r8
 564              	.LVL60:
 232:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** }
 565              		.loc 1 232 3 is_stmt 1 view .LVU159
 566              	.L35:
 233:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c **** 
 567              		.loc 1 233 1 is_stmt 0 view .LVU160
 568 0066 2846     		mov	r0, r5
 569 0068 04B0     		add	sp, sp, #16
 570              	.LCFI5:
 571              		.cfi_remember_state
 572              		.cfi_def_cfa_offset 24
 573              		@ sp needed
 574 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 575              	.LVL61:
 576              	.L38:
 577              	.LCFI6:
 578              		.cfi_restore_state
 579              	.LBB5:
 223:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         len = atoi(args);
 580              		.loc 1 223 10 is_stmt 1 view .LVU161
 223:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         len = atoi(args);
 581              		.loc 1 223 13 is_stmt 0 view .LVU162
 582 006e 0749     		ldr	r1, .L41+8
 583 0070 2846     		mov	r0, r5
 584              	.LVL62:
 223:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         len = atoi(args);
 585              		.loc 1 223 13 view .LVU163
 586 0072 FFF7FEFF 		bl	strstr
 587              	.LVL63:
 223:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****         len = atoi(args);
 588              		.loc 1 223 12 view .LVU164
 589 0076 0028     		cmp	r0, #0
 590 0078 E3D0     		beq	.L37
 224:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 591              		.loc 1 224 9 is_stmt 1 view .LVU165
 224:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
ARM GAS  /tmp/ccrJoCXE.s 			page 19


 592              		.loc 1 224 15 is_stmt 0 view .LVU166
 593 007a 2046     		mov	r0, r4
 594 007c FFF7FEFF 		bl	atoi
 595              	.LVL64:
 224:Middlewares/ST/STM32_SPWF0xSy/Utils/spwf04WiFi.c ****   }
 596              		.loc 1 224 13 view .LVU167
 597 0080 0390     		str	r0, [sp, #12]
 598 0082 DEE7     		b	.L37
 599              	.L42:
 600              		.align	2
 601              	.L41:
 602 0084 00000000 		.word	.LC3
 603 0088 00000000 		.word	.LANCHOR0
 604 008c 04000000 		.word	.LC4
 605              	.LBE5:
 606              		.cfi_endproc
 607              	.LFE281:
 609              		.section	.rodata.str1.4,"aMS",%progbits,1
 610              		.align	2
 611              	.LC5:
 612 0000 415400   		.ascii	"AT\000"
 613 0003 00       		.align	2
 614              	.LC6:
 615 0004 4E756C6C 		.ascii	"Null command, always returns OK\000"
 615      20636F6D 
 615      6D616E64 
 615      2C20616C 
 615      77617973 
 616              		.align	2
 617              	.LC7:
 618 0024 41542B53 		.ascii	"AT+S.HELP\000"
 618      2E48454C 
 618      5000
 619 002e 0000     		.align	2
 620              	.LC8:
 621 0030 5B3D3C63 		.ascii	"[=<command>]\000"
 621      6F6D6D61 
 621      6E643E5D 
 621      00
 622 003d 000000   		.align	2
 623              	.LC9:
 624 0040 44697370 		.ascii	"Display AT-Command information [on a specific comma"
 624      6C617920 
 624      41542D43 
 624      6F6D6D61 
 624      6E642069 
 625 0073 6E645D00 		.ascii	"nd]\000"
 626 0077 00       		.align	2
 627              	.LC10:
 628 0078 41542B53 		.ascii	"AT+S.RESET\000"
 628      2E524553 
 628      455400
 629 0083 00       		.align	2
 630              	.LC11:
 631 0084 50726F76 		.ascii	"Provide a software reset\000"
 631      69646520 
 631      6120736F 
ARM GAS  /tmp/ccrJoCXE.s 			page 20


 631      66747761 
 631      72652072 
 632 009d 000000   		.align	2
 633              	.LC12:
 634 00a0 41542B53 		.ascii	"AT+S.PMS\000"
 634      2E504D53 
 634      00
 635 00a9 000000   		.align	2
 636              	.LC13:
 637 00ac 3D3C307C 		.ascii	"=<0|1|2|3>\000"
 637      317C327C 
 637      333E00
 638 00b7 00       		.align	2
 639              	.LC14:
 640 00b8 456E6162 		.ascii	"Enable active/powersave/stop/standby power modes\000"
 640      6C652061 
 640      63746976 
 640      652F706F 
 640      77657273 
 641 00e9 000000   		.align	2
 642              	.LC15:
 643 00ec 41542B53 		.ascii	"AT+S.STS\000"
 643      2E535453 
 643      00
 644 00f5 000000   		.align	2
 645              	.LC16:
 646 00f8 5B3D3C73 		.ascii	"[=<sts_var>]\000"
 646      74735F76 
 646      61723E5D 
 646      00
 647 0105 000000   		.align	2
 648              	.LC17:
 649 0108 5265706F 		.ascii	"Report [single] status/statistic\000"
 649      7274205B 
 649      73696E67 
 649      6C655D20 
 649      73746174 
 650 0129 000000   		.align	2
 651              	.LC18:
 652 012c 41542B53 		.ascii	"AT+S.RTOSSTS\000"
 652      2E52544F 
 652      53535453 
 652      00
 653 0139 000000   		.align	2
 654              	.LC19:
 655 013c 5265706F 		.ascii	"Report status/statistics of RTOS\000"
 655      72742073 
 655      74617475 
 655      732F7374 
 655      61746973 
 656 015d 000000   		.align	2
 657              	.LC20:
 658 0160 41542B53 		.ascii	"AT+S.SSXSTS\000"
 658      2E535358 
 658      53545300 
 659              		.align	2
 660              	.LC21:
ARM GAS  /tmp/ccrJoCXE.s 			page 21


 661 016c 5265706F 		.ascii	"Report status/statistics of TCP/IP\000"
 661      72742073 
 661      74617475 
 661      732F7374 
 661      61746973 
 662 018f 00       		.align	2
 663              	.LC22:
 664 0190 41542B53 		.ascii	"AT+S.PYTHON\000"
 664      2E505954 
 664      484F4E00 
 665              		.align	2
 666              	.LC23:
 667 019c 5B3D3C66 		.ascii	"[=<filename>]\000"
 667      696C656E 
 667      616D653E 
 667      5D00
 668 01aa 0000     		.align	2
 669              	.LC24:
 670 01ac 456E7465 		.ascii	"Enter interactive uPhyton shell\000"
 670      7220696E 
 670      74657261 
 670      63746976 
 670      65207550 
 671              		.align	2
 672              	.LC25:
 673 01cc 41542B53 		.ascii	"AT+S.GCFG\000"
 673      2E474346 
 673      4700
 674 01d6 0000     		.align	2
 675              	.LC26:
 676 01d8 5B3D3C63 		.ascii	"[=<cfg_var>]\000"
 676      66675F76 
 676      61723E5D 
 676      00
 677 01e5 000000   		.align	2
 678              	.LC27:
 679 01e8 5265706F 		.ascii	"Report [single] configuration variables\000"
 679      7274205B 
 679      73696E67 
 679      6C655D20 
 679      636F6E66 
 680              		.align	2
 681              	.LC28:
 682 0210 41542B53 		.ascii	"AT+S.SCFG\000"
 682      2E534346 
 682      4700
 683 021a 0000     		.align	2
 684              	.LC29:
 685 021c 3D3C6B65 		.ascii	"=<key>,<value>\000"
 685      793E2C3C 
 685      76616C75 
 685      653E00
 686 022b 00       		.align	2
 687              	.LC30:
 688 022c 53657420 		.ascii	"Set configuration variable\000"
 688      636F6E66 
 688      69677572 
ARM GAS  /tmp/ccrJoCXE.s 			page 22


 688      6174696F 
 688      6E207661 
 689 0247 00       		.align	2
 690              	.LC31:
 691 0248 41542B53 		.ascii	"AT+S.WCFG\000"
 691      2E574346 
 691      4700
 692 0252 0000     		.align	2
 693              	.LC32:
 694 0254 53617665 		.ascii	"Save configuration variables to flash\000"
 694      20636F6E 
 694      66696775 
 694      72617469 
 694      6F6E2076 
 695 027a 0000     		.align	2
 696              	.LC33:
 697 027c 41542B53 		.ascii	"AT+S.FCFG\000"
 697      2E464346 
 697      4700
 698 0286 0000     		.align	2
 699              	.LC34:
 700 0288 52657374 		.ascii	"Restore factory configuration variables from flash\000"
 700      6F726520 
 700      66616374 
 700      6F727920 
 700      636F6E66 
 701 02bb 00       		.align	2
 702              	.LC35:
 703 02bc 41542B53 		.ascii	"AT+S.NVW\000"
 703      2E4E5657 
 703      00
 704 02c5 000000   		.align	2
 705              	.LC36:
 706 02c8 3D3C6D61 		.ascii	"=<magic>\000"
 706      6769633E 
 706      00
 707 02d1 000000   		.align	2
 708              	.LC37:
 709 02d4 53617665 		.ascii	"Save factory configuration variables to flash\000"
 709      20666163 
 709      746F7279 
 709      20636F6E 
 709      66696775 
 710 0302 0000     		.align	2
 711              	.LC38:
 712 0304 41542B53 		.ascii	"AT+S.MFGTEST\000"
 712      2E4D4647 
 712      54455354 
 712      00
 713 0311 000000   		.align	2
 714              	.LC39:
 715 0314 3D3C6D61 		.ascii	"=<magic>,<low|high|HSI|SYS>\000"
 715      6769633E 
 715      2C3C6C6F 
 715      777C6869 
 715      67687C48 
 716              		.align	2
ARM GAS  /tmp/ccrJoCXE.s 			page 23


 717              	.LC40:
 718 0330 50657266 		.ascii	"Perform Manufacturing Self-Tests\000"
 718      6F726D20 
 718      4D616E75 
 718      66616374 
 718      7572696E 
 719 0351 000000   		.align	2
 720              	.LC41:
 721 0354 41542B53 		.ascii	"AT+S.TIME\000"
 721      2E54494D 
 721      4500
 722 035e 0000     		.align	2
 723              	.LC42:
 724 0360 5B3D3C74 		.ascii	"[=<time>]\000"
 724      696D653E 
 724      5D00
 725 036a 0000     		.align	2
 726              	.LC43:
 727 036c 4765742F 		.ascii	"Get/Set current time in seconds\000"
 727      53657420 
 727      63757272 
 727      656E7420 
 727      74696D65 
 728              		.align	2
 729              	.LC44:
 730 038c 41542B53 		.ascii	"AT+S.RANDOM\000"
 730      2E52414E 
 730      444F4D00 
 731              		.align	2
 732              	.LC45:
 733 0398 50726F76 		.ascii	"Provide a new random number\000"
 733      69646520 
 733      61206E65 
 733      77207261 
 733      6E646F6D 
 734              		.align	2
 735              	.LC46:
 736 03b4 41542B53 		.ascii	"AT+S.GPIOC\000"
 736      2E475049 
 736      4F4300
 737 03bf 00       		.align	2
 738              	.LC47:
 739 03c0 3D3C6E75 		.ascii	"=<num>,<in|out>,<r|f|b>\000"
 739      6D3E2C3C 
 739      696E7C6F 
 739      75743E2C 
 739      3C727C66 
 740              		.align	2
 741              	.LC48:
 742 03d8 436F6E66 		.ascii	"Configure specified GPIO\000"
 742      69677572 
 742      65207370 
 742      65636966 
 742      69656420 
 743 03f1 000000   		.align	2
 744              	.LC49:
 745 03f4 41542B53 		.ascii	"AT+S.GPIOR\000"
ARM GAS  /tmp/ccrJoCXE.s 			page 24


 745      2E475049 
 745      4F5200
 746 03ff 00       		.align	2
 747              	.LC50:
 748 0400 3D3C6E75 		.ascii	"=<num>\000"
 748      6D3E00
 749 0407 00       		.align	2
 750              	.LC51:
 751 0408 52656164 		.ascii	"Read specified GPIO\000"
 751      20737065 
 751      63696669 
 751      65642047 
 751      50494F00 
 752              		.align	2
 753              	.LC52:
 754 041c 41542B53 		.ascii	"AT+S.GPIOW\000"
 754      2E475049 
 754      4F5700
 755 0427 00       		.align	2
 756              	.LC53:
 757 0428 3D3C6E75 		.ascii	"=<num>,<val>\000"
 757      6D3E2C3C 
 757      76616C3E 
 757      00
 758 0435 000000   		.align	2
 759              	.LC54:
 760 0438 57726974 		.ascii	"Write specified GPIO\000"
 760      65207370 
 760      65636966 
 760      69656420 
 760      4750494F 
 761 044d 000000   		.align	2
 762              	.LC55:
 763 0450 41542B53 		.ascii	"AT+S.DAC\000"
 763      2E444143 
 763      00
 764 0459 000000   		.align	2
 765              	.LC56:
 766 045c 3D3C307C 		.ascii	"=<0|value>\000"
 766      76616C75 
 766      653E00
 767 0467 00       		.align	2
 768              	.LC57:
 769 0468 44697361 		.ascii	"Disable/Enable DAC on GPIO15\000"
 769      626C652F 
 769      456E6162 
 769      6C652044 
 769      4143206F 
 770 0485 000000   		.align	2
 771              	.LC58:
 772 0488 41542B53 		.ascii	"AT+S.ADC\000"
 772      2E414443 
 772      00
 773 0491 000000   		.align	2
 774              	.LC59:
 775 0494 52656164 		.ascii	"Read ADC value on GPIO1\000"
 775      20414443 
ARM GAS  /tmp/ccrJoCXE.s 			page 25


 775      2076616C 
 775      7565206F 
 775      6E204750 
 776              		.align	2
 777              	.LC60:
 778 04ac 41542B53 		.ascii	"AT+S.PWM\000"
 778      2E50574D 
 778      00
 779 04b5 000000   		.align	2
 780              	.LC61:
 781 04b8 3D667265 		.ascii	"=frequency,duty_cycle\000"
 781      7175656E 
 781      63792C64 
 781      7574795F 
 781      6379636C 
 782 04ce 0000     		.align	2
 783              	.LC62:
 784 04d0 53657420 		.ascii	"Set PWM on GPIO2\000"
 784      50574D20 
 784      6F6E2047 
 784      50494F32 
 784      00
 785 04e1 000000   		.align	2
 786              	.LC63:
 787 04e4 41542B53 		.ascii	"AT+S.FSU\000"
 787      2E465355 
 787      00
 788 04ed 000000   		.align	2
 789              	.LC64:
 790 04f0 556E6D6F 		.ascii	"Unmount/Erase Volume\000"
 790      756E742F 
 790      45726173 
 790      6520566F 
 790      6C756D65 
 791 0505 000000   		.align	2
 792              	.LC65:
 793 0508 41542B53 		.ascii	"AT+S.FSC\000"
 793      2E465343 
 793      00
 794 0511 000000   		.align	2
 795              	.LC66:
 796 0514 3D3C6669 		.ascii	"=<filename>,<datalen><CR><data>\000"
 796      6C656E61 
 796      6D653E2C 
 796      3C646174 
 796      616C656E 
 797              		.align	2
 798              	.LC67:
 799 0534 43726561 		.ascii	"Create a file/Append to an existing file\000"
 799      74652061 
 799      2066696C 
 799      652F4170 
 799      70656E64 
 800 055d 000000   		.align	2
 801              	.LC68:
 802 0560 41542B53 		.ascii	"AT+S.FSD\000"
 802      2E465344 
ARM GAS  /tmp/ccrJoCXE.s 			page 26


 802      00
 803 0569 000000   		.align	2
 804              	.LC69:
 805 056c 3D3C6669 		.ascii	"=<filename>\000"
 805      6C656E61 
 805      6D653E00 
 806              		.align	2
 807              	.LC70:
 808 0578 44656C65 		.ascii	"Delete an existing file\000"
 808      74652061 
 808      6E206578 
 808      69737469 
 808      6E672066 
 809              		.align	2
 810              	.LC71:
 811 0590 41542B53 		.ascii	"AT+S.FSR\000"
 811      2E465352 
 811      00
 812 0599 000000   		.align	2
 813              	.LC72:
 814 059c 3D3C6F6C 		.ascii	"=<old_filename>,<new_filename>\000"
 814      645F6669 
 814      6C656E61 
 814      6D653E2C 
 814      3C6E6577 
 815 05bb 00       		.align	2
 816              	.LC73:
 817 05bc 52656E61 		.ascii	"Rename an existing file\000"
 817      6D652061 
 817      6E206578 
 817      69737469 
 817      6E672066 
 818              		.align	2
 819              	.LC74:
 820 05d4 41542B53 		.ascii	"AT+S.FSL\000"
 820      2E46534C 
 820      00
 821 05dd 000000   		.align	2
 822              	.LC75:
 823 05e0 4C697374 		.ascii	"List existing filename(s)\000"
 823      20657869 
 823      7374696E 
 823      67206669 
 823      6C656E61 
 824 05fa 0000     		.align	2
 825              	.LC76:
 826 05fc 41542B53 		.ascii	"AT+S.FSP\000"
 826      2E465350 
 826      00
 827 0605 000000   		.align	2
 828              	.LC77:
 829 0608 3D3C6669 		.ascii	"=<filename>,<offset>,<length>\000"
 829      6C656E61 
 829      6D653E2C 
 829      3C6F6666 
 829      7365743E 
 830 0626 0000     		.align	2
ARM GAS  /tmp/ccrJoCXE.s 			page 27


 831              	.LC78:
 832 0628 5072696E 		.ascii	"Print the contents of an existing file\000"
 832      74207468 
 832      6520636F 
 832      6E74656E 
 832      7473206F 
 833 064f 00       		.align	2
 834              	.LC79:
 835 0650 41542B53 		.ascii	"AT+S.HASH\000"
 835      2E484153 
 835      4800
 836 065a 0000     		.align	2
 837              	.LC80:
 838 065c 3D3C6675 		.ascii	"=<functions,<filename>\000"
 838      6E637469 
 838      6F6E732C 
 838      3C66696C 
 838      656E616D 
 839 0673 00       		.align	2
 840              	.LC81:
 841 0674 436F6D70 		.ascii	"Compute Digest\000"
 841      75746520 
 841      44696765 
 841      737400
 842 0683 00       		.align	2
 843              	.LC82:
 844 0684 41542B53 		.ascii	"AT+S.WPAECERT\000"
 844      2E575041 
 844      45434552 
 844      5400
 845 0692 0000     		.align	2
 846              	.LC83:
 847 0694 3D3C6361 		.ascii	"=<ca|cert|key|auth|content>,<length|option>\000"
 847      7C636572 
 847      747C6B65 
 847      797C6175 
 847      74687C63 
 848              		.align	2
 849              	.LC84:
 850 06c0 436F6E66 		.ascii	"Configure/Get/Clean WPA-Enterprise certificates\000"
 850      69677572 
 850      652F4765 
 850      742F436C 
 850      65616E20 
 851              		.align	2
 852              	.LC85:
 853 06f0 41542B53 		.ascii	"AT+S.TLSCERT\000"
 853      2E544C53 
 853      43455254 
 853      00
 854 06fd 000000   		.align	2
 855              	.LC86:
 856 0700 436F6E66 		.ascii	"Configure/Get/Clean TLS certificates\000"
 856      69677572 
 856      652F4765 
 856      742F436C 
 856      65616E20 
ARM GAS  /tmp/ccrJoCXE.s 			page 28


 857 0725 000000   		.align	2
 858              	.LC87:
 859 0728 41542B53 		.ascii	"AT+S.WIFI\000"
 859      2E574946 
 859      4900
 860 0732 0000     		.align	2
 861              	.LC88:
 862 0734 3D3C307C 		.ascii	"=<0|1>\000"
 862      313E00
 863 073b 00       		.align	2
 864              	.LC89:
 865 073c 44697361 		.ascii	"Disable/Enable WiFi radio\000"
 865      626C652F 
 865      456E6162 
 865      6C652057 
 865      69466920 
 866 0756 0000     		.align	2
 867              	.LC90:
 868 0758 41542B53 		.ascii	"AT+S.SCAN\000"
 868      2E534341 
 868      4E00
 869 0762 0000     		.align	2
 870              	.LC91:
 871 0764 3D3C647C 		.ascii	"=<d|s|m>,<filename>\000"
 871      737C6D3E 
 871      2C3C6669 
 871      6C656E61 
 871      6D653E00 
 872              		.align	2
 873              	.LC92:
 874 0778 50657266 		.ascii	"Perform a scan with/out filter on SSID/MAC\000"
 874      6F726D20 
 874      61207363 
 874      616E2077 
 874      6974682F 
 875 07a3 00       		.align	2
 876              	.LC93:
 877 07a4 41542B53 		.ascii	"AT+S.SSIDTXT\000"
 877      2E535349 
 877      44545854 
 877      00
 878 07b1 000000   		.align	2
 879              	.LC94:
 880 07b4 5B3D3C73 		.ascii	"[=<ssidtxt>]\000"
 880      73696474 
 880      78743E5D 
 880      00
 881 07c1 000000   		.align	2
 882              	.LC95:
 883 07c4 4765742F 		.ascii	"Get/Set an ASCII SSID\000"
 883      53657420 
 883      616E2041 
 883      53434949 
 883      20535349 
 884 07da 0000     		.align	2
 885              	.LC96:
 886 07dc 41542B53 		.ascii	"AT+S.PEERS\000"
ARM GAS  /tmp/ccrJoCXE.s 			page 29


 886      2E504545 
 886      525300
 887 07e7 00       		.align	2
 888              	.LC97:
 889 07e8 5B3D7065 		.ascii	"[=peer_number[,peer_var]]\000"
 889      65725F6E 
 889      756D6265 
 889      725B2C70 
 889      6565725F 
 890 0802 0000     		.align	2
 891              	.LC98:
 892 0804 44756D70 		.ascii	"Dump contents of the peer table\000"
 892      20636F6E 
 892      74656E74 
 892      73206F66 
 892      20746865 
 893              		.align	2
 894              	.LC99:
 895 0824 41542B53 		.ascii	"AT+S.WPS\000"
 895      2E575053 
 895      00
 896 082d 000000   		.align	2
 897              	.LC100:
 898 0830 5B3D3C38 		.ascii	"[=<8-digit pin>]\000"
 898      2D646967 
 898      69742070 
 898      696E3E5D 
 898      00
 899 0841 000000   		.align	2
 900              	.LC101:
 901 0844 496E6974 		.ascii	"Initiate a WPS exchange\000"
 901      69617465 
 901      20612057 
 901      50532065 
 901      78636861 
 902              		.align	2
 903              	.LC102:
 904 085c 41542B53 		.ascii	"AT+S.RENEW\000"
 904      2E52454E 
 904      455700
 905 0867 00       		.align	2
 906              	.LC103:
 907 0868 53656E64 		.ascii	"Send an IPv4 Address Renew Request\000"
 907      20616E20 
 907      49507634 
 907      20416464 
 907      72657373 
 908 088b 00       		.align	2
 909              	.LC104:
 910 088c 41542B53 		.ascii	"AT+S.NTP\000"
 910      2E4E5450 
 910      00
 911 0895 000000   		.align	2
 912              	.LC105:
 913 0898 466F7263 		.ascii	"Force an NTP Query\000"
 913      6520616E 
 913      204E5450 
ARM GAS  /tmp/ccrJoCXE.s 			page 30


 913      20517565 
 913      727900
 914 08ab 00       		.align	2
 915              	.LC106:
 916 08ac 41542B53 		.ascii	"AT+S.PING\000"
 916      2E50494E 
 916      4700
 917 08b6 0000     		.align	2
 918              	.LC107:
 919 08b8 3D3C636F 		.ascii	"=<count>,<size>,<hostname>,<IPv>\000"
 919      756E743E 
 919      2C3C7369 
 919      7A653E2C 
 919      3C686F73 
 920 08d9 000000   		.align	2
 921              	.LC108:
 922 08dc 53656E64 		.ascii	"Send pings to specified host\000"
 922      2070696E 
 922      67732074 
 922      6F207370 
 922      65636966 
 923 08f9 000000   		.align	2
 924              	.LC109:
 925 08fc 41542B53 		.ascii	"AT+S.SOCKON\000"
 925      2E534F43 
 925      4B4F4E00 
 926              		.align	2
 927              	.LC110:
 928 0908 3D3C686F 		.ascii	"=<hostname>,<IPv>,<port>,<TCP local port>,<t|u>\000"
 928      73746E61 
 928      6D653E2C 
 928      3C495076 
 928      3E2C3C70 
 929              		.align	2
 930              	.LC111:
 931 0938 4F70656E 		.ascii	"Open a socket client\000"
 931      20612073 
 931      6F636B65 
 931      7420636C 
 931      69656E74 
 932 094d 000000   		.align	2
 933              	.LC112:
 934 0950 41542B53 		.ascii	"AT+S.SOCKQ\000"
 934      2E534F43 
 934      4B5100
 935 095b 00       		.align	2
 936              	.LC113:
 937 095c 3D3C6964 		.ascii	"=<id>\000"
 937      3E00
 938 0962 0000     		.align	2
 939              	.LC114:
 940 0964 51756572 		.ascii	"Query socket client for pending data\000"
 940      7920736F 
 940      636B6574 
 940      20636C69 
 940      656E7420 
 941 0989 000000   		.align	2
ARM GAS  /tmp/ccrJoCXE.s 			page 31


 942              	.LC115:
 943 098c 41542B53 		.ascii	"AT+S.SOCKC\000"
 943      2E534F43 
 943      4B4300
 944 0997 00       		.align	2
 945              	.LC116:
 946 0998 436C6F73 		.ascii	"Close socket client\000"
 946      6520736F 
 946      636B6574 
 946      20636C69 
 946      656E7400 
 947              		.align	2
 948              	.LC117:
 949 09ac 41542B53 		.ascii	"AT+S.SOCKW\000"
 949      2E534F43 
 949      4B5700
 950 09b7 00       		.align	2
 951              	.LC118:
 952 09b8 3D3C6964 		.ascii	"=<id>,<len>\000"
 952      3E2C3C6C 
 952      656E3E00 
 953              		.align	2
 954              	.LC119:
 955 09c4 57726974 		.ascii	"Write data to socket client\000"
 955      65206461 
 955      74612074 
 955      6F20736F 
 955      636B6574 
 956              		.align	2
 957              	.LC120:
 958 09e0 41542B53 		.ascii	"AT+S.SOCKR\000"
 958      2E534F43 
 958      4B5200
 959 09eb 00       		.align	2
 960              	.LC121:
 961 09ec 52656164 		.ascii	"Read data from socket client\000"
 961      20646174 
 961      61206672 
 961      6F6D2073 
 961      6F636B65 
 962 0a09 000000   		.align	2
 963              	.LC122:
 964 0a0c 41542B53 		.ascii	"AT+S.SOCKL\000"
 964      2E534F43 
 964      4B4C00
 965 0a17 00       		.align	2
 966              	.LC123:
 967 0a18 4C697374 		.ascii	"List opened socket clients\000"
 967      206F7065 
 967      6E656420 
 967      736F636B 
 967      65742063 
 968 0a33 00       		.align	2
 969              	.LC124:
 970 0a34 41542B53 		.ascii	"AT+S.SOCKDON\000"
 970      2E534F43 
 970      4B444F4E 
ARM GAS  /tmp/ccrJoCXE.s 			page 32


 970      00
 971 0a41 000000   		.align	2
 972              	.LC125:
 973 0a44 3D3C706F 		.ascii	"=<port>,<t|u|s1|s2>\000"
 973      72743E2C 
 973      3C747C75 
 973      7C73317C 
 973      73323E00 
 974              		.align	2
 975              	.LC126:
 976 0a58 4F70656E 		.ascii	"Open a socket server\000"
 976      20612073 
 976      6F636B65 
 976      74207365 
 976      72766572 
 977 0a6d 000000   		.align	2
 978              	.LC127:
 979 0a70 41542B53 		.ascii	"AT+S.SOCKDQ\000"
 979      2E534F43 
 979      4B445100 
 980              		.align	2
 981              	.LC128:
 982 0a7c 3D3C7369 		.ascii	"=<sid>,<cid>\000"
 982      643E2C3C 
 982      6369643E 
 982      00
 983 0a89 000000   		.align	2
 984              	.LC129:
 985 0a8c 51756572 		.ascii	"Query socket server for pending data\000"
 985      7920736F 
 985      636B6574 
 985      20736572 
 985      76657220 
 986 0ab1 000000   		.align	2
 987              	.LC130:
 988 0ab4 41542B53 		.ascii	"AT+S.SOCKDC\000"
 988      2E534F43 
 988      4B444300 
 989              		.align	2
 990              	.LC131:
 991 0ac0 3D3C7369 		.ascii	"=<sid>[,<cid>]\000"
 991      643E5B2C 
 991      3C636964 
 991      3E5D00
 992 0acf 00       		.align	2
 993              	.LC132:
 994 0ad0 436C6F73 		.ascii	"Close socket server [or disconnect TCP/TLS client]\000"
 994      6520736F 
 994      636B6574 
 994      20736572 
 994      76657220 
 995 0b03 00       		.align	2
 996              	.LC133:
 997 0b04 41542B53 		.ascii	"AT+S.SOCKDW\000"
 997      2E534F43 
 997      4B445700 
 998              		.align	2
ARM GAS  /tmp/ccrJoCXE.s 			page 33


 999              	.LC134:
 1000 0b10 3D3C7369 		.ascii	"=<sid>,<cid>,<len>\000"
 1000      643E2C3C 
 1000      6369643E 
 1000      2C3C6C65 
 1000      6E3E00
 1001 0b23 00       		.align	2
 1002              	.LC135:
 1003 0b24 57726974 		.ascii	"Write data to socket server\000"
 1003      65206461 
 1003      74612074 
 1003      6F20736F 
 1003      636B6574 
 1004              		.align	2
 1005              	.LC136:
 1006 0b40 41542B53 		.ascii	"AT+S.SOCKDR\000"
 1006      2E534F43 
 1006      4B445200 
 1007              		.align	2
 1008              	.LC137:
 1009 0b4c 52656164 		.ascii	"Read data from socket server\000"
 1009      20646174 
 1009      61206672 
 1009      6F6D2073 
 1009      6F636B65 
 1010 0b69 000000   		.align	2
 1011              	.LC138:
 1012 0b6c 41542B53 		.ascii	"AT+S.SOCKDL\000"
 1012      2E534F43 
 1012      4B444C00 
 1013              		.align	2
 1014              	.LC139:
 1015 0b78 4C697374 		.ascii	"List bound socket clients\000"
 1015      20626F75 
 1015      6E642073 
 1015      6F636B65 
 1015      7420636C 
 1016 0b92 0000     		.align	2
 1017              	.LC140:
 1018 0b94 41542B53 		.ascii	"AT+S.SELFTEST\000"
 1018      2E53454C 
 1018      46544553 
 1018      5400
 1019 0ba2 0000     		.align	2
 1020              	.LC141:
 1021 0ba4 3D3C6D61 		.ascii	"=<magic>,<ip>,<port>,<num>,<size>,<t|u>\000"
 1021      6769633E 
 1021      2C3C6970 
 1021      3E2C3C70 
 1021      6F72743E 
 1022              		.align	2
 1023              	.LC142:
 1024 0bcc 53656C66 		.ascii	"SelfTests\000"
 1024      54657374 
 1024      7300
 1025 0bd6 0000     		.align	2
 1026              	.LC143:
ARM GAS  /tmp/ccrJoCXE.s 			page 34


 1027 0bd8 41542B53 		.ascii	"AT+S.TFTPGET\000"
 1027      2E544654 
 1027      50474554 
 1027      00
 1028 0be5 000000   		.align	2
 1029              	.LC144:
 1030 0be8 3D3C686F 		.ascii	"=<hostname>,<IPv>,<filename>\000"
 1030      73746E61 
 1030      6D653E2C 
 1030      3C495076 
 1030      3E2C3C66 
 1031 0c05 000000   		.align	2
 1032              	.LC145:
 1033 0c08 47455420 		.ascii	"GET Request to specified TFTP Server\000"
 1033      52657175 
 1033      65737420 
 1033      746F2073 
 1033      70656369 
 1034 0c2d 000000   		.align	2
 1035              	.LC146:
 1036 0c30 41542B53 		.ascii	"AT+S.TFTPPUT\000"
 1036      2E544654 
 1036      50505554 
 1036      00
 1037 0c3d 000000   		.align	2
 1038              	.LC147:
 1039 0c40 50555420 		.ascii	"PUT Request to specified TFTP Server\000"
 1039      52657175 
 1039      65737420 
 1039      746F2073 
 1039      70656369 
 1040 0c65 000000   		.align	2
 1041              	.LC148:
 1042 0c68 41542B53 		.ascii	"AT+S.SMTP\000"
 1042      2E534D54 
 1042      5000
 1043 0c72 0000     		.align	2
 1044              	.LC149:
 1045 0c74 3D3C686F 		.ascii	"=<hostname>,<port>,<TLS>,<usn>,<pwd>,<heloID>,<addr"
 1045      73746E61 
 1045      6D653E2C 
 1045      3C706F72 
 1045      743E2C3C 
 1046 0ca7 6573733E 		.ascii	"ess>,<to>,<cc>,<bcc>,<subject>,<body>,<attachment>\000"
 1046      2C3C746F 
 1046      3E2C3C63 
 1046      633E2C3C 
 1046      6263633E 
 1047 0cda 0000     		.align	2
 1048              	.LC150:
 1049 0cdc 4D61696C 		.ascii	"Mail send to remote peer\000"
 1049      2073656E 
 1049      6420746F 
 1049      2072656D 
 1049      6F746520 
 1050 0cf5 000000   		.align	2
 1051              	.LC151:
ARM GAS  /tmp/ccrJoCXE.s 			page 35


 1052 0cf8 41542B53 		.ascii	"AT+S.HTTPGET\000"
 1052      2E485454 
 1052      50474554 
 1052      00
 1053 0d05 000000   		.align	2
 1054              	.LC152:
 1055 0d08 3D3C686F 		.ascii	"=<hostname>,<path&queryopts>,<port>,<TLS>,<usn>,<pw"
 1055      73746E61 
 1055      6D653E2C 
 1055      3C706174 
 1055      68267175 
 1056 0d3b 643E2C3C 		.ascii	"d>,<filenameDown>,<filenameUp>\000"
 1056      66696C65 
 1056      6E616D65 
 1056      446F776E 
 1056      3E2C3C66 
 1057 0d5a 0000     		.align	2
 1058              	.LC153:
 1059 0d5c 47455420 		.ascii	"GET Request to specified HTTP Server\000"
 1059      52657175 
 1059      65737420 
 1059      746F2073 
 1059      70656369 
 1060 0d81 000000   		.align	2
 1061              	.LC154:
 1062 0d84 41542B53 		.ascii	"AT+S.HTTPPOST\000"
 1062      2E485454 
 1062      50504F53 
 1062      5400
 1063 0d92 0000     		.align	2
 1064              	.LC155:
 1065 0d94 3D3C686F 		.ascii	"=<hostname>,<path&queryopts>,<formcontent>,<port>,<"
 1065      73746E61 
 1065      6D653E2C 
 1065      3C706174 
 1065      68267175 
 1066 0dc7 544C533E 		.ascii	"TLS>,<usn>,<pwd>,\000"
 1066      2C3C7573 
 1066      6E3E2C3C 
 1066      7077643E 
 1066      2C00
 1067 0dd9 000000   		.align	2
 1068              	.LC156:
 1069 0ddc 504F5354 		.ascii	"POST Request to specified HTTP Server\000"
 1069      20526571 
 1069      75657374 
 1069      20746F20 
 1069      73706563 
 1070 0e02 0000     		.align	2
 1071              	.LC157:
 1072 0e04 41542B53 		.ascii	"AT+S.FWUPDATE\000"
 1072      2E465755 
 1072      50444154 
 1072      4500
 1073 0e12 0000     		.align	2
 1074              	.LC158:
 1075 0e14 3D3C686F 		.ascii	"=<hostname>,<path&queryopts>,<port>,<TLS>,<usn>,<pw"
ARM GAS  /tmp/ccrJoCXE.s 			page 36


 1075      73746E61 
 1075      6D653E2C 
 1075      3C706174 
 1075      68267175 
 1076 0e47 643E00   		.ascii	"d>\000"
 1077 0e4a 0000     		.align	2
 1078              	.LC159:
 1079 0e4c 55706461 		.ascii	"Update firmware image from named host and path\000"
 1079      74652066 
 1079      69726D77 
 1079      61726520 
 1079      696D6167 
 1080 0e7b 00       		.align	2
 1081              	.LC160:
 1082 0e7c 41542B53 		.ascii	"AT+S.FSUPDATE\000"
 1082      2E465355 
 1082      50444154 
 1082      4500
 1083 0e8a 0000     		.align	2
 1084              	.LC161:
 1085 0e8c 55706461 		.ascii	"Update file system from named host and path\000"
 1085      74652066 
 1085      696C6520 
 1085      73797374 
 1085      656D2066 
 1086              		.align	2
 1087              	.LC162:
 1088 0eb8 46696C6C 		.ascii	"Fill buffer for Raw text input SSI\000"
 1088      20627566 
 1088      66657220 
 1088      666F7220 
 1088      52617720 
 1089 0edb 00       		.align	2
 1090              	.LC163:
 1091 0edc 41542B53 		.ascii	"AT+S.MQTTCONN\000"
 1091      2E4D5154 
 1091      54434F4E 
 1091      4E00
 1092 0eea 0000     		.align	2
 1093              	.LC164:
 1094 0eec 3D3C686F 		.ascii	"=<hostname>,<path>,<port>,<TLS>,<usn>,<pwd>,<Client"
 1094      73746E61 
 1094      6D653E2C 
 1094      3C706174 
 1094      683E2C3C 
 1095 0f1f 49443E2C 		.ascii	"ID>,<KeepAlive>,<Retry>,<LWT_QoS>,<LWT_Name>,<LWT_M"
 1095      3C4B6565 
 1095      70416C69 
 1095      76653E2C 
 1095      3C526574 
 1096 0f52 65737361 		.ascii	"essage>\000"
 1096      67653E00 
 1097 0f5a 0000     		.align	2
 1098              	.LC165:
 1099 0f5c 436F6E6E 		.ascii	"Connect to specified MQTT Broker\000"
 1099      65637420 
 1099      746F2073 
ARM GAS  /tmp/ccrJoCXE.s 			page 37


 1099      70656369 
 1099      66696564 
 1100 0f7d 000000   		.align	2
 1101              	.LC166:
 1102 0f80 41542B53 		.ascii	"AT+S.MQTTSUB\000"
 1102      2E4D5154 
 1102      54535542 
 1102      00
 1103 0f8d 000000   		.align	2
 1104              	.LC167:
 1105 0f90 3D3C6964 		.ascii	"=<id>,<topic>,<QoS>\000"
 1105      3E2C3C74 
 1105      6F706963 
 1105      3E2C3C51 
 1105      6F533E00 
 1106              		.align	2
 1107              	.LC168:
 1108 0fa4 53756273 		.ascii	"Subscribe topic to MQTT Broker\000"
 1108      63726962 
 1108      6520746F 
 1108      70696320 
 1108      746F204D 
 1109 0fc3 00       		.align	2
 1110              	.LC169:
 1111 0fc4 41542B53 		.ascii	"AT+S.MQTTPUB\000"
 1111      2E4D5154 
 1111      54505542 
 1111      00
 1112 0fd1 000000   		.align	2
 1113              	.LC170:
 1114 0fd4 3D3C6964 		.ascii	"=<id>,<topic>,<QoS>,<retained>,<message>\000"
 1114      3E2C3C74 
 1114      6F706963 
 1114      3E2C3C51 
 1114      6F533E2C 
 1115 0ffd 000000   		.align	2
 1116              	.LC171:
 1117 1000 5075626C 		.ascii	"Publish a message to MQTT Broker\000"
 1117      69736820 
 1117      61206D65 
 1117      73736167 
 1117      6520746F 
 1118 1021 000000   		.align	2
 1119              	.LC172:
 1120 1024 41542B53 		.ascii	"AT+S.MQTTUNSUB\000"
 1120      2E4D5154 
 1120      54554E53 
 1120      554200
 1121 1033 00       		.align	2
 1122              	.LC173:
 1123 1034 3D3C6964 		.ascii	"=<id>,<topic>\000"
 1123      3E2C3C74 
 1123      6F706963 
 1123      3E00
 1124 1042 0000     		.align	2
 1125              	.LC174:
 1126 1044 556E7375 		.ascii	"Unsubscribe topic from MQTT Broker\000"
ARM GAS  /tmp/ccrJoCXE.s 			page 38


 1126      62736372 
 1126      69626520 
 1126      746F7069 
 1126      63206672 
 1127 1067 00       		.align	2
 1128              	.LC175:
 1129 1068 41542B53 		.ascii	"AT+S.MQTTDISC\000"
 1129      2E4D5154 
 1129      54444953 
 1129      4300
 1130 1076 0000     		.align	2
 1131              	.LC176:
 1132 1078 44697363 		.ascii	"Disconnect from MQTT Broker\000"
 1132      6F6E6E65 
 1132      63742066 
 1132      726F6D20 
 1132      4D515454 
 1133              		.align	2
 1134              	.LC177:
 1135 1094 41542B53 		.ascii	"AT+S.WSOCKON\000"
 1135      2E57534F 
 1135      434B4F4E 
 1135      00
 1136 10a1 000000   		.align	2
 1137              	.LC178:
 1138 10a4 3D3C686F 		.ascii	"=<hostname>,<port>,<path>,<TLS>,<usn>,<pwd>,<origin"
 1138      73746E61 
 1138      6D653E2C 
 1138      3C706F72 
 1138      743E2C3C 
 1139 10d7 3E2C3C70 		.ascii	">,<protocols>,<extensions>\000"
 1139      726F746F 
 1139      636F6C73 
 1139      3E2C3C65 
 1139      7874656E 
 1140 10f2 0000     		.align	2
 1141              	.LC179:
 1142 10f4 4F70656E 		.ascii	"Open a web socket client\000"
 1142      20612077 
 1142      65622073 
 1142      6F636B65 
 1142      7420636C 
 1143 110d 000000   		.align	2
 1144              	.LC180:
 1145 1110 41542B53 		.ascii	"AT+S.WSOCKQ\000"
 1145      2E57534F 
 1145      434B5100 
 1146              		.align	2
 1147              	.LC181:
 1148 111c 51756572 		.ascii	"Query web socket client for pending data\000"
 1148      79207765 
 1148      6220736F 
 1148      636B6574 
 1148      20636C69 
 1149 1145 000000   		.align	2
 1150              	.LC182:
 1151 1148 41542B53 		.ascii	"AT+S.WSOCKC\000"
ARM GAS  /tmp/ccrJoCXE.s 			page 39


 1151      2E57534F 
 1151      434B4300 
 1152              		.align	2
 1153              	.LC183:
 1154 1154 3D3C6964 		.ascii	"=<id>,<status>\000"
 1154      3E2C3C73 
 1154      74617475 
 1154      733E00
 1155 1163 00       		.align	2
 1156              	.LC184:
 1157 1164 436C6F73 		.ascii	"Close web socket client using a specific status cod"
 1157      65207765 
 1157      6220736F 
 1157      636B6574 
 1157      20636C69 
 1158 1197 6500     		.ascii	"e\000"
 1159 1199 000000   		.align	2
 1160              	.LC185:
 1161 119c 41542B53 		.ascii	"AT+S.WSOCKW\000"
 1161      2E57534F 
 1161      434B5700 
 1162              		.align	2
 1163              	.LC186:
 1164 11a8 3D3C6964 		.ascii	"=<id>,<lastFrame>,<lastFrag>,<binary>,<len>\000"
 1164      3E2C3C6C 
 1164      61737446 
 1164      72616D65 
 1164      3E2C3C6C 
 1165              		.align	2
 1166              	.LC187:
 1167 11d4 57726974 		.ascii	"Write data to web socket client\000"
 1167      65206461 
 1167      74612074 
 1167      6F207765 
 1167      6220736F 
 1168              		.align	2
 1169              	.LC188:
 1170 11f4 41542B53 		.ascii	"AT+S.WSOCKR\000"
 1170      2E57534F 
 1170      434B5200 
 1171              		.align	2
 1172              	.LC189:
 1173 1200 52656164 		.ascii	"Read data from web socket client\000"
 1173      20646174 
 1173      61206672 
 1173      6F6D2077 
 1173      65622073 
 1174 1221 000000   		.align	2
 1175              	.LC190:
 1176 1224 41542B53 		.ascii	"AT+S.WSOCKL\000"
 1176      2E57534F 
 1176      434B4C00 
 1177              		.align	2
 1178              	.LC191:
 1179 1230 4C697374 		.ascii	"List opened web socket clients\000"
 1179      206F7065 
 1179      6E656420 
ARM GAS  /tmp/ccrJoCXE.s 			page 40


 1179      77656220 
 1179      736F636B 
 1180 124f 00       		.align	2
 1181              	.LC192:
 1182 1250 41542656 		.ascii	"AT&V\000"
 1182      00
 1183 1255 000000   		.align	2
 1184              	.LC193:
 1185 1258 5265706F 		.ascii	"Report configuration variables\000"
 1185      72742063 
 1185      6F6E6669 
 1185      67757261 
 1185      74696F6E 
 1186 1277 00       		.align	2
 1187              	.LC194:
 1188 1278 41542657 		.ascii	"AT&W\000"
 1188      00
 1189 127d 000000   		.align	2
 1190              	.LC195:
 1191 1280 41542646 		.ascii	"AT&F\000"
 1191      00
 1192              		.section	.rodata.cmds,"a"
 1193              		.align	2
 1194              		.set	.LANCHOR0,. + 0
 1197              	cmds:
 1198 0000 00000000 		.word	.LC5
 1199 0004 00000000 		.space	4
 1200 0008 04000000 		.word	.LC6
 1201 000c 00000000 		.word	cmd_funcArgs
 1202 0010 01       		.byte	1
 1203 0011 01       		.byte	1
 1204 0012 0000     		.space	2
 1205 0014 24000000 		.word	.LC7
 1206 0018 30000000 		.word	.LC8
 1207 001c 40000000 		.word	.LC9
 1208 0020 00000000 		.word	cmd_funcArgs
 1209 0024 01       		.byte	1
 1210 0025 02       		.byte	2
 1211 0026 0000     		.space	2
 1212 0028 78000000 		.word	.LC10
 1213 002c 00000000 		.space	4
 1214 0030 84000000 		.word	.LC11
 1215 0034 00000000 		.word	cmd_funcArgs
 1216 0038 01       		.byte	1
 1217 0039 03       		.byte	3
 1218 003a 0000     		.space	2
 1219 003c A0000000 		.word	.LC12
 1220 0040 AC000000 		.word	.LC13
 1221 0044 B8000000 		.word	.LC14
 1222 0048 00000000 		.word	cmd_funcArgs
 1223 004c 01       		.byte	1
 1224 004d 04       		.byte	4
 1225 004e 0000     		.space	2
 1226 0050 EC000000 		.word	.LC15
 1227 0054 F8000000 		.word	.LC16
 1228 0058 08010000 		.word	.LC17
 1229 005c 00000000 		.word	cmd_funcArgs
ARM GAS  /tmp/ccrJoCXE.s 			page 41


 1230 0060 01       		.byte	1
 1231 0061 05       		.byte	5
 1232 0062 0000     		.space	2
 1233 0064 2C010000 		.word	.LC18
 1234 0068 00000000 		.space	4
 1235 006c 3C010000 		.word	.LC19
 1236 0070 00000000 		.word	cmd_funcArgs
 1237 0074 01       		.byte	1
 1238 0075 06       		.byte	6
 1239 0076 0000     		.space	2
 1240 0078 60010000 		.word	.LC20
 1241 007c 00000000 		.space	4
 1242 0080 6C010000 		.word	.LC21
 1243 0084 00000000 		.word	cmd_funcArgs
 1244 0088 01       		.byte	1
 1245 0089 07       		.byte	7
 1246 008a 0000     		.space	2
 1247 008c 90010000 		.word	.LC22
 1248 0090 9C010000 		.word	.LC23
 1249 0094 AC010000 		.word	.LC24
 1250 0098 00000000 		.word	cmd_funcArgs
 1251 009c 01       		.byte	1
 1252 009d 08       		.byte	8
 1253 009e 0000     		.space	2
 1254 00a0 CC010000 		.word	.LC25
 1255 00a4 D8010000 		.word	.LC26
 1256 00a8 E8010000 		.word	.LC27
 1257 00ac 00000000 		.word	cmd_funcArgs
 1258 00b0 01       		.byte	1
 1259 00b1 09       		.byte	9
 1260 00b2 0000     		.space	2
 1261 00b4 10020000 		.word	.LC28
 1262 00b8 1C020000 		.word	.LC29
 1263 00bc 2C020000 		.word	.LC30
 1264 00c0 00000000 		.word	cmd_funcArgs
 1265 00c4 01       		.byte	1
 1266 00c5 0A       		.byte	10
 1267 00c6 0000     		.space	2
 1268 00c8 48020000 		.word	.LC31
 1269 00cc 00000000 		.space	4
 1270 00d0 54020000 		.word	.LC32
 1271 00d4 00000000 		.word	cmd_funcArgs
 1272 00d8 01       		.byte	1
 1273 00d9 0B       		.byte	11
 1274 00da 0000     		.space	2
 1275 00dc 7C020000 		.word	.LC33
 1276 00e0 00000000 		.space	4
 1277 00e4 88020000 		.word	.LC34
 1278 00e8 00000000 		.word	cmd_funcArgs
 1279 00ec 01       		.byte	1
 1280 00ed 0C       		.byte	12
 1281 00ee 0000     		.space	2
 1282 00f0 BC020000 		.word	.LC35
 1283 00f4 C8020000 		.word	.LC36
 1284 00f8 D4020000 		.word	.LC37
 1285 00fc 00000000 		.word	cmd_funcArgs
 1286 0100 01       		.byte	1
ARM GAS  /tmp/ccrJoCXE.s 			page 42


 1287 0101 0D       		.byte	13
 1288 0102 0000     		.space	2
 1289 0104 04030000 		.word	.LC38
 1290 0108 14030000 		.word	.LC39
 1291 010c 30030000 		.word	.LC40
 1292 0110 00000000 		.word	cmd_funcArgs
 1293 0114 01       		.byte	1
 1294 0115 0E       		.byte	14
 1295 0116 0000     		.space	2
 1296 0118 54030000 		.word	.LC41
 1297 011c 60030000 		.word	.LC42
 1298 0120 6C030000 		.word	.LC43
 1299 0124 00000000 		.word	cmd_funcArgs
 1300 0128 01       		.byte	1
 1301 0129 11       		.byte	17
 1302 012a 0000     		.space	2
 1303 012c 8C030000 		.word	.LC44
 1304 0130 00000000 		.space	4
 1305 0134 98030000 		.word	.LC45
 1306 0138 00000000 		.word	cmd_funcArgs
 1307 013c 01       		.byte	1
 1308 013d 12       		.byte	18
 1309 013e 0000     		.space	2
 1310 0140 B4030000 		.word	.LC46
 1311 0144 C0030000 		.word	.LC47
 1312 0148 D8030000 		.word	.LC48
 1313 014c 00000000 		.word	cmd_funcArgs
 1314 0150 01       		.byte	1
 1315 0151 13       		.byte	19
 1316 0152 0000     		.space	2
 1317 0154 F4030000 		.word	.LC49
 1318 0158 00040000 		.word	.LC50
 1319 015c 08040000 		.word	.LC51
 1320 0160 00000000 		.word	cmd_funcArgs
 1321 0164 01       		.byte	1
 1322 0165 14       		.byte	20
 1323 0166 0000     		.space	2
 1324 0168 1C040000 		.word	.LC52
 1325 016c 28040000 		.word	.LC53
 1326 0170 38040000 		.word	.LC54
 1327 0174 00000000 		.word	cmd_funcArgs
 1328 0178 01       		.byte	1
 1329 0179 15       		.byte	21
 1330 017a 0000     		.space	2
 1331 017c 50040000 		.word	.LC55
 1332 0180 5C040000 		.word	.LC56
 1333 0184 68040000 		.word	.LC57
 1334 0188 00000000 		.word	cmd_funcArgs
 1335 018c 01       		.byte	1
 1336 018d 16       		.byte	22
 1337 018e 0000     		.space	2
 1338 0190 88040000 		.word	.LC58
 1339 0194 00000000 		.space	4
 1340 0198 94040000 		.word	.LC59
 1341 019c 00000000 		.word	cmd_funcArgs
 1342 01a0 01       		.byte	1
 1343 01a1 17       		.byte	23
ARM GAS  /tmp/ccrJoCXE.s 			page 43


 1344 01a2 0000     		.space	2
 1345 01a4 AC040000 		.word	.LC60
 1346 01a8 B8040000 		.word	.LC61
 1347 01ac D0040000 		.word	.LC62
 1348 01b0 00000000 		.word	cmd_funcArgs
 1349 01b4 01       		.byte	1
 1350 01b5 18       		.byte	24
 1351 01b6 0000     		.space	2
 1352 01b8 E4040000 		.word	.LC63
 1353 01bc 00000000 		.space	4
 1354 01c0 F0040000 		.word	.LC64
 1355 01c4 00000000 		.word	cmd_funcArgs
 1356 01c8 01       		.byte	1
 1357 01c9 21       		.byte	33
 1358 01ca 0000     		.space	2
 1359 01cc 08050000 		.word	.LC65
 1360 01d0 14050000 		.word	.LC66
 1361 01d4 34050000 		.word	.LC67
 1362 01d8 00000000 		.word	cmd_funcArgs
 1363 01dc 01       		.byte	1
 1364 01dd 23       		.byte	35
 1365 01de 0000     		.space	2
 1366 01e0 60050000 		.word	.LC68
 1367 01e4 6C050000 		.word	.LC69
 1368 01e8 78050000 		.word	.LC70
 1369 01ec 00000000 		.word	cmd_funcArgs
 1370 01f0 01       		.byte	1
 1371 01f1 25       		.byte	37
 1372 01f2 0000     		.space	2
 1373 01f4 90050000 		.word	.LC71
 1374 01f8 9C050000 		.word	.LC72
 1375 01fc BC050000 		.word	.LC73
 1376 0200 00000000 		.word	cmd_funcArgs
 1377 0204 01       		.byte	1
 1378 0205 26       		.byte	38
 1379 0206 0000     		.space	2
 1380 0208 D4050000 		.word	.LC74
 1381 020c 9C010000 		.word	.LC23
 1382 0210 E0050000 		.word	.LC75
 1383 0214 00000000 		.word	cmd_funcArgs
 1384 0218 01       		.byte	1
 1385 0219 27       		.byte	39
 1386 021a 0000     		.space	2
 1387 021c FC050000 		.word	.LC76
 1388 0220 08060000 		.word	.LC77
 1389 0224 28060000 		.word	.LC78
 1390 0228 00000000 		.word	cmd_funcArgs
 1391 022c 01       		.byte	1
 1392 022d 28       		.byte	40
 1393 022e 0000     		.space	2
 1394 0230 50060000 		.word	.LC79
 1395 0234 5C060000 		.word	.LC80
 1396 0238 74060000 		.word	.LC81
 1397 023c 00000000 		.word	cmd_funcArgs
 1398 0240 01       		.byte	1
 1399 0241 29       		.byte	41
 1400 0242 0000     		.space	2
ARM GAS  /tmp/ccrJoCXE.s 			page 44


 1401 0244 84060000 		.word	.LC82
 1402 0248 94060000 		.word	.LC83
 1403 024c C0060000 		.word	.LC84
 1404 0250 00000000 		.word	cmd_funcArgs
 1405 0254 01       		.byte	1
 1406 0255 2A       		.byte	42
 1407 0256 0000     		.space	2
 1408 0258 F0060000 		.word	.LC85
 1409 025c 94060000 		.word	.LC83
 1410 0260 00070000 		.word	.LC86
 1411 0264 00000000 		.word	cmd_funcArgs
 1412 0268 01       		.byte	1
 1413 0269 2B       		.byte	43
 1414 026a 0000     		.space	2
 1415 026c 28070000 		.word	.LC87
 1416 0270 34070000 		.word	.LC88
 1417 0274 3C070000 		.word	.LC89
 1418 0278 00000000 		.word	cmd_funcArgs
 1419 027c 01       		.byte	1
 1420 027d 32       		.byte	50
 1421 027e 0000     		.space	2
 1422 0280 58070000 		.word	.LC90
 1423 0284 64070000 		.word	.LC91
 1424 0288 78070000 		.word	.LC92
 1425 028c 00000000 		.word	cmd_funcArgs
 1426 0290 01       		.byte	1
 1427 0291 33       		.byte	51
 1428 0292 0000     		.space	2
 1429 0294 A4070000 		.word	.LC93
 1430 0298 B4070000 		.word	.LC94
 1431 029c C4070000 		.word	.LC95
 1432 02a0 00000000 		.word	cmd_funcArgs
 1433 02a4 01       		.byte	1
 1434 02a5 34       		.byte	52
 1435 02a6 0000     		.space	2
 1436 02a8 DC070000 		.word	.LC96
 1437 02ac E8070000 		.word	.LC97
 1438 02b0 04080000 		.word	.LC98
 1439 02b4 00000000 		.word	cmd_funcArgs
 1440 02b8 01       		.byte	1
 1441 02b9 35       		.byte	53
 1442 02ba 0000     		.space	2
 1443 02bc 24080000 		.word	.LC99
 1444 02c0 30080000 		.word	.LC100
 1445 02c4 44080000 		.word	.LC101
 1446 02c8 00000000 		.word	cmd_funcArgs
 1447 02cc 01       		.byte	1
 1448 02cd 36       		.byte	54
 1449 02ce 0000     		.space	2
 1450 02d0 5C080000 		.word	.LC102
 1451 02d4 00000000 		.space	4
 1452 02d8 68080000 		.word	.LC103
 1453 02dc 00000000 		.word	cmd_funcArgs
 1454 02e0 01       		.byte	1
 1455 02e1 37       		.byte	55
 1456 02e2 0000     		.space	2
 1457 02e4 8C080000 		.word	.LC104
ARM GAS  /tmp/ccrJoCXE.s 			page 45


 1458 02e8 00000000 		.space	4
 1459 02ec 98080000 		.word	.LC105
 1460 02f0 00000000 		.word	cmd_funcArgs
 1461 02f4 01       		.byte	1
 1462 02f5 38       		.byte	56
 1463 02f6 0000     		.space	2
 1464 02f8 AC080000 		.word	.LC106
 1465 02fc B8080000 		.word	.LC107
 1466 0300 DC080000 		.word	.LC108
 1467 0304 00000000 		.word	cmd_funcArgs
 1468 0308 01       		.byte	1
 1469 0309 39       		.byte	57
 1470 030a 0000     		.space	2
 1471 030c FC080000 		.word	.LC109
 1472 0310 08090000 		.word	.LC110
 1473 0314 38090000 		.word	.LC111
 1474 0318 00000000 		.word	cmd_funcArgs
 1475 031c 01       		.byte	1
 1476 031d 41       		.byte	65
 1477 031e 0000     		.space	2
 1478 0320 50090000 		.word	.LC112
 1479 0324 5C090000 		.word	.LC113
 1480 0328 64090000 		.word	.LC114
 1481 032c 00000000 		.word	cmd_funcArgs
 1482 0330 01       		.byte	1
 1483 0331 42       		.byte	66
 1484 0332 0000     		.space	2
 1485 0334 8C090000 		.word	.LC115
 1486 0338 5C090000 		.word	.LC113
 1487 033c 98090000 		.word	.LC116
 1488 0340 00000000 		.word	cmd_funcArgs
 1489 0344 01       		.byte	1
 1490 0345 43       		.byte	67
 1491 0346 0000     		.space	2
 1492 0348 AC090000 		.word	.LC117
 1493 034c B8090000 		.word	.LC118
 1494 0350 C4090000 		.word	.LC119
 1495 0354 00000000 		.word	cmd_funcArgs
 1496 0358 01       		.byte	1
 1497 0359 44       		.byte	68
 1498 035a 0000     		.space	2
 1499 035c E0090000 		.word	.LC120
 1500 0360 B8090000 		.word	.LC118
 1501 0364 EC090000 		.word	.LC121
 1502 0368 00000000 		.word	cmd_funcArgs
 1503 036c 01       		.byte	1
 1504 036d 45       		.byte	69
 1505 036e 0000     		.space	2
 1506 0370 0C0A0000 		.word	.LC122
 1507 0374 00000000 		.space	4
 1508 0378 180A0000 		.word	.LC123
 1509 037c 00000000 		.word	cmd_funcArgs
 1510 0380 01       		.byte	1
 1511 0381 46       		.byte	70
 1512 0382 0000     		.space	2
 1513 0384 340A0000 		.word	.LC124
 1514 0388 440A0000 		.word	.LC125
ARM GAS  /tmp/ccrJoCXE.s 			page 46


 1515 038c 580A0000 		.word	.LC126
 1516 0390 00000000 		.word	cmd_funcArgs
 1517 0394 01       		.byte	1
 1518 0395 47       		.byte	71
 1519 0396 0000     		.space	2
 1520 0398 700A0000 		.word	.LC127
 1521 039c 7C0A0000 		.word	.LC128
 1522 03a0 8C0A0000 		.word	.LC129
 1523 03a4 00000000 		.word	cmd_funcArgs
 1524 03a8 01       		.byte	1
 1525 03a9 48       		.byte	72
 1526 03aa 0000     		.space	2
 1527 03ac B40A0000 		.word	.LC130
 1528 03b0 C00A0000 		.word	.LC131
 1529 03b4 D00A0000 		.word	.LC132
 1530 03b8 00000000 		.word	cmd_funcArgs
 1531 03bc 01       		.byte	1
 1532 03bd 49       		.byte	73
 1533 03be 0000     		.space	2
 1534 03c0 040B0000 		.word	.LC133
 1535 03c4 100B0000 		.word	.LC134
 1536 03c8 240B0000 		.word	.LC135
 1537 03cc 00000000 		.word	cmd_funcArgs
 1538 03d0 01       		.byte	1
 1539 03d1 4A       		.byte	74
 1540 03d2 0000     		.space	2
 1541 03d4 400B0000 		.word	.LC136
 1542 03d8 100B0000 		.word	.LC134
 1543 03dc 4C0B0000 		.word	.LC137
 1544 03e0 00000000 		.word	cmd_funcArgs
 1545 03e4 01       		.byte	1
 1546 03e5 4B       		.byte	75
 1547 03e6 0000     		.space	2
 1548 03e8 6C0B0000 		.word	.LC138
 1549 03ec 00000000 		.space	4
 1550 03f0 780B0000 		.word	.LC139
 1551 03f4 00000000 		.word	cmd_funcArgs
 1552 03f8 01       		.byte	1
 1553 03f9 4C       		.byte	76
 1554 03fa 0000     		.space	2
 1555 03fc 940B0000 		.word	.LC140
 1556 0400 A40B0000 		.word	.LC141
 1557 0404 CC0B0000 		.word	.LC142
 1558 0408 00000000 		.word	cmd_funcArgs
 1559 040c 01       		.byte	1
 1560 040d 4F       		.byte	79
 1561 040e 0000     		.space	2
 1562 0410 D80B0000 		.word	.LC143
 1563 0414 E80B0000 		.word	.LC144
 1564 0418 080C0000 		.word	.LC145
 1565 041c 00000000 		.word	cmd_funcArgs
 1566 0420 01       		.byte	1
 1567 0421 51       		.byte	81
 1568 0422 0000     		.space	2
 1569 0424 300C0000 		.word	.LC146
 1570 0428 E80B0000 		.word	.LC144
 1571 042c 400C0000 		.word	.LC147
ARM GAS  /tmp/ccrJoCXE.s 			page 47


 1572 0430 00000000 		.word	cmd_funcArgs
 1573 0434 01       		.byte	1
 1574 0435 52       		.byte	82
 1575 0436 0000     		.space	2
 1576 0438 680C0000 		.word	.LC148
 1577 043c 740C0000 		.word	.LC149
 1578 0440 DC0C0000 		.word	.LC150
 1579 0444 00000000 		.word	cmd_funcArgs
 1580 0448 01       		.byte	1
 1581 0449 53       		.byte	83
 1582 044a 0000     		.space	2
 1583 044c F80C0000 		.word	.LC151
 1584 0450 080D0000 		.word	.LC152
 1585 0454 5C0D0000 		.word	.LC153
 1586 0458 00000000 		.word	cmd_funcArgs
 1587 045c 01       		.byte	1
 1588 045d 54       		.byte	84
 1589 045e 0000     		.space	2
 1590 0460 840D0000 		.word	.LC154
 1591 0464 940D0000 		.word	.LC155
 1592 0468 DC0D0000 		.word	.LC156
 1593 046c 00000000 		.word	cmd_funcArgs
 1594 0470 01       		.byte	1
 1595 0471 55       		.byte	85
 1596 0472 0000     		.space	2
 1597 0474 040E0000 		.word	.LC157
 1598 0478 140E0000 		.word	.LC158
 1599 047c 4C0E0000 		.word	.LC159
 1600 0480 00000000 		.word	cmd_funcArgs
 1601 0484 01       		.byte	1
 1602 0485 56       		.byte	86
 1603 0486 0000     		.space	2
 1604 0488 7C0E0000 		.word	.LC160
 1605 048c 140E0000 		.word	.LC158
 1606 0490 8C0E0000 		.word	.LC161
 1607 0494 00000000 		.word	cmd_funcArgs
 1608 0498 01       		.byte	1
 1609 0499 58       		.byte	88
 1610 049a 0000     		.space	2
 1611 049c 04000000 		.word	.LC4
 1612 04a0 00000000 		.space	4
 1613 04a4 B80E0000 		.word	.LC162
 1614 04a8 00000000 		.word	cmd_funcArgs
 1615 04ac 01       		.byte	1
 1616 04ad 59       		.byte	89
 1617 04ae 0000     		.space	2
 1618 04b0 DC0E0000 		.word	.LC163
 1619 04b4 EC0E0000 		.word	.LC164
 1620 04b8 5C0F0000 		.word	.LC165
 1621 04bc 00000000 		.word	cmd_funcArgs
 1622 04c0 01       		.byte	1
 1623 04c1 5A       		.byte	90
 1624 04c2 0000     		.space	2
 1625 04c4 800F0000 		.word	.LC166
 1626 04c8 900F0000 		.word	.LC167
 1627 04cc A40F0000 		.word	.LC168
 1628 04d0 00000000 		.word	cmd_funcArgs
ARM GAS  /tmp/ccrJoCXE.s 			page 48


 1629 04d4 01       		.byte	1
 1630 04d5 5B       		.byte	91
 1631 04d6 0000     		.space	2
 1632 04d8 C40F0000 		.word	.LC169
 1633 04dc D40F0000 		.word	.LC170
 1634 04e0 00100000 		.word	.LC171
 1635 04e4 00000000 		.word	cmd_funcArgs
 1636 04e8 01       		.byte	1
 1637 04e9 5C       		.byte	92
 1638 04ea 0000     		.space	2
 1639 04ec 24100000 		.word	.LC172
 1640 04f0 34100000 		.word	.LC173
 1641 04f4 44100000 		.word	.LC174
 1642 04f8 00000000 		.word	cmd_funcArgs
 1643 04fc 01       		.byte	1
 1644 04fd 5D       		.byte	93
 1645 04fe 0000     		.space	2
 1646 0500 68100000 		.word	.LC175
 1647 0504 5C090000 		.word	.LC113
 1648 0508 78100000 		.word	.LC176
 1649 050c 00000000 		.word	cmd_funcArgs
 1650 0510 01       		.byte	1
 1651 0511 5E       		.byte	94
 1652 0512 0000     		.space	2
 1653 0514 94100000 		.word	.LC177
 1654 0518 A4100000 		.word	.LC178
 1655 051c F4100000 		.word	.LC179
 1656 0520 00000000 		.word	cmd_funcArgs
 1657 0524 01       		.byte	1
 1658 0525 61       		.byte	97
 1659 0526 0000     		.space	2
 1660 0528 10110000 		.word	.LC180
 1661 052c 5C090000 		.word	.LC113
 1662 0530 1C110000 		.word	.LC181
 1663 0534 00000000 		.word	cmd_funcArgs
 1664 0538 01       		.byte	1
 1665 0539 62       		.byte	98
 1666 053a 0000     		.space	2
 1667 053c 48110000 		.word	.LC182
 1668 0540 54110000 		.word	.LC183
 1669 0544 64110000 		.word	.LC184
 1670 0548 00000000 		.word	cmd_funcArgs
 1671 054c 01       		.byte	1
 1672 054d 63       		.byte	99
 1673 054e 0000     		.space	2
 1674 0550 9C110000 		.word	.LC185
 1675 0554 A8110000 		.word	.LC186
 1676 0558 D4110000 		.word	.LC187
 1677 055c 00000000 		.word	cmd_funcArgs
 1678 0560 01       		.byte	1
 1679 0561 64       		.byte	100
 1680 0562 0000     		.space	2
 1681 0564 F4110000 		.word	.LC188
 1682 0568 B8090000 		.word	.LC118
 1683 056c 00120000 		.word	.LC189
 1684 0570 00000000 		.word	cmd_funcArgs
 1685 0574 01       		.byte	1
ARM GAS  /tmp/ccrJoCXE.s 			page 49


 1686 0575 65       		.byte	101
 1687 0576 0000     		.space	2
 1688 0578 24120000 		.word	.LC190
 1689 057c 00000000 		.space	4
 1690 0580 30120000 		.word	.LC191
 1691 0584 00000000 		.word	cmd_funcArgs
 1692 0588 01       		.byte	1
 1693 0589 66       		.byte	102
 1694 058a 0000     		.space	2
 1695 058c 50120000 		.word	.LC192
 1696 0590 00000000 		.space	4
 1697 0594 58120000 		.word	.LC193
 1698 0598 00000000 		.word	cmd_funcArgs
 1699 059c 00       		.byte	0
 1700 059d 00       		.byte	0
 1701 059e 0000     		.space	2
 1702 05a0 78120000 		.word	.LC194
 1703 05a4 00000000 		.space	4
 1704 05a8 54020000 		.word	.LC32
 1705 05ac 00000000 		.word	cmd_funcArgs
 1706 05b0 00       		.byte	0
 1707 05b1 00       		.byte	0
 1708 05b2 0000     		.space	2
 1709 05b4 80120000 		.word	.LC195
 1710 05b8 00000000 		.space	4
 1711 05bc 88020000 		.word	.LC34
 1712 05c0 00000000 		.word	cmd_funcArgs
 1713 05c4 00       		.byte	0
 1714 05c5 00       		.byte	0
 1715 05c6 0000     		.space	2
 1716 05c8 00000000 		.word	0
 1717 05cc 00000000 		.space	4
 1718 05d0 00000000 		.word	0
 1719 05d4 00000000 		.word	0
 1720 05d8 00       		.byte	0
 1721 05d9 00       		.byte	0
 1722 05da 0000     		.space	2
 1723              		.text
 1724              	.Letext0:
 1725              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1726              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1727              		.file 4 "/usr/include/newlib/sys/_types.h"
 1728              		.file 5 "/usr/include/newlib/sys/reent.h"
 1729              		.file 6 "/usr/include/newlib/sys/lock.h"
 1730              		.file 7 "/usr/include/newlib/stdlib.h"
 1731              		.file 8 "Middlewares/ST/STM32_SPWF0xSy/Utils/enum.h"
 1732              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 1733              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1734              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1735              		.file 12 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1736              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1737              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1738              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1739              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1740              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1741              		.file 18 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_interface.h"
 1742              		.file 19 "Middlewares/ST/STM32_SPWF0xSy/Utils/event_buffer.h"
ARM GAS  /tmp/ccrJoCXE.s 			page 50


 1743              		.file 20 "/usr/include/newlib/time.h"
 1744              		.file 21 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_module.h"
 1745              		.file 22 "Middlewares/ST/STM32_SPWF0xSy/Utils/wifi_globals.h"
 1746              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 1747              		.file 24 "/usr/include/newlib/string.h"
 1748              		.file 25 "<built-in>"
 1749              		.file 26 "/usr/include/newlib/stdio.h"
 1750              		.file 27 "/usr/include/newlib/strings.h"
ARM GAS  /tmp/ccrJoCXE.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 spwf04WiFi.c
     /tmp/ccrJoCXE.s:18     .rodata.cmd_funcArgs.str1.4:0000000000000000 $d
     /tmp/ccrJoCXE.s:25     .text.cmd_funcArgs:0000000000000000 $t
     /tmp/ccrJoCXE.s:32     .text.cmd_funcArgs:0000000000000000 cmd_funcArgs
     /tmp/ccrJoCXE.s:259    .text.cmd_funcArgs:00000000000000dc $d
     /tmp/ccrJoCXE.s:268    .rodata.get_cmd_id.str1.4:0000000000000000 $d
     /tmp/ccrJoCXE.s:272    .text.get_cmd_id:0000000000000000 $t
     /tmp/ccrJoCXE.s:279    .text.get_cmd_id:0000000000000000 get_cmd_id
     /tmp/ccrJoCXE.s:352    .text.get_cmd_id:0000000000000040 $d
     /tmp/ccrJoCXE.s:358    .text.get_cmd_string:0000000000000000 $t
     /tmp/ccrJoCXE.s:365    .text.get_cmd_string:0000000000000000 get_cmd_string
     /tmp/ccrJoCXE.s:434    .text.get_cmd_string:000000000000003c $d
     /tmp/ccrJoCXE.s:440    .rodata.run_spi_cmd.str1.4:0000000000000000 $d
     /tmp/ccrJoCXE.s:447    .text.run_spi_cmd:0000000000000000 $t
     /tmp/ccrJoCXE.s:454    .text.run_spi_cmd:0000000000000000 run_spi_cmd
     /tmp/ccrJoCXE.s:602    .text.run_spi_cmd:0000000000000084 $d
     /tmp/ccrJoCXE.s:610    .rodata.str1.4:0000000000000000 $d
     /tmp/ccrJoCXE.s:1193   .rodata.cmds:0000000000000000 $d
     /tmp/ccrJoCXE.s:1197   .rodata.cmds:0000000000000000 cmds

UNDEFINED SYMBOLS
memset
strtok
memcpy
strlen
strstr
SPI_Send_AT_Command
WiFi_SPI_Packet
strncasecmp
printf
strchr
strrchr
sscanf
atoi
