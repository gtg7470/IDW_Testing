ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"wifi_module_uart_04.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Queue_Server_Write_Event,"ax",%progbits
  18              		.align	1
  19              		.global	Queue_Server_Write_Event
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Queue_Server_Write_Event:
  26              	.LFB275:
  27              		.file 1 "Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c"
   1:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
   2:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  ******************************************************************************
   3:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * @file    wifi_module_uart_04.c
   4:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * @author  Central LAB
   5:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * @version V2.1.0
   6:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * @date    25-Nov-2016
   7:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * @brief   Enable Wi-Fi functionality using AT cmd set
   8:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  ******************************************************************************
   9:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * @attention
  10:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *
  11:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  12:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *
  13:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * Redistribution and use in source and binary forms, with or without modification,
  14:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * are permitted provided that the following conditions are met:
  15:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *   1. Redistributions of source code must retain the above copyright notice,
  16:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *      this list of conditions and the following disclaimer.
  17:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  18:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *      this list of conditions and the following disclaimer in the documentation
  19:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *      and/or other materials provided with the distribution.
  20:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  21:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *      may be used to endorse or promote products derived from this software
  22:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *      without specific prior written permission.
  23:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *
  24:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  27:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  28:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  29:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  30:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  31:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 2


  32:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  33:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  *
  35:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  ******************************************************************************
  36:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  */
  37:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /* Includes ------------------------------------------------------------------*/
  38:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #include "wifi_module.h"
  39:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #include "wifi_globals.h"
  40:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  41:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  42:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /** @addtogroup MIDDLEWARES
  43:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @{
  44:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */ 
  45:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  46:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /** @defgroup  NUCLEO_WIFI_MODULE
  47:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   * @brief Wi-Fi driver modules
  48:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   * @{
  49:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   */
  50:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  51:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /** @defgroup NUCLEO_WIFI_MODULE_Private_Defines
  52:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   * @{
  53:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   */
  54:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  55:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
  56:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   * @}
  57:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   */
  58:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  59:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /** @addtogroup NUCLEO_WIFI_MODULE_Private_Variables
  60:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   * @{
  61:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   */
  62:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  63:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /***** Variables Declaration *****/
  64:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #define BUFFER_SIZE 900
  65:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** extern wifi_instances_t wifi_instances;
  66:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  67:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** int parsing_networks;
  68:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  69:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** char str[BUFFER_SIZE];
  70:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** uint8_t topic[100];
  71:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** uint8_t message_pending_buffer[BUFFER_SIZE];
  72:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  73:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** int bytes_read = 0;
  74:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** int8_t client_id = -1;
  75:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** int last_message_size = 0;
  76:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** int last_dma_buffer_count = 0;
  77:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** uint8_t message_pending = WIFI_FALSE;
  78:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** uint32_t message_pending_buffer_index;
  79:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** uint32_t remaining_unused_datalength = 0;
  80:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** int32_t message_size = -1,total_message_size = -1;
  81:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  82:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #if defined(SPWF04)
  83:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
  84:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #undef memmem
  85:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void *memmem(const void *haystack, size_t haystack_len, const void *needle, size_t needle_len);
  86:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /*
  87:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  * Find the first occurrence of the byte string s in byte string l.
  88:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 3


  89:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
  90:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  memmem
  91:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Find the first occurrence of the byte string s in byte string l.
  92:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  haystack:     string to be scanned
  93:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  haystack_len: length of the string to be scanned
  94:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  needle:       string containing the sequence of characters to match
  95:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  needle_len:   length of needle.
  96:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
  97:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
  98:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void *memmem(const void *haystack, size_t haystack_len, const void *needle, size_t needle_len)
  99:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 100:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   register char *cur, *last;
 101:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   const char *ch = (const char *)haystack;
 102:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   const char *cn = (const char *)needle;
 103:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 104:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* we need something to compare */
 105:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if (haystack_len == 0 || needle_len == 0)
 106:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           return NULL;
 107:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 108:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* "needle" must be smaller or equal to "l" */
 109:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if (haystack_len < needle_len)
 110:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           return NULL;
 111:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 112:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* special case where needle_len == 1 */
 113:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if (needle_len == 1)
 114:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           return memchr(haystack, (int)*cn, haystack_len);
 115:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 116:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* the last position where its possible to find "s" in "haystack" */
 117:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   last = (char *)ch + haystack_len - needle_len;
 118:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 119:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   for (cur = (char *)ch; cur <= last; cur++)
 120:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if (cur[0] == cn[0] && memcmp(cur, cn, needle_len) == 0)
 121:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   return cur;
 122:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 123:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   return NULL;
 124:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 125:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 126:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 127:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** WiFi_Status_t Soft_Reset(void)
 128:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 129:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 130:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 131:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #if DEBUG_PRINT  
 132:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   printf("\r\n >>Soft Reset Wi-Fi module\r\n");
 133:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #endif
 134:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 135:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   Reset_AT_CMD_Buffer();
 136:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 137:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* AT : send AT command */
 138:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   sprintf((char*)WiFi_AT_Cmd_Buff,AT_RESET);  
 139:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** //  WiFi_WIND_State.WiFiReset = WIFI_FALSE;
 140:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   IO_status_flag.WiFi_WIND_State = Undefine_state;
 141:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   status = USART_Transmit_AT_Cmd(strlen((char*)WiFi_AT_Cmd_Buff));
 142:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(status != WiFi_MODULE_SUCCESS) 
 143:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     return status;
 144:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* AT+CFUN=1 //Soft reset */
 145:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   while(IO_status_flag.WiFi_WIND_State != WiFiHWStarted)
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 4


 146:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 147:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     __NOP(); //nothing to do
 148:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 149:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   return status;
 150:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 151:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #endif
 152:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 153:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #if defined(SPWF04) && defined(CONSOLE_UART_ENABLED)
 154:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 155:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 156:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  unused_data_handling
 157:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         ignore the next "length_of_data" bytes of data
 158:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  length_of_data: amount of data to be ignored
 159:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
 160:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 161:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void unused_data_handling(uint32_t length_of_data)
 162:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 163:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char *pStr;
 164:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   
 165:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* Check if there is some message in between the data */
 166:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(( pStr = strstr((const char *)dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_count,"+WIND:")
 167:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   || ( pStr = strstr((const char *)dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_count,"AT+S."))
 168:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   || ( pStr = strstr((const char *)dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_count,"AT-S."))
 169:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 170:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     int index_of_message = (uint8_t *)pStr - (uint8_t *)dma_buffer_ptr;
 171:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     if(index_of_message < WiFi_Counter_Variables.dma_buffer_count + length_of_data)
 172:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 173:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       length_of_data = index_of_message - WiFi_Counter_Variables.dma_buffer_count;
 174:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       WiFi_Control_Variables.pending_unused_data = WIFI_TRUE;
 175:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     }
 176:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 177:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 178:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   int length_of_data_in_dma_buffer = strlen((const char *)dma_buffer_ptr+WiFi_Counter_Variables.dma
 179:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* If available data in buffer less than the data to be ignored */
 180:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(length_of_data_in_dma_buffer < length_of_data)
 181:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 182:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     length_of_data = length_of_data_in_dma_buffer;
 183:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Control_Variables.pending_unused_data = WIFI_TRUE;
 184:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 185:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 186:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   remaining_unused_datalength -= length_of_data;
 187:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Counter_Variables.dma_buffer_count += length_of_data;
 188:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(WiFi_Counter_Variables.dma_buffer_count >= DMA_BUFFER_SIZE)
 189:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 190:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     memset(dma_buffer+WiFi_Counter_Variables.dma_buffer_previous_index,0x00, DMA_BUFFER_SIZE - WiFi
 191:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.dma_buffer_previous_index =0;
 192:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.dma_buffer_count %= DMA_BUFFER_SIZE;
 193:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 194:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(WiFi_Counter_Variables.dma_buffer_count > 0)
 195:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     memset(dma_buffer+ WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_Variables
 196:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 197:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_count;
 198:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 199:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 200:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 201:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 202:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  Read_DMA_Buffer
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 5


 203:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Processes the DMA buffer if dma_buffer is non empty 
 204:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  None
 205:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
 206:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 207:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Read_DMA_Buffer()
 208:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 209:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* is there data in the buffer? */
 210:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(*(dma_buffer_ptr + WiFi_Counter_Variables.dma_buffer_count) != 0x00)
 211:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 212:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     Process_DMA_Buffer();
 213:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     if(WiFi_Counter_Variables.dma_buffer_count != 0 && (WiFi_Counter_Variables.dma_buffer_count !=W
 214:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 215:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* TBD: resest the last part of dma_buffer */
 216:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_Vari
 217:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_count;
 218:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     }
 219:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 220:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 221:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 222:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 223:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 224:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  Adjust_DMA_Buffer_Index
 225:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Adjust the DMA Buffer Index i.e. dma_buffer_count variable
 226:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  bytes_read: number of bytes read
 227:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
 228:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 229:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Adjust_DMA_Buffer_Index(int bytes_read)
 230:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 231:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Counter_Variables.dma_buffer_count += bytes_read;
 232:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* Wrap the DMA buffer pointer (if required) */
 233:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(WiFi_Counter_Variables.dma_buffer_count > DMA_BUFFER_SIZE)
 234:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.dma_buffer_count = DMA_BUFFER_SIZE;
 235:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 236:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 237:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 238:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 239:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  are_extra_bytes_read
 240:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         are bytes read from another buffer apart from the one which we were reading.
 241:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  idn: identifier(WIND/CMD/INTERIM_DATA/UNDEFINE)
 242:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
 243:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 244:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Check_for_Extra_Bytes(int idn)
 245:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 246:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(WiFi_Counter_Variables.dma_buffer_count + bytes_read > DMA_BUFFER_END_INDEX)
 247:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 248:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     message_classification_TypeDef message_type;
 249:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     message_type = (message_classification_TypeDef)idn;
 250:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     int length = WiFi_Counter_Variables.dma_buffer_count + bytes_read - DMA_BUFFER_SIZE;
 251:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     bytes_read = DMA_BUFFER_SIZE - WiFi_Counter_Variables.dma_buffer_count;
 252:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     switch(message_type)
 253:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 254:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         case WIND:
 255:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(str+(strlen(str) - length),0x00,length);
 256:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           break;
 257:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         case CMD:
 258:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         case INTERIM_DATA:
 259:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(str+(bytes_read-5),0x00,length);
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 6


 260:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           break;
 261:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         case UNDEFINE:
 262:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(str+bytes_read,0x00,length);
 263:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           break;
 264:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         default:
 265:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           break;
 266:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     }
 267:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 268:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 269:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 270:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 271:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 272:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  end_of_buffer_reached
 273:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         start reading data from next buffer once end of previous buffer is reached
 274:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  None
 275:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval wifi_bool: true if end of buffer reached, false otherwise
 276:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 277:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** wifi_bool is_End_of_Buffer_Reached()
 278:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 279:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /* WiFi_Counter_Variables.dma_buffer_count + bytes_read == DMA_BUFFER_SIZE when partial message r
 280:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****      WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE  when complete end of message recei
 281:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 282:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE || 
 283:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****      WiFi_Counter_Variables.dma_buffer_count + bytes_read == DMA_BUFFER_SIZE)
 284:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 285:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     if(WiFi_Counter_Variables.dma_buffer_count + bytes_read == DMA_BUFFER_SIZE)
 286:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 287:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* the rest of message is stored in another buffer, copy the pending message to a temporary b
 288:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       message_pending_buffer_index = (DMA_BUFFER_SIZE) - WiFi_Counter_Variables.dma_buffer_count;
 289:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       memcpy(message_pending_buffer, dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_count, messag
 290:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       message_pending = WIFI_TRUE;
 291:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     }
 292:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,DMA_BUFFER_SIZE-WiF
 293:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.dma_buffer_count = 0;
 294:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
 295:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     return WIFI_TRUE;
 296:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
 297:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   return WIFI_FALSE;
 298:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }
 299:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 300:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 301:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 302:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  Process_DMA_Buffer
 303:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Classify the DMA buffer messages as WIND/AT-S./AT+S./other
 304:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  None
 305:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
 306:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 307:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Process_DMA_Buffer(void)
 308:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 309:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   int wind_no;
 310:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Control_Variables.complete_message_recv = WIFI_TRUE;
 311:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   const char* pStr;
 312:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 313:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   while(WiFi_Control_Variables.complete_message_recv && (*(dma_buffer_ptr + WiFi_Counter_Variables.
 314:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 315:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     memset(str,0x00,sizeof(str));
 316:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     bytes_read = 0;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 7


 317:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     pStr = (const char*) dma_buffer_ptr + WiFi_Counter_Variables.dma_buffer_count;
 318:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 319:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     /* WIND Message */
 320:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     if(sscanf(pStr,"+WIND:%d:%[^\n]%n", &wind_no,str,&bytes_read))
 321:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 322:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* if while reading bytes we have automatically switched to another buffer apart from the one
 323:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       Check_for_Extra_Bytes(WIND);
 324:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 325:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* is complete message recv? */
 326:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* Check for complete message till 0x0A(\n) rather than 0x0D(\r).
 327:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****          If we check till 0x0D(\r) and 0x0A(\n) is not recv then it(\n) might become a part of the 
 328:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(*(dma_buffer_ptr + WiFi_Counter_Variables.dma_buffer_count + bytes_read) == 0x0A)
 329:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 330:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         #if DEBUG_PRINT
 331:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf("\r\n+WIND:%d:",wind_no);
 332:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf((const char*)str);
 333:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf("\r\n");
 334:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         #endif
 335:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Adjust_DMA_Buffer_Index (bytes_read+1); 
 336:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Process_DMA_Buffer_Messages(WIND,wind_no,(uint8_t *)str);
 337:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
 338:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Counter_Variables.dma_buffer_count >= DMA_BUFFER_SIZE)
 339:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           is_End_of_Buffer_Reached();
 340:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 341:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
 342:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 343:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(is_End_of_Buffer_Reached()) 
 344:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 345:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if DEBUG_PRINT
 346:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n+WIND:%d:",wind_no);
 347:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf((const char*)str);
 348:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
 349:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
 350:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 351:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
 352:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 353:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             /* corner case, if only "+WIND: or +WIND:55:" arrived */
 354:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             int bytes_in_dma_buffer = strlen((const char *)dma_buffer+WiFi_Counter_Variables.dma_bu
 355:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(WiFi_Counter_Variables.dma_buffer_count+bytes_in_dma_buffer == DMA_BUFFER_SIZE)
 356:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 357:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 bytes_read = bytes_in_dma_buffer;
 358:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 is_End_of_Buffer_Reached();
 359:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
 360:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else
 361:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Control_Variables.complete_message_recv = WIFI_FALSE;
 362:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 363:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 364:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } // end of WIND message
 365:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 366:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     /* Command Received..AT+S.*/
 367:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     else if(sscanf(pStr,"AT+S.%[^\n]%n",str,&bytes_read))
 368:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 369:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* if while reading bytes we have automatically switched to another buffer apart from the one
 370:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       Check_for_Extra_Bytes(CMD);
 371:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 372:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* is complete message recv? */
 373:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(*(dma_buffer_ptr + (WiFi_Counter_Variables.dma_buffer_count + bytes_read)) == 0x0A)
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 8


 374:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 375:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         #if DEBUG_PRINT
 376:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf("\r\n");
 377:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf("AT+S.");
 378:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf((const char*)str);
 379:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           printf("\r\n");
 380:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         #endif
 381:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Adjust_DMA_Buffer_Index (bytes_read+1); 
 382:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Process_DMA_Buffer_Messages(CMD,bytes_read,(uint8_t *)str);
 383:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 384:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
 385:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         is_End_of_Buffer_Reached();
 386:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 387:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
 388:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 389:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* complete message not received but end of buffer reached? */
 390:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(is_End_of_Buffer_Reached()) 
 391:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 392:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if DEBUG_PRINT
 393:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("AT+S.");
 394:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf((const char*)str);
 395:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
 396:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif  
 397:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 398:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
 399:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 400:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             /* corner case, if "AT+S." arrived */
 401:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             int bytes_in_dma_buffer = strlen((const char *)dma_buffer+WiFi_Counter_Variables.dma_bu
 402:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(WiFi_Counter_Variables.dma_buffer_count+bytes_in_dma_buffer == DMA_BUFFER_SIZE)
 403:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 404:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 bytes_read = bytes_in_dma_buffer;
 405:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 is_End_of_Buffer_Reached();
 406:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
 407:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else
 408:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Control_Variables.complete_message_recv = WIFI_FALSE;
 409:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 410:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 411:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } // end of AT+S. message
 412:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 413:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     /* Response Received..AT-S.*/
 414:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     else if(sscanf(pStr,"AT-S.%[^\n]%n",str,&bytes_read))
 415:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 416:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* if while reading bytes we have automatically switched to another buffer apart from the one
 417:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       Check_for_Extra_Bytes(INTERIM_DATA);
 418:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 419:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* is complete message recv? */
 420:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(*(dma_buffer_ptr + (WiFi_Counter_Variables.dma_buffer_count + bytes_read)) == 0x0A)
 421:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 422:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* If fw update or http request ongoing */
 423:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Control_Variables.enable_fw_update_read || WiFi_Control_Variables.enable_receive_ht
 424:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 425:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Process_DMA_Buffer_Messages(UNDEFINE,-1,(uint8_t *)pStr);
 426:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 427:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
 428:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 429:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if DEBUG_PRINT
 430:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 9


 431:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("AT-S.");
 432:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf((const char*)str);
 433:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
 434:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
 435:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Adjust_DMA_Buffer_Index (bytes_read+1); 
 436:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(strstr(str,"OK"))
 437:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Process_DMA_Buffer_Messages(OK,-1,(uint8_t *)str);
 438:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else if(strstr(str,"ERROR"))
 439:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Process_DMA_Buffer_Messages(ERROR_MSG,-1,(uint8_t *)str);
 440:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
 441:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Process_DMA_Buffer_Messages(INTERIM_DATA,strlen(str),(uint8_t *)str);
 442:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           
 443:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****          if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
 444:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             is_End_of_Buffer_Reached();
 445:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 446:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 447:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
 448:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 449:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(is_End_of_Buffer_Reached()) 
 450:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 451:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if DEBUG_PRINT
 452:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("AT-S.");
 453:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf((const char*)str);
 454:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
 455:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
 456:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 457:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
 458:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 459:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* corner case, if "AT-S." arrived */
 460:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           int bytes_in_dma_buffer = strlen((const char *)dma_buffer+WiFi_Counter_Variables.dma_buff
 461:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Counter_Variables.dma_buffer_count+bytes_in_dma_buffer == DMA_BUFFER_SIZE)
 462:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 463:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               bytes_read = bytes_in_dma_buffer;
 464:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               is_End_of_Buffer_Reached();
 465:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 466:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
 467:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.complete_message_recv = WIFI_FALSE;
 468:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 469:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 470:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } // end of AT-S. message
 471:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 472:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     /* Some incomplete message/other messages...maybe result of scan*/
 473:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     else
 474:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 475:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* a broken message in between the unused data */
 476:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if((message_pending == WIFI_TRUE) && (WiFi_Control_Variables.pending_unused_data == WIFI_TRUE
 477:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 478:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.temporarily_modify_variable_value = WIFI_TRUE;
 479:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.pending_unused_data = WIFI_FALSE;
 480:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 481:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       
 482:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(!WiFi_Control_Variables.enable_receive_http_response 
 483:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        && !WiFi_Control_Variables.enable_sock_read
 484:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        && !WiFi_Control_Variables.pending_unused_data)
 485:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 486:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         sscanf(pStr,"%[^\n]%n",str,&bytes_read);
 487:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 10


 488:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* if the value at WiFi_Counter_Variables.dma_buffer_count is \n, then bytes_read will have
 489:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(*(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_count) == 0x0A)
 490:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           bytes_read=0;
 491:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 492:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* if while reading bytes we have automatically switched to another buffer apart from the o
 493:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Check_for_Extra_Bytes(UNDEFINE);
 494:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 495:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* is complete message recv? */
 496:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(*(dma_buffer_ptr + (WiFi_Counter_Variables.dma_buffer_count + bytes_read)) == 0x0A)
 497:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 498:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* The value at dma_buffer_count is 0x0A */
 499:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if DEBUG_PRINT
 500:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
 501:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf((const char*)str);
 502:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             printf("\r\n");
 503:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
 504:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Adjust_DMA_Buffer_Index (bytes_read+1);
 505:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* A broken message was encountered */
 506:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(message_pending)
 507:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 508:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             /* strcat(destination,source) */
 509:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             strcat((char *)message_pending_buffer,str);
 510:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             pStr = (const char*)&message_pending_buffer[0];
 511:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             /* WIND */
 512:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(sscanf(pStr,"+WIND:%d:%[^\n]%n", &wind_no,str,&bytes_read))
 513:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               Process_DMA_Buffer_Messages(WIND,wind_no,(uint8_t *)str);
 514:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else if(sscanf(pStr,"AT+S.%[^\n]%n",str,&bytes_read))
 515:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               Process_DMA_Buffer_Messages(CMD,bytes_read,(uint8_t *)str);
 516:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else if(sscanf(pStr,"AT-S.%[^\n]%n",str,&bytes_read))
 517:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 518:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               if(strstr(str,"OK"))
 519:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Process_DMA_Buffer_Messages(OK,-1,(uint8_t *)str);
 520:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               else if(strstr(str,"ERROR"))
 521:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Process_DMA_Buffer_Messages(ERROR_MSG,-1,(uint8_t *)str);
 522:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               else
 523:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Process_DMA_Buffer_Messages(INTERIM_DATA,-1,(uint8_t *)str);
 524:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             } //end of else if
 525:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else  /* To check if this condition will ever arise */
 526:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               Process_DMA_Buffer_Messages(UNDEFINE,bytes_read,message_pending_buffer);
 527:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             
 528:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(message_pending_buffer,0x00,sizeof(message_pending_buffer));
 529:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             message_pending_buffer_index =0;
 530:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             message_pending = WIFI_FALSE;
 531:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(WiFi_Control_Variables.temporarily_modify_variable_value == WIFI_TRUE)
 532:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 533:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Control_Variables.pending_unused_data = WIFI_TRUE;
 534:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Control_Variables.temporarily_modify_variable_value = WIFI_FALSE;
 535:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
 536:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 537:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
 538:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Process_DMA_Buffer_Messages(UNDEFINE,bytes_read,(uint8_t *)str);
 539:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           
 540:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****          if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
 541:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           is_End_of_Buffer_Reached();
 542:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 543:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
 544:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 11


 545:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(is_End_of_Buffer_Reached()) 
 546:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 547:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   //          printf("\r\n other\r\n");
 548:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   //          printf((const char*)str);
 549:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   //          printf("\r\n");
 550:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 551:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
 552:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.complete_message_recv = WIFI_FALSE;
 553:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 554:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       } //end of if
 555:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else if(WiFi_Control_Variables.pending_unused_data)
 556:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 557:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* change in the value of variable has to be done before calling the unused_data_handling
 558:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.pending_unused_data = WIFI_FALSE;
 559:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           unused_data_handling(remaining_unused_datalength);
 560:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 561:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
 562:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
 563:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Process_DMA_Buffer_Messages(UNDEFINE,-1,(uint8_t *)pStr);
 564:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
 565:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } // end of other message
 566:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  }  //end of while
 567:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 568:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Control_Variables.complete_message_recv = WiFi_Control_Variables.complete_message_recv == WI
 569:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** }  //end of process_dma_buffer_messages()
 570:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 571:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 572:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 573:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
 574:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  Process_DMA_Buffer_Messages
 575:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Process the classified DMA buffer messages
 576:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  idn: identifier to the type of message(WIND/ Command(AT+S.)/ Response(AT-S.)/ other)
 577:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  wind_no: wind_no in case of WIND message else -1
 578:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  ptr: pointer to the message
 579:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
 580:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
 581:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 582:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Process_DMA_Buffer_Messages(int idn, int wind_no, uint8_t * ptr)
 583:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
 584:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   static uint32_t Fillptr=0;
 585:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char SocketId_No[2];
 586:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char databytes_No[4];
 587:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char * pStr;
 588:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   static uint8_t HTTP_Runway_Buff[10];  //Used to store the last 6 bytes in between User Callbacks 
 589:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   static uint8_t process_buffer[MAX_BUFFER_GLOBAL];
 590:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 591:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   message_classification_TypeDef message_type;
 592:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   reset_event(&wifi_instances.wifi_event);
 593:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 594:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   message_type = (message_classification_TypeDef)idn;
 595:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 596:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   if(!WiFi_Control_Variables.enable_receive_http_response
 597:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        && !WiFi_Control_Variables.enable_receive_wifi_scan_response 
 598:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        && !WiFi_Control_Variables.enable_sock_read
 599:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        && !WiFi_Control_Variables.enable_fw_update_read)
 600:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
 601:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     switch(message_type)
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 12


 602:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
 603:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       case WIND:
 604:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //end of msg received. Will not receive any other msg till we process this.
 605:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Stop_Timer();
 606:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if defined (USE_STM32L0XX_NUCLEO) || (USE_STM32F4XX_NUCLEO) || (USE_STM32L4XX_NUCLEO)
 607:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           __disable_irq();
 608:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
 609:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Process_Wind_Indication(wind_no,ptr);
 610:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if defined (USE_STM32L0XX_NUCLEO) || (USE_STM32F4XX_NUCLEO) || (USE_STM32L4XX_NUCLEO)
 611:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           __enable_irq();
 612:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
 613:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Start_Timer();
 614:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 615:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(!WiFi_Control_Variables.prevent_push_WIFI_event)
 616:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 617:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 __disable_irq();
 618:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
 619:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                  __enable_irq();
 620:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 reset_event(&wifi_instances.wifi_event);
 621:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
 622:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 623:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else if(!WiFi_Control_Variables.queue_wifi_wind_message)  //if we do not want to queue a 
 624:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 625:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 reset_event(&wifi_instances.wifi_event);
 626:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.prevent_push_WIFI_event = WIFI_FALSE;
 627:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.queue_wifi_wind_message = WIFI_TRUE;
 628:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
 629:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if (!WiFi_Control_Variables.do_not_reset_push_WIFI_event) 
 630:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.prevent_push_WIFI_event = WIFI_FALSE;
 631:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 632:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Fillptr=0;
 633:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Control_Variables.enable_sock_read)
 634:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.Q_Contains_Message = WIFI_FALSE;
 635:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else if(WiFi_Control_Variables.mqtt_data_available == WIFI_FALSE)
 636:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             return;
 637:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
 638:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 639:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       case CMD:
 640:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* Two commands received simultaneously..ignore the previous command of which there is no
 641:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(Fillptr!=0)
 642:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 643:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(process_buffer,0x00,MAX_BUFFER_GLOBAL);
 644:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Fillptr=0;
 645:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 646:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           strcpy((char *)process_buffer,"AT+S.");
 647:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           strcpy((char *)process_buffer+5,(const char *)ptr);
 648:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Fillptr += wind_no;
 649:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Control_Variables.Ok_terminated_data_request_pending)
 650:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 651:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.enable_receive_http_response = WIFI_TRUE;
 652:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.Ok_terminated_data_request_pending = WIFI_FALSE;
 653:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.enable_timeout_timer = WIFI_FALSE; //stop the timeout timer as r
 654:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.timeout_tick         = 0;
 655:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Fillptr = 0;
 656:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(process_buffer, 0x00, strlen((char const *)process_buffer));
 657:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 658:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 13


 659:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 660:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       case INTERIM_DATA:
 661:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
 662:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* AT+S.SCAN\r\n AT-S.Parsing Networks:%d */
 663:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           int network_count;
 664:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           int bytes1,bytes2;
 665:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(sscanf((const char*)ptr,"Parsing Networks:%d",&network_count))
 666:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 667:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.user_scan_number = (WiFi_Counter_Variables.user_scan_numbe
 668:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Control_Variables.enable_receive_wifi_scan_response = WIFI_TRUE;
 669:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   return;
 670:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 671:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else if(sscanf((const char*)ptr,"Reading:%d:%d\r",&bytes1,&bytes2))
 672:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
 673:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.sock_total_count = 0;
 674:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Control_Variables.enable_sock_read = WIFI_TRUE;
 675:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 676:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   if(WiFi_Counter_Variables.dma_buffer_count)
 677:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiF
 678:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   else
 679:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,102
 680:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buf
 681:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 682:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 683:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else {
 684:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   strcpy((char*)process_buffer+Fillptr,"AT-S.");
 685:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   Fillptr+=5;
 686:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   strcpy((char*)process_buffer+Fillptr,(const char*)ptr);
 687:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   Fillptr += wind_no;
 688:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
 689:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
 690:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
 691:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 692:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       case OK:
 693:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            /*Now Check to which AT Cmd response this OK belongs to so that correct parsing can be d
 694:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 695:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           // SOCKON ID (Open a client socket)
 696:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //Reply to SOCKON for SPWF04 -> AT-S.On:<IP Address>:0
 697:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(((pStr=(strstr((const char *)process_buffer,"AT+S.SOCKON"))) != NULL))      
 698:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
 699:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 /* Stop the timer, response of client_socket_open received. */
 700:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_timeout_timer = WIFI_FALSE;
 701:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.timeout_tick = 0;
 702:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 703:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strrchr((char *)process_buffer,':');
 704:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 SocketId_No[0] = *(token+1);
 705:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 706:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.socket_id = (SocketId_No[0] - '0');
 707:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.event     =  WIFI_SOCK_ID_EVENT;
 708:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 __disable_irq();
 709:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
 710:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                  __enable_irq();
 711:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 reset_event(&wifi_instances.wifi_event);
 712:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 memset(process_buffer,0x00,MAX_BUFFER_GLOBAL);
 713:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Fillptr=0;
 714:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
 715:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 14


 716:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //Reply to WSOCKON (websocket) for SPWF04 -> +AT_S.WSOCKON=<IPAddress>,<port>,,0,,,,,\r\n
 717:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            else if(((pStr=(strstr((const char *)process_buffer,"AT+S.WSOCKON"))) != NULL))
 718:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              {
 719:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_timeout_timer = WIFI_FALSE;
 720:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.timeout_tick = 0;
 721:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 722:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, ":");
 723:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the 2nd token
 724:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 725:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //token = strtok(NULL, ":");
 726:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 727:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 SocketId_No[0]    = *token ;
 728:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //SocketId_No[1]    = *(pStr + 5) ;
 729:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 730:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.socket_id = (SocketId_No[0] - '0');
 731:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.event     =  WIFI_WEBSOCK_ID_EVENT;
 732:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 __disable_irq();
 733:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
 734:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                  __enable_irq();
 735:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 reset_event(&wifi_instances.wifi_event);
 736:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
 737:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           
 738:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           // Datalen from websocket
 739:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else if((pStr=(strstr((const char *)process_buffer,"AT+S.WSOCKQ"))) != NULL)
 740:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              {
 741:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, ":");
 742:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the second token
 743:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 744:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 745:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //Find the DataLength and do a socket read
 746:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[0] = *(token);
 747:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[1] = *(token + 1);
 748:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[2] = *(token + 2);
 749:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[3] = *(token + 3);
 750:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 751:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if( databytes_No[1] == '\r')
 752:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 753:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = databytes_No[0] - '0'; 
 754:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 755:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if( databytes_No[2] == '\r')
 756:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 757:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = (((databytes_No[0] - '0') * 10 ) + 
 758:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 759:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if( databytes_No[3] == '\r')
 760:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 761:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = (((databytes_No[0] - '0') * 100 ) +
 762:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 763:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else //it's a 4-digit number
 764:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 765:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length  = ((databytes_No[0] - '0') * 1000 ) 
 766:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 767:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Counter_Variables.Socket_Data_Length != 0)
 768:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 769:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.start_websock_read = WIFI_TRUE;
 770:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.data_pending_websocket = WIFI_TRUE;
 771:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 772:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if(WiFi_Counter_Variables.Socket_Data_Length == 0)  //no data remaining to be 
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 15


 773:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 774:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     if(WiFi_Counter_Variables.socket_close_pending[WiFi_Counter_Variables.sockon_qu
 775:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       {
 776:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         // Q socket_close event for that socket for which sock_close command could 
 777:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                          if(open_sockets[WiFi_Counter_Variables.sockon_query_id])
 778:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                           {
 779:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             //Queue_Client_Close_Event(WiFi_Counter_Variables.sockon_query_id, NET_
 780:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                           }
 781:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         WiFi_Counter_Variables.socket_close_pending[WiFi_Counter_Variables.sockon_q
 782:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       }
 783:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.data_pending_websocket = WIFI_FALSE;
 784:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;  //continue popping eve
 785:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 786:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
 787:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 788:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             // DATALEN from SOCKQ
 789:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            else if((pStr=(strstr((const char *)process_buffer,"KQ"))) != NULL)
 790:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              {
 791:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, ":");
 792:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the second token
 793:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 794:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 795:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //Find the DataLength and do a socket read
 796:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[0] = *(token);
 797:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[1] = *(token + 1);
 798:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[2] = *(token + 2);
 799:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[3] = *(token + 3);
 800:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 801:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if( databytes_No[1] == '\r')
 802:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 803:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = databytes_No[0] - '0'; 
 804:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 805:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if( databytes_No[2] == '\r')
 806:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 807:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = (((databytes_No[0] - '0') * 10 ) + 
 808:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 809:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if( databytes_No[3] == '\r')
 810:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 811:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = (((databytes_No[0] - '0') * 100 ) +
 812:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 813:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else //it's a 4-digit number
 814:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 815:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length  = ((databytes_No[0] - '0') * 1000 ) 
 816:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 817:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Counter_Variables.Socket_Data_Length != 0)
 818:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 819:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.start_sock_read = WIFI_TRUE;
 820:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.data_pending_sockW = WIFI_TRUE;
 821:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 822:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if(WiFi_Counter_Variables.Socket_Data_Length == 0)  //no data remaining to be 
 823:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 824:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.data_pending_sockW = WIFI_FALSE;
 825:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;  //continue popping eve
 826:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 827:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL);
 828:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 return;
 829:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 16


 830:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 831:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           // DATALEN from SOCKDQ
 832:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            else if((pStr=(strstr((const char *)process_buffer,"DQ"))) != NULL)
 833:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              {
 834:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, ":");
 835:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the second token
 836:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 837:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 838:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //Find the DataLength and do a socket read
 839:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[0] = *(token);
 840:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[1] = *(token + 1);
 841:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[2] = *(token + 2);
 842:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 databytes_No[3] = *(token + 3);
 843:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 844:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if( databytes_No[1] == '\r')
 845:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 846:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = databytes_No[0] - '0'; 
 847:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 848:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if( databytes_No[2] == '\r')
 849:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 850:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = (((databytes_No[0] - '0') * 10 ) + 
 851:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 852:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if( databytes_No[3] == '\r')
 853:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 854:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length = (((databytes_No[0] - '0') * 100 ) +
 855:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 856:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else //it's a 4-digit number
 857:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 858:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.Socket_Data_Length  = ((databytes_No[0] - '0') * 1000 ) 
 859:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 860:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Counter_Variables.Socket_Data_Length != 0)
 861:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 862:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.start_sockd_read = WIFI_TRUE;
 863:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.data_pending_sockD = WIFI_TRUE; //to make sure callback 
 864:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 865:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if(WiFi_Counter_Variables.Socket_Data_Length == 0)  //no data remaining to be 
 866:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 867:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     memset(process_buffer,0x00,Fillptr);
 868:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     Fillptr=0;
 869:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     if(WiFi_Control_Variables.close_specific_client)
 870:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     {
 871:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       if(WiFi_Counter_Variables.server_socket_close_pending[WiFi_Counter_Variables.
 872:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       {
 873:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         Queue_Server_Close_Event(WiFi_Counter_Variables.sockdon_query_id,WiFi_Count
 874:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         WiFi_Counter_Variables.server_socket_close_pending[WiFi_Counter_Variables.s
 875:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       }
 876:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     }
 877:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.data_pending_sockD = WIFI_FALSE;
 878:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;  //continue popping eve
 879:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
 880:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 memset(process_buffer,0x00,MAX_BUFFER_GLOBAL);
 881:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Fillptr=0;
 882:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
 883:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 884:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            //Reply to SOCKDON (server socket) for SPWF04 -> AT-S.On:0
 885:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else if((pStr=(strstr((const char *)process_buffer,"AT+S.SOCKDON"))) != NULL)
 886:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 17


 887:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 /* Stop the timer, response of client_socket_open received. */
 888:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_timeout_timer = WIFI_FALSE;
 889:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.timeout_tick = 0;
 890:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 891:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, ":");
 892:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the 2nd token
 893:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 894:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //token = strtok(NULL, ":");
 895:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 896:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 SocketId_No[0]    = *token ;
 897:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //SocketId_No[1]    = *(pStr + 5) ;
 898:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 899:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.socket_id = (SocketId_No[0] - '0');
 900:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.event     =  WIFI_SOCK_SERVER_ID_EVENT;
 901:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 __disable_irq();
 902:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
 903:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                  __enable_irq();
 904:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 reset_event(&wifi_instances.wifi_event);
 905:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 memset(process_buffer,0x00,MAX_BUFFER_GLOBAL);
 906:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Fillptr=0;
 907:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
 908:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           
 909:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            else if((pStr = (char *)(strstr((const char *)process_buffer,"AT+S.STS"))) != NULL || 
 910:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                    (pStr = (char *)(strstr((const char *)process_buffer,"AT+S.GCFG"))) != NULL)
 911:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              {
 912:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 // AT command AT+S.GCFG or AT+S.STS
 913:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, "=");
 914:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the 3rd token
 915:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, "=");
 916:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, "=");
 917:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char* ptr = token;
 918:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char* ptr_usr = (char *)WiFi_Counter_Variables.get_cfg_value;
 919:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 while(*ptr != '\r') *(ptr_usr++) = *(ptr++);//copy the var from token to get_cfg_va
 920:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 921:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 /* do not queue gcfg event when setting epoch time as we are waiting for the Ok in 
 922:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 IO_status_flag.AT_Response_Received = WIFI_TRUE;
 923:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.AT_RESPONSE = WiFi_MODULE_SUCCESS;
 924:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 925:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 memset(process_buffer,0x00,MAX_BUFFER_GLOBAL);
 926:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 Fillptr=0;
 927:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
 928:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           
 929:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            else if((strstr((const char *)process_buffer,"AT+S.GPIOR")) != NULL) 
 930:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
 931:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   // AT+S.GPIOR
 932:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 char *token = strtok((char *)process_buffer, ":");
 933:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //just use the 3rd and 4th token
 934:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 935:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 936:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
 937:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.gpio_value = *token - '0';
 938:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 token = strtok(NULL, ":");
 939:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.gpio_dir= *token - '0';    //out
 940:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     
 941:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   //Push GPIO Read Event on Event_Queue
 942:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   wifi_instances.wifi_event.event = WIFI_GPIO_EVENT;
 943:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   __disable_irq();
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 18


 944:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
 945:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                    __enable_irq();
 946:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   reset_event(&wifi_instances.wifi_event);
 947:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   Fillptr=0;
 948:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL);
 949:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 950:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   if(WiFi_Control_Variables.enable_sock_read)
 951:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.Q_Contains_Message = WIFI_FALSE;
 952:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   else
 953:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     return;
 954:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
 955:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            else
 956:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              {
 957:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //This is a standalone OK
 958:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 /*Cases possible
 959:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 - TLSCERT,TLSCERT2, TLSDOMAIN, SETTIME
 960:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 - S.SOCKW, SOCKR, S.SOCKC, S.SOCKD (open a server socket)
 961:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 - File Operations
 962:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 - S.GPIOC and S.GPIOW
 963:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 */
 964:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //Push a simple OK Event, if this is an OK event required to be pushed to Q 
 965:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(IO_status_flag.prevent_push_OK_event)
 966:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
 967:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       //This OK is not to be handled, hence the pop action on OK completion to be d
 968:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       if(IO_status_flag.client_socket_close_ongoing) //OK received is of the sock c
 969:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         {
 970:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             if(WiFi_Counter_Variables.no_of_open_client_sockets > 0)
 971:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               WiFi_Counter_Variables.no_of_open_client_sockets--;
 972:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             IO_status_flag.prevent_push_OK_event                         = WIFI_FAL
 973:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             #if DEBUG_PRINT
 974:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               printf("\r\n >> Socket Closed ID : %d\r\n",WiFi_Counter_Variables.rem
 975:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             #endif
 976:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             open_sockets[WiFi_Counter_Variables.remote_socket_closed_id] = WIFI_FAL
 977:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             //socket ID for which OK is received.
 978:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             WiFi_Counter_Variables.closed_socket_id                      = WiFi_Cou
 979:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             IO_status_flag.client_socket_close_ongoing                   = WIFI_FAL
 980:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
 981:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             //User Callback not required in case if sock_close is called by User (O
 982:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             if(Client_Socket_Close_Callback[WiFi_Counter_Variables.closed_socket_id
 983:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               {
 984:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 // User callback after successful socket Close
 985:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 WiFi_Control_Variables.SockON_Server_Closed_Callback = WIFI_TRUE;
 986:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 /*start de-Q only after the callback is successfully made*/
 987:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               }
 988:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             else
 989:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               {
 990:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 /* start de-Q only if we do not need a callback. */
 991:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 Client_Socket_Close_Callback[WiFi_Counter_Variables.closed_socket_i
 992:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;
 993:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               }
 994:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         }
 995:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       else if(IO_status_flag.web_socket_close_ongoing)
 996:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         {
 997:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             IO_status_flag.prevent_push_OK_event    = WIFI_FALSE;
 998:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             open_web_socket[WiFi_Counter_Variables.remote_socket_closed_id] = WIFI_
 999:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             //socket ID for which OK is received.
1000:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             WiFi_Counter_Variables.closed_socket_id = WiFi_Counter_Variables.remote
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 19


1001:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             IO_status_flag.web_socket_close_ongoing = WIFI_FALSE;
1002:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             IO_status_flag.client_socket_close_type = WEB_SOCKET;
1003:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             WiFi_Control_Variables.SockON_Server_Closed_Callback = WIFI_TRUE;
1004:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         }
1005:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       else if(IO_status_flag.server_socket_close_ongoing)
1006:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         {
1007:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             if(WiFi_Control_Variables.close_complete_server_socket)
1008:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             {
1009:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               for(int i=0;i<8;i++)
1010:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                 client_connected_on_server_socket[WiFi_Counter_Variables.remote_ser
1011:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               open_server_sockets[WiFi_Counter_Variables.remote_server_closed_id] =
1012:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               WiFi_Control_Variables.close_complete_server_socket = WIFI_FALSE;
1013:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             }
1014:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             else
1015:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             {
1016:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               client_connected_on_server_socket[WiFi_Counter_Variables.remote_serve
1017:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                               WiFi_Control_Variables.close_specific_client = WIFI_FALSE;
1018:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             }
1019:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             WiFi_Control_Variables.stop_event_dequeue    = WIFI_FALSE;
1020:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                             IO_status_flag.server_socket_close_ongoing   = WIFI_FALSE;
1021:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                         }
1022:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1023:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else
1024:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
1025:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     /* result of input ssi, do not queue Ok as Timx is disabled */
1026:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     if(WiFi_Control_Variables.fill_buffer_command_ongoing)
1027:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     {
1028:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       IO_status_flag.AT_Response_Received = WIFI_TRUE;
1029:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       WiFi_Counter_Variables.AT_RESPONSE = WiFi_MODULE_SUCCESS;
1030:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       IO_status_flag.AT_event_processing = WIFI_NO_EVENT;
1031:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       WiFi_Control_Variables.fill_buffer_command_ongoing = WIFI_FALSE;
1032:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     }
1033:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     else
1034:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     {
1035:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       wifi_instances.wifi_event.event = WIFI_OK_EVENT;
1036:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       __disable_irq();
1037:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event)
1038:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                        __enable_irq();
1039:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       reset_event(&wifi_instances.wifi_event);
1040:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     }
1041:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1042:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 IO_status_flag.prevent_push_OK_event = WIFI_FALSE;
1043:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 
1044:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Control_Variables.Scan_Ongoing == WIFI_TRUE)//If Scan was ongoing
1045:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1046:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Control_Variables.Scan_Ongoing = WIFI_FALSE; //Enable next scan             
1047:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.scanned_ssids=0;                       
1048:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Control_Variables.enable_receive_wifi_scan_response = WIFI_FALSE;
1049:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 }
1050:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              }
1051:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Fillptr=0;
1052:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL);
1053:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1054:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Control_Variables.enable_sock_read)
1055:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.Q_Contains_Message = WIFI_FALSE;
1056:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
1057:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             return;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 20


1058:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1059:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1060:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1061:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1062:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case ERROR_MSG:
1063:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //This is an ERROR
1064:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //There can be only ONE outstanding AT command and hence this ERROR belongs to that
1065:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //HTTP -> ERROR: host not found
1066:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //@TBD: Check all Errors Possible here???
1067:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if((strstr((const char *)ptr,"77:Pending data\r\n")) != NULL) //if Error after sock close
1068:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
1069:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               /* Error: Pending data received for server socket */
1070:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               if(( pStr = strstr((const char *)process_buffer,"AT+S.SOCKDC")) != NULL)
1071:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1072:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 printf("\r\n Error: Server socket could not be closed \r\n");
1073:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 IO_status_flag.server_socket_close_ongoing = WIFI_FALSE;
1074:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 IO_status_flag.prevent_push_OK_event       = WIFI_FALSE;
1075:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Control_Variables.close_specific_client)
1076:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.server_socket_close_pending[WiFi_Counter_Variables.remot
1077:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;
1078:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1079:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               else
1080:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1081:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 printf("\r\nERROR: Socket could not be closed..PENDING DATA\r\n");
1082:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //prevent the OK received after socket close command to be Q'ed
1083:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 IO_status_flag.prevent_push_OK_event        = WIFI_FALSE;     
1084:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 IO_status_flag.client_socket_close_ongoing  = WIFI_FALSE;
1085:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1086:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //when error while user trying to close a socket, so now callback required whenever
1087:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(!Client_Socket_Close_Callback[WiFi_Counter_Variables.remote_socket_closed_id])
1088:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
1089:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     //enable the SockON_Server_Closed_Callback
1090:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     Client_Socket_Close_Callback[WiFi_Counter_Variables.remote_socket_closed_id] = 
1091:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1092:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //close the socket for which ERROR is received afterwards, after reading the data o
1093:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.socket_close_pending[WiFi_Counter_Variables.remote_socket_cl
1094:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;
1095:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1096:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
1097:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
1098:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
1099:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(IO_status_flag.server_socket_close_ongoing && (strstr((const char *)ptr,"76:Ille
1100:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
1101:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       memset(process_buffer,0x00,sizeof(process_buffer));
1102:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       Fillptr = 0;
1103:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       IO_status_flag.server_socket_close_ongoing = WIFI_FALSE;
1104:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       IO_status_flag.prevent_push_OK_event       = WIFI_FALSE;
1105:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       WiFi_Control_Variables.stop_event_dequeue  = WIFI_FALSE;
1106:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                       break;
1107:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1108:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if(strstr((const char *)ptr,"78:Socket not connected") != NULL)
1109:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
1110:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     remaining_unused_datalength = WiFi_Counter_Variables.curr_DataLength;
1111:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     unused_data_handling(remaining_unused_datalength);
1112:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1113:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 else if(WiFi_Control_Variables.fill_buffer_command_ongoing)
1114:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 21


1115:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.fill_buffer_command_ongoing = WIFI_FALSE;
1116:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     IO_status_flag.AT_Response_Received = WIFI_TRUE;
1117:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.AT_RESPONSE = WiFi_AT_CMD_RESP_ERROR;
1118:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     IO_status_flag.AT_event_processing = WIFI_NO_EVENT;
1119:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     Fillptr=0;
1120:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL);
1121:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     return;
1122:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1123:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1124:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 wifi_instances.wifi_event.event = WIFI_ERROR_EVENT;
1125:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 __disable_irq();
1126:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
1127:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                  __enable_irq();
1128:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 reset_event(&wifi_instances.wifi_event);
1129:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Control_Variables.stop_event_dequeue)
1130:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   /*ERROR:Illegal Socket ID*/
1131:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;//continue popping events 
1132:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 if(WiFi_Control_Variables.enable_timeout_timer)
1133:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   {
1134:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Control_Variables.enable_timeout_timer = WIFI_FALSE;
1135:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     WiFi_Counter_Variables.timeout_tick = 0;
1136:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   }
1137:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
1138:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Fillptr=0;
1139:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL);
1140:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1141:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Control_Variables.enable_sock_read)
1142:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.Q_Contains_Message = WIFI_FALSE;
1143:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else
1144:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             return;
1145:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       break;
1146:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     default:
1147:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       break;
1148:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } // end of switch
1149:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   } //end of if
1150:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1151:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   else if(WiFi_Control_Variables.in_standby_mode)
1152:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
1153:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* Eliminate the NULL values received after WIND:67:Going into Standby */
1154:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(process_buffer[Fillptr-1] == '\0')
1155:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Fillptr = 0;
1156:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     }
1157:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   else if(Fillptr >= MAX_BUFFER_GLOBAL-1)
1158:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
1159:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       #if DEBUG_PRINT
1160:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       printf("\rJust Looping with unhandled data!\r\n");
1161:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       #endif          
1162:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       Fillptr=0;          
1163:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL); 
1164:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     }
1165:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1166:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /*********************************************************************************************
1167:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                                                                                           *
1168:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                             Socket Read Is Enabled.                                       *
1169:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                                                                                           *
1170:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    ********************************************************************************************/
1171:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 22


1172:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****  if(WiFi_Control_Variables.enable_sock_read)     /*read is enabled*/
1173:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
1174:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       uint32_t length_of_data_to_read = 0;
1175:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       uint32_t interim_length;
1176:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1177:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       while(WiFi_Counter_Variables.sock_total_count < WiFi_Counter_Variables.SockON_Data_Length)
1178:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1179:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           pStr = (char*) (dma_buffer_ptr + WiFi_Counter_Variables.dma_buffer_count);
1180:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           interim_length = WiFi_Counter_Variables.SockON_Data_Length - WiFi_Counter_Variables.sock_
1181:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           length_of_data_to_read = (interim_length > MAX_BUFFER_GLOBAL) \
1182:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                  ? MAX_BUFFER_GLOBAL \
1183:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                  : interim_length;
1184:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1185:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           interim_length = DMA_BUFFER_SIZE - WiFi_Counter_Variables.dma_buffer_count;
1186:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           length_of_data_to_read= interim_length >= length_of_data_to_read ? length_of_data_to_read
1187:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           length_of_data_to_read = length_of_data_to_read+WiFi_Counter_Variables.UserDataBuff_index
1188:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                        ? MAX_BUFFER_GLOBAL - WiFi_Counter_Variables.UserDataBuff_index             
1189:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                        : length_of_data_to_read;
1190:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1191:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* Less data in dma buffer, than expected */
1192:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #if defined (USE_STM32L4XX_NUCLEO) || defined (USE_STM32F1xx_NUCLEO) || defined (USE_STM3
1193:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           int ndtr_value = DMA_BUFFER_SIZE - (UartWiFiHandle.hdmarx->Instance->CNDTR);
1194:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #elif defined (USE_STM32F4XX_NUCLEO)
1195:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           int ndtr_value = DMA_BUFFER_SIZE - (UartWiFiHandle.hdmarx->Instance->NDTR);
1196:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           #endif
1197:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       
1198:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //int ndtr_value = DMA_BUFFER_SIZE - (UartWiFiHandle.hdmarx->Instance->CNDTR);
1199:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(ndtr_value >= WiFi_Counter_Variables.dma_buffer_count && ndtr_value <= WiFi_Counter_Va
1200:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               length_of_data_to_read = length_of_data_to_read > (ndtr_value - WiFi_Counter_Variable
1201:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                      ? (ndtr_value - WiFi_Counter_Variables.dma_buffer_count)      
1202:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                                      : length_of_data_to_read;
1203:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1204:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memcpy(UserDataBuff + WiFi_Counter_Variables.UserDataBuff_index, pStr,length_of_data_to_r
1205:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1206:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.sock_total_count += length_of_data_to_read;
1207:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.UserDataBuff_index += length_of_data_to_read;
1208:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_count+=length_of_data_to_read;
1209:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_
1210:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_coun
1211:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1212:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
1213:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
1214:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.dma_buffer_count = 0;
1215:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
1216:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
1217:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1218:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* Complete data REcv */
1219:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Counter_Variables.sock_total_count >= WiFi_Counter_Variables.SockON_Data_Length)
1220:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
1221:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(WiFi_Control_Variables.data_pending_sockD)
1222:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1223:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //do we have more data?
1224:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_server_query = WIFI_TRUE;
1225:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_query = WIFI_FALSE;
1226:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_websocket_query = WIFI_FALSE;
1227:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.sockon_id_user = WiFi_Counter_Variables.sockon_query_id;
1228:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.sockdon_id_user = WiFi_Counter_Variables.sockdon_query_id;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 23


1229:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1230:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else if(WiFi_Control_Variables.data_pending_sockW)
1231:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1232:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //do we have more data?
1233:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_query = WIFI_TRUE;
1234:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_server_query = WIFI_FALSE;
1235:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_websocket_query = WIFI_FALSE;
1236:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.sockdon_id_user = -1;
1237:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.sockon_id_user = WiFi_Counter_Variables.sockon_query_id;
1238:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1239:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else if(WiFi_Control_Variables.data_pending_websocket)
1240:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1241:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_websocket_query = WIFI_TRUE;
1242:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_server_query = WIFI_FALSE;
1243:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Control_Variables.enable_query = WIFI_FALSE;
1244:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.sockon_id_user = 0;
1245:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 WiFi_Counter_Variables.sockdon_id_user = -1;
1246:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1247:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             /*@TODO: Do not need to prevent OK push in case of server socket*/
1248:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             IO_status_flag.prevent_push_OK_event = WIFI_TRUE; //prevent the qeueuing of the OK afte
1249:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.enable_sock_read = WIFI_FALSE;
1250:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1251:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(WiFi_Control_Variables.data_pending_sockD || WiFi_Control_Variables.data_pending_soc
1252:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1253:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 /* Callback to uSer */
1254:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 ind_wifi_socket_data_received(WiFi_Counter_Variables.sockdon_id_user, WiFi_Counter_
1255:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1256:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             else if(WiFi_Control_Variables.data_pending_websocket)
1257:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               {
1258:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 //set this to callback to user with User Buffer pointer
1259:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 ind_wifi_socket_data_received(WiFi_Counter_Variables.sockdon_id_user, WiFi_Counter_
1260:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               }
1261:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.UserDataBuff_index =0;
1262:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(UserDataBuff ,0x00,MAX_BUFFER_GLOBAL);
1263:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             break;
1264:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
1265:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1266:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* UserDataBuff full */
1267:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           else if (WiFi_Counter_Variables.UserDataBuff_index == MAX_BUFFER_GLOBAL)
1268:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
1269:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Counter_Variables.sockon_id_user = WiFi_Counter_Variables.sockon_query_id;
1270:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               if(WiFi_Control_Variables.data_pending_sockD)
1271:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1272:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.sockdon_id_user = WiFi_Counter_Variables.sockdon_query_id;
1273:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   ind_wifi_socket_data_received(WiFi_Counter_Variables.sockdon_id_user, WiFi_Counte
1274:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 }
1275:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               else if(WiFi_Control_Variables.data_pending_sockW)
1276:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1277:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.sockdon_id_user = -1;
1278:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   ind_wifi_socket_data_received(WiFi_Counter_Variables.sockdon_id_user, WiFi_Counte
1279:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 }
1280:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               else if(WiFi_Control_Variables.data_pending_websocket)
1281:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1282:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.sockdon_id_user = -1;
1283:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   WiFi_Counter_Variables.sockon_id_user = 0;
1284:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                   ind_wifi_socket_data_received(WiFi_Counter_Variables.sockdon_id_user, WiFi_Counte
1285:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 }
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 24


1286:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.UserDataBuff_index = 0;
1287:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(UserDataBuff,0x00,MAX_BUFFER_GLOBAL);
1288:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
1289:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       } //end of while
1290:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   }
1291:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   
1292:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /********************************************************************************************
1293:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                                                                                           *
1294:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                             HTTP/ Response Is Enabled.                                    *
1295:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                                                                                           *
1296:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    ********************************************************************************************/
1297:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1298:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   else if (WiFi_Control_Variables.enable_receive_http_response) // http response enabled
1299:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
1300:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     int complete_message_length,length;
1301:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     while(!WiFi_Control_Variables.request_complete)
1302:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
1303:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       #if defined (USE_STM32L4XX_NUCLEO) || defined (USE_STM32F1xx_NUCLEO) || defined (USE_STM32L0X
1304:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       int ndtr_value = DMA_BUFFER_SIZE - (UartWiFiHandle.hdmarx->Instance->CNDTR);
1305:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       #elif defined (USE_STM32F4XX_NUCLEO)
1306:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       int ndtr_value = DMA_BUFFER_SIZE - (UartWiFiHandle.hdmarx->Instance->NDTR);
1307:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       #endif
1308:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       
1309:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       length = strlen((char const *)dma_buffer + WiFi_Counter_Variables.dma_buffer_count); // Find 
1310:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(length == (int)NULL && ndtr_value != WiFi_Counter_Variables.dma_buffer_count) // could be 
1311:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         length = 1;  //memcpy one NULL char at a time.
1312:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
1313:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1314:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         length = WiFi_Counter_Variables.dma_buffer_count + length > DMA_BUFFER_SIZE  \
1315:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               ? DMA_BUFFER_SIZE - WiFi_Counter_Variables.dma_buffer_count           \
1316:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               : length;
1317:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1318:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* If data available in dma_buffer > 512, then firstly use 512 bytes else use the length of
1319:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         length = length >= MAX_BUFFER_GLOBAL ? MAX_BUFFER_GLOBAL : length;
1320:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1321:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* If we have data in UserDataBuff, then reduce the length of length of data  */
1322:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         length = (length + WiFi_Counter_Variables.UserDataBuff_index)>MAX_BUFFER_GLOBAL ? MAX_BUFFE
1323:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1324:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       memcpy(UserDataBuff+WiFi_Counter_Variables.UserDataBuff_index,dma_buffer_ptr + WiFi_Counter_V
1325:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       WiFi_Counter_Variables.UserDataBuff_index += length;
1326:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1327:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* OK received */
1328:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if((pStr = ((char*)memmem(UserDataBuff,WiFi_Counter_Variables.UserDataBuff_index,"AT-S.OK\r\n
1329:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1330:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         printf("\r\n Complete Data received \r\n");
1331:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         complete_message_length = (uint8_t *)pStr - (uint8_t *)UserDataBuff;
1332:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memset(UserDataBuff + complete_message_length,0x00, WiFi_Counter_Variables.UserDataBuff_ind
1333:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_index = complete_message_length;
1334:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1335:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Counter_Variables.UserDataBuff_index < WiFi_Counter_Variables.UserDataBuff_previous
1336:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1337:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* Case when AT-S.OK is broken, so Ok will not be Q'ed. 
1338:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****              Make user wait variable TRUE from here only */
1339:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Adjust_DMA_Buffer_Index((WiFi_Counter_Variables.UserDataBuff_index+9)- WiFi_Counter_Varia
1340:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.broken_message = WIFI_TRUE;
1341:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1342:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 25


1343:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Adjust_DMA_Buffer_Index(complete_message_length - WiFi_Counter_Variables.UserDataBuff_pre
1344:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_Va
1345:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_count;
1346:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         complete_message_length = 0;
1347:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1348:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* While reading data EOB reached */
1349:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
1350:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1351:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_count = 0;
1352:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
1353:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1354:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1355:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Control_Variables.enable_receive_socket_list_response)
1356:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1357:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_socket_list_data_available((uint8_t *)UserDataBuff);
1358:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.enable_receive_socket_list_response = WIFI_FALSE;
1359:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1360:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else if(WiFi_Control_Variables.enable_receive_file_response)
1361:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1362:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_file_data_available((uint8_t *)UserDataBuff);
1363:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.enable_receive_file_response = WIFI_FALSE;
1364:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1365:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
1366:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_http_data_available((uint8_t *)UserDataBuff,WiFi_Counter_Variables.UserDataBuff_
1367:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_index = 0;
1368:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_previous_index =0;
1369:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.request_complete = WIFI_TRUE;
1370:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.enable_receive_http_response = WIFI_FALSE;
1371:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1372:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.enable_fw_update_read = WIFI_FALSE;
1373:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memset(UserDataBuff,0x00,MAX_BUFFER_GLOBAL);
1374:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1375:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Control_Variables.broken_message)
1376:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1377:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.broken_message = WIFI_FALSE;
1378:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           IO_status_flag.AT_Response_Received = WIFI_TRUE;
1379:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.AT_RESPONSE = WiFi_MODULE_SUCCESS;
1380:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1381:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;
1382:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1383:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1384:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* ERROR received */
1385:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else if((pStr = ((char*)memmem(UserDataBuff,WiFi_Counter_Variables.UserDataBuff_index,"AT-S.E
1386:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1387:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           int len = ((uint8_t *)pStr - (uint8_t *)UserDataBuff);
1388:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* \r\n after AT-S.ERROR: */
1389:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if((pStr = ((char*)strstr(UserDataBuff + len,"\r\n"))) != NULL)
1390:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
1391:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             #ifdef DEBUG_PRINT
1392:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               printf((const char *)UserDataBuff);
1393:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               printf("\r\n\r\n");
1394:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             #endif
1395:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             len = ((uint8_t *)pStr - (uint8_t *)UserDataBuff)+2;
1396:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             Adjust_DMA_Buffer_Index(len - WiFi_Counter_Variables.UserDataBuff_previous_index);
1397:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             IO_status_flag.AT_Response_Received = WIFI_TRUE;
1398:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.AT_RESPONSE = WiFi_AT_CMD_RESP_ERROR;
1399:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.enable_receive_http_response = WIFI_FALSE;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 26


1400:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.request_complete = WIFI_TRUE;
1401:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1402:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counte
1403:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_co
1404:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1405:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             /* While reading data EOB reached */
1406:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
1407:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             {
1408:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Counter_Variables.dma_buffer_count = 0;
1409:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****               WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
1410:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             }
1411:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             memset(UserDataBuff,0x00,MAX_BUFFER_GLOBAL);
1412:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.UserDataBuff_index = 0;
1413:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.UserDataBuff_previous_index=0;
1414:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;
1415:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
1416:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
1417:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1418:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Adjust_DMA_Buffer_Index(length);
1419:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_
1420:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_coun
1421:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.UserDataBuff_previous_index = WiFi_Counter_Variables.UserDataBuff_
1422:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1423:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* While reading data EOB reached */
1424:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
1425:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           {
1426:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.dma_buffer_count = 0;
1427:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
1428:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           }
1429:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1430:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1431:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1432:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* 512 bytes */
1433:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else if(WiFi_Counter_Variables.UserDataBuff_index == MAX_BUFFER_GLOBAL)
1434:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1435:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* increase dma_buffer_count by 504 bytes only, if UserDataBuff_previous_index is 0 */
1436:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(MAX_BUFFER_GLOBAL-8 >= WiFi_Counter_Variables.UserDataBuff_previous_index)
1437:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1438:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           //in case AT-S.OK\r\n is splitted, so leave last 8 bytes
1439:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(UserDataBuff + MAX_BUFFER_GLOBAL-8, 0x00, 8);  //memset last 8 bytes
1440:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           Adjust_DMA_Buffer_Index((MAX_BUFFER_GLOBAL-8) - WiFi_Counter_Variables.UserDataBuff_previ
1441:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1442:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else  /* More bytes read than required */
1443:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1444:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            memcpy(HTTP_Runway_Buff,UserDataBuff+504,8);
1445:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            Adjust_DMA_Buffer_Index(length);
1446:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            memset(UserDataBuff + MAX_BUFFER_GLOBAL-8, 0x00, 8);  //memset last 8 bytes
1447:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            WiFi_Control_Variables.runway_buffer_contains_data = WIFI_TRUE;
1448:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1449:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1450:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_Va
1451:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_count;
1452:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_index = MAX_BUFFER_GLOBAL-8;
1453:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1454:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* While reading data EOB reached */
1455:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
1456:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 27


1457:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_count = 0;
1458:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
1459:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1460:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1461:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* Callback to user */
1462:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Control_Variables.enable_receive_socket_list_response)
1463:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_socket_list_data_available((uint8_t *)UserDataBuff);
1464:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else if(WiFi_Control_Variables.enable_receive_file_response)
1465:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_file_data_available((uint8_t *)UserDataBuff);
1466:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else
1467:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         ind_wifi_http_data_available((uint8_t *)UserDataBuff,WiFi_Counter_Variables.UserDataBuff_in
1468:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1469:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_index = 0;
1470:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_previous_index=0;
1471:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memset(UserDataBuff,0x00,MAX_BUFFER_GLOBAL);
1472:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1473:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Control_Variables.runway_buffer_contains_data)
1474:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1475:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memcpy(UserDataBuff,HTTP_Runway_Buff,8);
1476:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.UserDataBuff_index = 8;
1477:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.UserDataBuff_previous_index = 8;
1478:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(HTTP_Runway_Buff,0x00, sizeof(HTTP_Runway_Buff));
1479:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.runway_buffer_contains_data = WIFI_FALSE;
1480:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1481:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1482:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1483:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* Intermediate data */
1484:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
1485:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1486:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         Adjust_DMA_Buffer_Index(length);
1487:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_previous_index = WiFi_Counter_Variables.UserDataBuff_in
1488:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memset(dma_buffer_ptr+WiFi_Counter_Variables.dma_buffer_previous_index,0x00,WiFi_Counter_Va
1489:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_count;
1490:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1491:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* While reading data EOB reached */
1492:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Counter_Variables.dma_buffer_count == DMA_BUFFER_SIZE)
1493:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1494:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_count = 0;
1495:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_previous_index  = 0;
1496:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1497:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1498:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } //end of while
1499:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Control_Variables.request_complete = WIFI_FALSE;
1500:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   } //end of enable_receive_http_response
1501:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1502:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /*********************************************************************************************
1503:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                                                                                           *
1504:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                             WiFi Scan Is Enabled.                                         *
1505:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    *                                                                                           *
1506:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    ********************************************************************************************/
1507:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     
1508:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****    else if(WiFi_Control_Variables.enable_receive_wifi_scan_response)
1509:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
1510:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       char bss[100];
1511:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1512:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if((char*)strstr((const char *)ptr,"OK\r") != NULL)
1513:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 28


1514:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.enable_receive_wifi_scan_response = WIFI_FALSE;
1515:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.Scan_Ongoing = WIFI_FALSE; //Enable next scan
1516:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.scanned_ssids=0;
1517:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(bss,0x00,sizeof(bss));
1518:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1519:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           /* Process and Queue the OK event. */
1520:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           wifi_instances.wifi_event.event = WIFI_OK_EVENT;
1521:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           __disable_irq();
1522:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
1523:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****            __enable_irq();
1524:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           reset_event(&wifi_instances.wifi_event);
1525:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1526:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else
1527:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1528:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Counter_Variables.scanned_ssids < WiFi_Counter_Variables.user_scan_number)
1529:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1530:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             uint8_t scanned_ssids = WiFi_Counter_Variables.scanned_ssids;
1531:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             sscanf((const char*)ptr,wifi_scan_string,&scanned_ssids,bss,&wifi_scanned_list[scanned_
1532:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                          &wifi_scanned_list[scanned_ssids].rssi,wifi_scanned_list[scanned_ssids].ss
1533:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1534:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             pStr = (char *) strstr((const char *)&process_buffer,"WPA ");
1535:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(pStr != NULL)
1536:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1537:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     wifi_scanned_list[WiFi_Counter_Variables.scanned_ssids].sec_type.wpa = WIFI_TRU
1538:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 } else
1539:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     wifi_scanned_list[WiFi_Counter_Variables.scanned_ssids].sec_type.wpa = WIFI_FAL
1540:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1541:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             pStr = (char *) strstr((const char *)&process_buffer,"WPA2 ");
1542:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(pStr != NULL)
1543:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1544:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     wifi_scanned_list[WiFi_Counter_Variables.scanned_ssids].sec_type.wpa2 = WIFI_TR
1545:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 } else
1546:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     wifi_scanned_list[WiFi_Counter_Variables.scanned_ssids].sec_type.wpa2 = WIFI_FA
1547:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1548:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             pStr = (char *) strstr((const char *)&process_buffer,"WPS ");
1549:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             if(pStr != NULL)
1550:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 {
1551:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     wifi_scanned_list[WiFi_Counter_Variables.scanned_ssids].sec_type.wps = WIFI_TRU
1552:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                 } else
1553:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****                     wifi_scanned_list[WiFi_Counter_Variables.scanned_ssids].sec_type.wps = WIFI_FAL
1554:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****             WiFi_Counter_Variables.scanned_ssids = scanned_ssids;
1555:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1556:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1557:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       Fillptr = 0;
1558:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       memset(process_buffer, 0x00, MAX_BUFFER_GLOBAL);
1559:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     } //end of scan
1560:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   
1561:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   /*********************************************************************************************
1562:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   *                                                                                           *
1563:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   *                          MQTT Data Callback Is Enabled.                                   *
1564:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   *                                                                                           *
1565:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   ********************************************************************************************/
1566:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   else if(WiFi_Control_Variables.mqtt_data_available)
1567:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     {
1568:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       char *mqtt_string = "MQTT Published:%u:%[^:]:%*u:%*u:%*u:%u:%u:%n";
1569:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       int length_of_data_to_read =0;
1570:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       int data_read = 0;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 29


1571:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       int length = 0;
1572:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       sscanf(str,mqtt_string,&client_id,topic,&message_size,&total_message_size,&length);
1573:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1574:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       while(data_read < message_size)
1575:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1576:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         length_of_data_to_read = ((message_size - data_read) > MAX_BUFFER_GLOBAL) ? MAX_BUFFER_GLOB
1577:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         pStr = (char *)(str + length);
1578:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         memcpy(UserDataBuff, pStr,length_of_data_to_read);
1579:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Counter_Variables.UserDataBuff_index = length_of_data_to_read;
1580:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         data_read+= length_of_data_to_read;
1581:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1582:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(data_read >= message_size)
1583:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1584:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_mqtt_data_received(client_id,topic,length_of_data_to_read,message_size,total_mes
1585:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.mqtt_data_available = WIFI_FALSE;
1586:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.UserDataBuff_index = 0;
1587:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(UserDataBuff,0x00,MAX_BUFFER_GLOBAL);
1588:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(dma_buffer_ptr + WiFi_Counter_Variables.dma_buffer_previous_index,0x00, WiFi_Count
1589:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.dma_buffer_previous_index = WiFi_Counter_Variables.dma_buffer_coun
1590:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           break;
1591:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1592:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         else if(data_read == MAX_BUFFER_GLOBAL)
1593:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         {
1594:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           ind_wifi_mqtt_data_received(client_id,topic,MAX_BUFFER_GLOBAL,message_size,total_message_
1595:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.UserDataBuff_index = 0;
1596:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           memset(UserDataBuff,0x00,MAX_BUFFER_GLOBAL);
1597:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         }
1598:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1599:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       memset(str,0x00,sizeof(str));
1600:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   } //  else if(WiFi_Control_Variables.mqtt_data_available)
1601:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** } 
1602:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1603:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1604:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
1605:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  Process_Wind_Indication_Cmd
1606:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Process Wind indication before queueing
1607:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  process_buff_ptr: pointer of WiFi indication buffer
1608:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
1609:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
1610:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1611:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Process_Wind_Indication(int wind_no,uint8_t *ptr)
1612:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
1613:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char * ptr_offset;
1614:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char databytes_No[4]; 
1615:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   int i;
1616:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   char *token;
1617:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1618:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   WiFi_Indication_t Wind_No = Undefine_Indication;
1619:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1620:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   Wind_No = (WiFi_Indication_t)wind_no;
1621:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1622:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   wifi_instances.wifi_event.wind = Wind_No;
1623:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   wifi_instances.wifi_event.event = WIFI_WIND_EVENT;
1624:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   switch (Wind_No)
1625:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   {
1626:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case SockON_Data_Pending: /*WIND:55*/
1627:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /*+WIND:55:Pending Data:<ServerID>:<ClientID>:<received_bytes>:<cumulated_bytes>*/   
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 30


1628:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       ptr_offset = (char *) strstr((const char *)ptr,"Data:");//ServerID is empty
1629:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       if(*(ptr_offset + 5) == ':')//means it is a client socket WIND:55
1630:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1631:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /*Need to find out which socket ID has data pending*/
1632:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         databytes_No[0] = *(ptr_offset + 6);
1633:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = (databytes_No[0] - '0'); //Max number of sockets is 8
1634:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.server_id = 9;
1635:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1636:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       else //it is a server socket ID
1637:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       {
1638:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /*Need to find out which server socket ID has data pending*/
1639:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         databytes_No[0] = *(ptr_offset + 5);
1640:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         databytes_No[1] = *(ptr_offset + 7);
1641:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.server_id = (databytes_No[0] - '0'); //Max number of sockets is 8
1642:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = (databytes_No[1] - '0');
1643:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       }
1644:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       break;
1645:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1646:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case SockON_Server_Socket_Closed:
1647:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       /* +WIND:58:Socket Closed:Client_id:Closure Reason */
1648:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       ptr_offset = (char *) strstr((const char *)ptr,"Closed:");//ServerID is empty
1649:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       //Find the id of the socket closed
1650:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       databytes_No[0] = *(ptr_offset + 7) ;
1651:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       wifi_instances.wifi_event.socket_id = databytes_No[0] - '0'; //Max number of sockets is 8 (so
1652:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       break;
1653:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1654:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi__MiniAP_Associated:
1655:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         //Find out which client joined by parsing the WIND //+WIND:28
1656:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         for(i=19;i<=35;i++)
1657:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.client_MAC_address[i-19] = *(ptr + i) ;    
1658:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         IO_status_flag.WiFi_WIND_State = WiFiAPClientJoined;
1659:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1660:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1661:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_MiniAP_Disassociated:
1662:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         //Find out which client left by parsing the WIND //+WIND:72
1663:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         for(i=22;i<=39;i++)
1664:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Counter_Variables.client_MAC_address[i-17] = *(ptr + i) ;
1665:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         IO_status_flag.WiFi_WIND_State = WiFiAPClientLeft;
1666:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1667:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1668:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Incoming_socket_client:
1669:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         //Incoming Socket Client:<Client IP-Address>:<Client Port>:<Server ID>:<Client ID> 
1670:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         token = strrchr((char *)ptr, ':');
1671:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = *(token+1)-'0' ;
1672:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         *token='\0';
1673:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         token=strrchr((char *)ptr, ':');
1674:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.server_id = *(token+1)-'0' ;                    
1675:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         //@TBD: Map IP Address to client number
1676:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1677:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1678:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Outgoing_socket_client:
1679:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         // Socket Client Gone:client IP:Client Port:server ID:client ID:closure reason
1680:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         token = strrchr((char *)ptr, ':');
1681:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         *token='\0';
1682:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         token=strrchr((char *)ptr, ':');
1683:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = *(token+1)-'0' ;
1684:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         *token='\0';
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 31


1685:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         token=strrchr((char *)ptr, ':');
1686:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.server_id = *(token+1)-'0' ;                    
1687:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1688:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1689:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Websocket_Data:
1690:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /*A websocket pending event has arrived*/
1691:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /*+WIND:88:WebSocket Data:<ClientID>:<last_frame_flag?>:<last_frag_flag?>:<rcv_bytes>:<cumu
1692:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         //printf("^^\r\n");
1693:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         ptr_offset = (char *) strstr((const char *)ptr,"Data:");
1694:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         databytes_No[0] = *(ptr_offset + 5);
1695:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = (databytes_No[0] - '0');//This is the websocket clien
1696:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1697:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1698:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Websocket_Closed:
1699:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /*+WIND:89:WebSocket Closed:<ClientID>*/
1700:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         //Find the id of the socket closed
1701:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         ptr_offset = (char *) strstr((const char *)ptr,"Closed:");
1702:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         databytes_No[0] = *(ptr_offset + 7);
1703:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = databytes_No[0] - '0'; //Max number of web-sockets is
1704:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1705:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1706:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case MQTT_Closed:
1707:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /*+WIND:87:MQTT Closed:<Client ID> */
1708:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         ptr_offset = (char *) strstr((const char *)ptr,"Closed:");
1709:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         databytes_No[0] = *(ptr_offset + 7);
1710:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.socket_id = (databytes_No[0] - '0');//This is the MQTT client ID
1711:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1712:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1713:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Remote_Configuration:
1714:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_connected = 0;
1715:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.queue_wifi_wind_message = WIFI_FALSE;
1716:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.prevent_push_WIFI_event = WIFI_TRUE;
1717:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1718:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1719:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Going_Into_Standby:
1720:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.event = WIFI_STANDBY_CONFIG_EVENT;
1721:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.in_standby_mode = WIFI_TRUE;
1722:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1723:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1724:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Resuming_From_Standby:
1725:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         wifi_instances.wifi_event.event = WIFI_RESUME_CONFIG_EVENT;
1726:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.in_standby_mode = WIFI_FALSE;
1727:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1728:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1729:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Input_To_Remote:
1730:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* Disable TIMx   */
1731:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         HAL_NVIC_DisableIRQ(TIMx_IRQn);
1732:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         ind_wifi_inputssi_callback();
1733:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.queue_wifi_wind_message = WIFI_FALSE;
1734:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.prevent_push_WIFI_event = WIFI_TRUE;
1735:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1736:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         
1737:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Output_From_Remote: ;
1738:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         /* length of text to be received is 40 or lesss*/
1739:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         int bytes_read;
1740:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         sscanf((const char*)ptr,"Output from remote:%*d:%n",&bytes_read);
1741:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         ind_wifi_output_from_remote_callback((uint8_t *)ptr+bytes_read);
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 32


1742:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1743:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1744:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     // Queueing of these events not required.
1745:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case MQTT_Published:
1746:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****        WiFi_Control_Variables.mqtt_data_available = WIFI_TRUE;
1747:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Console_Active:
1748:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Reset:
1749:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Watchdog_Running:
1750:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Watchdog_Terminating:
1751:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Configuration_Failure:
1752:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case CopyrightInfo:
1753:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_BSS_Regained:
1754:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Signal_OK:
1755:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case FW_update:
1756:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Encryption_key_Not_Recognized:
1757:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Join:
1758:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Scanning:
1759:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Association_Successful:
1760:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_BSS_LOST:
1761:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_NETWORK_LOST:
1762:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Unhandled_Event:
1763:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_UNHANDLED:
1764:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_MiniAP_Mode :
1765:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case DOT11_AUTHILLEGAL:
1766:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Creating_PSK:
1767:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WPA_Terminated :
1768:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WPA_Supplicant_Failed:
1769:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WPA_Handshake_Complete:
1770:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case GPIO_line:
1771:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Wakeup:
1772:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Factory_debug:
1773:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Low_Power_Mode_Enabled:
1774:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Rejected_Found_Network:
1775:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case TFTP_File_Received:
1776:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.queue_wifi_wind_message = WIFI_FALSE;
1777:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         WiFi_Control_Variables.prevent_push_WIFI_event = WIFI_TRUE;
1778:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1779:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1780:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****       //Queue these Events.
1781:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Poweron:
1782:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case MallocFailed:                                          
1783:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         if(WiFi_Control_Variables.stop_event_dequeue)
1784:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****           WiFi_Control_Variables.stop_event_dequeue = WIFI_FALSE;
1785:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****         break;
1786:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Heap_Too_Small:            
1787:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Hardware_Dead:
1788:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Hard_Fault:
1789:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case StackOverflow:                   
1790:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Error:
1791:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_PS_Mode_Failure:
1792:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Signal_LOW:
1793:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case JOINFAILED:
1794:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case SCANBLEWUP:
1795:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case SCANFAILED:
1796:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Started_MiniAP_Mode:
1797:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Start_Failed :
1798:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_EXCEPTION :
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 33


1799:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Hardware_Started :
1800:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case Scan_Complete:
1801:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_UNHANDLED_IND:
1802:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Powered_Down:
1803:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Deauthentication:
1804:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case WiFi_Disassociation:
1805:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case RX_MGMT:
1806:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case RX_DATA:
1807:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case RX_UNK:
1808:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     case NTP_Server_Delivery:
1809:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****          break;
1810:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     default:
1811:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****          break;
1812:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****   } //end of switch
1813:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** } //end of Process_Wind_Indication
1814:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** #endif
1815:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1816:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** /**
1817:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @brief  Queue_Server_Write_Event
1818:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** *         Queues a Server Socket write event.
1819:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  sock_id socket ID to write to
1820:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  DataLength length of the data to be written
1821:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @param  pData pointer to data
1822:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** * @retval None
1823:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** */
1824:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** void Queue_Server_Write_Event(uint8_t server_id, uint8_t client_id, uint32_t DataLength, char * pDa
1825:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** {
  28              		.loc 1 1825 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  43 0004 0D46     		mov	r5, r1
  44 0006 1746     		mov	r7, r2
  45 0008 1E46     		mov	r6, r3
1826:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     Wait_For_Sock_Read_To_Complete();
  46              		.loc 1 1826 0
  47 000a FFF7FEFF 		bl	Wait_For_Sock_Read_To_Complete
  48              	.LVL1:
1827:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.curr_DataLength = DataLength;
  49              		.loc 1 1827 0
  50 000e 0E4A     		ldr	r2, .L3
  51 0010 A2F88C70 		strh	r7, [r2, #140]	@ movhi
1828:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.curr_data = pData;
  52              		.loc 1 1828 0
  53 0014 C2F88860 		str	r6, [r2, #136]
1829:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.curr_sockID = client_id;
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 34


  54              		.loc 1 1829 0
  55 0018 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
  56 001a 65F30203 		bfi	r3, r5, #0, #3
1830:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     WiFi_Counter_Variables.curr_serverID = server_id;
  57              		.loc 1 1830 0
  58 001e 64F3C503 		bfi	r3, r4, #3, #3
  59 0022 9370     		strb	r3, [r2, #2]
1831:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1832:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     wifi_instances.wifi_event.event = WIFI_SERVER_SOCKET_WRITE_EVENT;
  60              		.loc 1 1832 0
  61 0024 0948     		ldr	r0, .L3+4
  62 0026 1B23     		movs	r3, #27
  63 0028 80F82630 		strb	r3, [r0, #38]
  64              	.LBB6:
  65              	.LBB7:
  66              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 35


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 36


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  67              		.loc 2 142 0
  68              		.syntax unified
  69              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  70 002c 72B6     		cpsid i
  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74              	.LBE7:
  75              	.LBE6:
1833:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     __disable_irq();
1834:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     push_eventbuffer_queue(&wifi_instances.event_buff, wifi_instances.wifi_event);
  76              		.loc 1 1834 0
  77 002e 00F12004 		add	r4, r0, #32
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 37


  78 0032 94E80600 		ldm	r4, {r1, r2}
  79 0036 1430     		adds	r0, r0, #20
  80 0038 FFF7FEFF 		bl	push_eventbuffer_queue
  81              	.LVL2:
  82              	.LBB8:
  83              	.LBB9:
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  84              		.loc 2 131 0
  85              		.syntax unified
  86              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  87 003c 62B6     		cpsie i
  88              	@ 0 "" 2
  89              		.thumb
  90              		.syntax unified
  91              	.LBE9:
  92              	.LBE8:
1835:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     __enable_irq();
1836:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c **** 
1837:Middlewares/ST/STM32_SPWF0xSy/wifi_module_uart_04.c ****     reset_event(&wifi_instances.wifi_event);
  93              		.loc 1 1837 0
  94 003e 2046     		mov	r0, r4
  95 0040 FFF7FEFF 		bl	reset_event
  96              	.LVL3:
  97 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  98              	.LVL4:
  99              	.L4:
 100 0046 00BF     		.align	2
 101              	.L3:
 102 0048 00000000 		.word	WiFi_Counter_Variables
 103 004c 00000000 		.word	wifi_instances
 104              		.cfi_endproc
 105              	.LFE275:
 107              		.global	total_message_size
 108              		.global	message_size
 109              		.global	remaining_unused_datalength
 110              		.comm	message_pending_buffer_index,4,4
 111              		.global	message_pending
 112              		.global	last_dma_buffer_count
 113              		.global	last_message_size
 114              		.global	client_id
 115              		.global	bytes_read
 116              		.comm	message_pending_buffer,900,4
 117              		.comm	topic,100,4
 118              		.comm	str,900,4
 119              		.comm	parsing_networks,4,4
 120              		.section	.bss.bytes_read,"aw",%nobits
 121              		.align	2
 124              	bytes_read:
 125 0000 00000000 		.space	4
 126              		.section	.bss.last_dma_buffer_count,"aw",%nobits
 127              		.align	2
 130              	last_dma_buffer_count:
 131 0000 00000000 		.space	4
 132              		.section	.bss.last_message_size,"aw",%nobits
 133              		.align	2
 136              	last_message_size:
 137 0000 00000000 		.space	4
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 38


 138              		.section	.bss.message_pending,"aw",%nobits
 141              	message_pending:
 142 0000 00       		.space	1
 143              		.section	.bss.remaining_unused_datalength,"aw",%nobits
 144              		.align	2
 147              	remaining_unused_datalength:
 148 0000 00000000 		.space	4
 149              		.section	.data.client_id,"aw",%progbits
 152              	client_id:
 153 0000 FF       		.byte	-1
 154              		.section	.data.message_size,"aw",%progbits
 155              		.align	2
 158              	message_size:
 159 0000 FFFFFFFF 		.word	-1
 160              		.section	.data.total_message_size,"aw",%progbits
 161              		.align	2
 164              	total_message_size:
 165 0000 FFFFFFFF 		.word	-1
 166              		.text
 167              	.Letext0:
 168              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 169              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 170              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 171              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 172              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 173              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 174              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 175              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 176              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 177              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 178              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 179              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 180              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 181              		.file 16 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_interface.h"
 182              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 183              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 184              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 185              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 186              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 187              		.file 22 "Middlewares/ST/STM32_SPWF0xSy/Utils/event_buffer.h"
 188              		.file 23 "Middlewares/ST/STM32_SPWF0xSy/Utils/ring_buffer.h"
 189              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 190              		.file 25 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_module.h"
 191              		.file 26 "Middlewares/ST/STM32_SPWF0xSy/Utils/wifi_globals.h"
 192              		.file 27 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
ARM GAS  D:\cygwin64\tmp\cclV6JzD.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 wifi_module_uart_04.c
D:\cygwin64\tmp\cclV6JzD.s:18     .text.Queue_Server_Write_Event:00000000 $t
D:\cygwin64\tmp\cclV6JzD.s:25     .text.Queue_Server_Write_Event:00000000 Queue_Server_Write_Event
D:\cygwin64\tmp\cclV6JzD.s:102    .text.Queue_Server_Write_Event:00000048 $d
D:\cygwin64\tmp\cclV6JzD.s:164    .data.total_message_size:00000000 total_message_size
D:\cygwin64\tmp\cclV6JzD.s:158    .data.message_size:00000000 message_size
D:\cygwin64\tmp\cclV6JzD.s:147    .bss.remaining_unused_datalength:00000000 remaining_unused_datalength
                            *COM*:00000004 message_pending_buffer_index
D:\cygwin64\tmp\cclV6JzD.s:141    .bss.message_pending:00000000 message_pending
D:\cygwin64\tmp\cclV6JzD.s:130    .bss.last_dma_buffer_count:00000000 last_dma_buffer_count
D:\cygwin64\tmp\cclV6JzD.s:136    .bss.last_message_size:00000000 last_message_size
D:\cygwin64\tmp\cclV6JzD.s:152    .data.client_id:00000000 client_id
D:\cygwin64\tmp\cclV6JzD.s:124    .bss.bytes_read:00000000 bytes_read
                            *COM*:00000384 message_pending_buffer
                            *COM*:00000064 topic
                            *COM*:00000384 str
                            *COM*:00000004 parsing_networks
D:\cygwin64\tmp\cclV6JzD.s:121    .bss.bytes_read:00000000 $d
D:\cygwin64\tmp\cclV6JzD.s:127    .bss.last_dma_buffer_count:00000000 $d
D:\cygwin64\tmp\cclV6JzD.s:133    .bss.last_message_size:00000000 $d
D:\cygwin64\tmp\cclV6JzD.s:142    .bss.message_pending:00000000 $d
D:\cygwin64\tmp\cclV6JzD.s:144    .bss.remaining_unused_datalength:00000000 $d
D:\cygwin64\tmp\cclV6JzD.s:155    .data.message_size:00000000 $d
D:\cygwin64\tmp\cclV6JzD.s:161    .data.total_message_size:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Wait_For_Sock_Read_To_Complete
push_eventbuffer_queue
reset_event
WiFi_Counter_Variables
wifi_instances
