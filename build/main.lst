ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB278:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "main.h"
  26:Core/Src/main.c **** #include "stdio.h"
  27:Core/Src/main.c **** #include "string.h"
  28:Core/Src/main.c **** #include "wifi_module.h"
  29:Core/Src/main.c **** #include "wifi_globals.h"
  30:Core/Src/main.c **** #include "wifi_interface.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** #define MAX_MSG_SIZE 100
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** UART_HandleTypeDef huart2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** WiFi_Status_t wifi_get_AP_settings(void);
  61:Core/Src/main.c **** uint8_t user_buffer[1024];
  62:Core/Src/main.c **** __IO char http_char;
  63:Core/Src/main.c **** wifi_bool http_post_request = WIFI_FALSE;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** uint8_t console_input[1], console_count=0;
  66:Core/Src/main.c **** char console_ssid[40];
  67:Core/Src/main.c **** char console_psk[20];
  68:Core/Src/main.c **** char console_host[20];
  69:Core/Src/main.c **** wifi_bool set_AP_config = WIFI_FALSE;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private functions ---------------------------------------------------------*/
  72:Core/Src/main.c **** void  SystemClock_Config(void);
  73:Core/Src/main.c **** void  UART_Msg_Gpio_Init(void);
  74:Core/Src/main.c **** void  USART_PRINT_MSG_Configuration(UART_HandleTypeDef *UART_MsgHandle, uint32_t baud_rate);
  75:Core/Src/main.c **** WiFi_Status_t wifi_get_AP_settings(void);
  76:Core/Src/main.c **** void print(char msg[]);
  77:Core/Src/main.c **** /* Private Declarartion ------------------------------------------------------*/
  78:Core/Src/main.c **** __IO wifi_state_t wifi_state;
  79:Core/Src/main.c **** wifi_config config;
  80:Core/Src/main.c **** UART_HandleTypeDef UART_MsgHandle;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** char * ssid = "STM";
  83:Core/Src/main.c **** char * seckey = "STMdemoPWD";
  84:Core/Src/main.c **** WiFi_Priv_Mode mode = WPA_Personal;
  85:Core/Src/main.c **** char * hostname = "httpbin.org";
  86:Core/Src/main.c **** char * post_hostname = "posttestserver.com";
  87:Core/Src/main.c **** char * gcfg_key1 = "ip_ipaddr";
  88:Core/Src/main.c **** char * gcfg_key2 = "nv_model";
  89:Core/Src/main.c **** 
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 3


  90:Core/Src/main.c **** char wifi_ip_addr[20];
  91:Core/Src/main.c **** uint32_t baud_rate = 115200;
  92:Core/Src/main.c **** /* USER CODE END PFP */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  95:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /**
 100:Core/Src/main.c ****   * @brief  The application entry point.
 101:Core/Src/main.c ****   * @retval int
 102:Core/Src/main.c ****   */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****  /**
 105:Core/Src/main.c ****   * @brief  Main program
 106:Core/Src/main.c ****   * @param  None
 107:Core/Src/main.c ****   * @retval None
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** int main(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   char * path = "/get";
 114:Core/Src/main.c ****   uint32_t  port_num = 80;
 115:Core/Src/main.c ****   char * post_path = "/post.php/name=demo&email=mymail&subject=subj&body=message";
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   HAL_Init();
 118:Core/Src/main.c ****   SystemClock_Config();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   MX_GPIO_Init();
 122:Core/Src/main.c ****   MX_USART2_UART_Init();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /*while (1)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     print("Hello world\r\n..");
 127:Core/Src/main.c ****   }*/
 128:Core/Src/main.c ****   /* USER CODE END 3 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   status = wifi_get_AP_settings();
 131:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     print("\r\nError in AP Settings");
 134:Core/Src/main.c ****     return 0;
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   
 137:Core/Src/main.c ****   UART_Configuration(baud_rate); 
 138:Core/Src/main.c ****   
 139:Core/Src/main.c ****   config.power=wifi_active;
 140:Core/Src/main.c ****   config.power_level=high;
 141:Core/Src/main.c ****   config.dhcp=on;//use DHCP IP address   
 142:Core/Src/main.c ****   config.mcu_baud_rate = baud_rate;
 143:Core/Src/main.c ****   wifi_state = wifi_state_idle;
 144:Core/Src/main.c ****   
 145:Core/Src/main.c ****   print("\r\n\nInitializing the wifi module...");
 146:Core/Src/main.c ****   
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 4


 147:Core/Src/main.c ****   /* Init the wi-fi module */  
 148:Core/Src/main.c ****   status = wifi_init(&config);
 149:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     print("Error in Config");
 152:Core/Src/main.c ****     return 0;
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   while (1)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     switch (wifi_state) 
 158:Core/Src/main.c ****     {
 159:Core/Src/main.c ****     case wifi_state_reset:
 160:Core/Src/main.c ****         break;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****     case wifi_state_ready:
 163:Core/Src/main.c ****         print("\r\n >>connecting to AP...\r\n");
 164:Core/Src/main.c ****         wifi_connect(console_ssid, console_psk, mode);
 165:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 166:Core/Src/main.c ****         break;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     case wifi_state_connected:
 169:Core/Src/main.c ****         print("\r\n >>connected...\r\n");
 170:Core/Src/main.c ****         wifi_state = wifi_state_activity;
 171:Core/Src/main.c ****         break;
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     case wifi_state_disconnected:
 174:Core/Src/main.c ****         wifi_state = wifi_state_reset;
 175:Core/Src/main.c ****         break;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     case wifi_state_activity:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****         status = wifi_get_IP_address((uint8_t*)wifi_ip_addr);
 180:Core/Src/main.c ****         //print("\r\n>>IP address is %s\r\n", wifi_ip_addr);
 181:Core/Src/main.c ****         
 182:Core/Src/main.c ****         memset(wifi_ip_addr, 0x00, 20);
 183:Core/Src/main.c ****         
 184:Core/Src/main.c ****         status = GET_Configuration_Value(gcfg_key2,(uint32_t *)wifi_ip_addr);
 185:Core/Src/main.c ****         //print("\r\n>>model no is %s\r\n", wifi_ip_addr);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****         if(http_post_request)
 188:Core/Src/main.c ****             wifi_state = wifi_state_inter;//do a HTTP-POST
 189:Core/Src/main.c ****         else
 190:Core/Src/main.c ****         {
 191:Core/Src/main.c ****           print("\r\n>>WiFi_HTTPGET\r\n");
 192:Core/Src/main.c ****         
 193:Core/Src/main.c ****           status = wifi_http_get((uint8_t *)console_host, (uint8_t *)path, port_num);
 194:Core/Src/main.c ****       
 195:Core/Src/main.c ****           if(status == WiFi_MODULE_SUCCESS)
 196:Core/Src/main.c ****           {
 197:Core/Src/main.c ****              print("\r\nHTTP GET OK\r\n");
 198:Core/Src/main.c ****           }
 199:Core/Src/main.c ****           else
 200:Core/Src/main.c ****           {
 201:Core/Src/main.c ****               print("\r\nHTTP GET Error\r\n");
 202:Core/Src/main.c ****           }
 203:Core/Src/main.c ****           wifi_state = wifi_state_idle;
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 5


 204:Core/Src/main.c ****         }
 205:Core/Src/main.c ****         
 206:Core/Src/main.c ****         break;
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****     case wifi_state_inter:        
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****         print("\r\n>>Posting data to posttestserver.com..\r\n");  
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****         status = wifi_http_post((uint8_t *)post_hostname, (uint8_t *)post_path, port_num); 
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****         if(status == WiFi_MODULE_SUCCESS)    
 215:Core/Src/main.c ****         {
 216:Core/Src/main.c ****           print("\r\nHTTP POST OK\r\n");
 217:Core/Src/main.c ****         }
 218:Core/Src/main.c ****         else
 219:Core/Src/main.c ****         {
 220:Core/Src/main.c ****           print("\r\nHTTP POST Error\r\n");
 221:Core/Src/main.c ****         }        
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 224:Core/Src/main.c ****         break;
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****     case wifi_state_print_data:
 227:Core/Src/main.c ****         print((char*)user_buffer);
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****         break;
 232:Core/Src/main.c ****     case wifi_state_idle:        
 233:Core/Src/main.c ****         print("."); 
 234:Core/Src/main.c ****         fflush(stdout);
 235:Core/Src/main.c ****         HAL_Delay(500);
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****         break;
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****     default:
 240:Core/Src/main.c ****         break;
 241:Core/Src/main.c ****     }
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c **** }
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /**
 246:Core/Src/main.c ****   * @brief System Clock Configuration
 247:Core/Src/main.c ****   * @retval None
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c **** void SystemClock_Config(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 252:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 257:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 258:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 259:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 260:Core/Src/main.c ****   */
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 6


 261:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 262:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 264:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 265:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****     Error_Handler();
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 272:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 273:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 274:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c **** }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief USART2 Initialization Function
 286:Core/Src/main.c ****   * @param None
 287:Core/Src/main.c ****   * @retval None
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 290:Core/Src/main.c **** {
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 299:Core/Src/main.c ****   huart2.Instance = USART2;
 300:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 301:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 302:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 303:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 304:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 305:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 306:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 307:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /**
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 7


 318:Core/Src/main.c ****   * @brief GPIO Initialization Function
 319:Core/Src/main.c ****   * @param None
 320:Core/Src/main.c ****   * @retval None
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c **** static void MX_GPIO_Init(void)
 323:Core/Src/main.c **** {
  27              		.loc 1 323 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              	.LBB2:
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 326:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  36              		.loc 1 326 0
  37 0002 0023     		movs	r3, #0
  38 0004 0193     		str	r3, [sp, #4]
  39 0006 064B     		ldr	r3, .L3
  40 0008 1A6B     		ldr	r2, [r3, #48]
  41 000a 42F00102 		orr	r2, r2, #1
  42 000e 1A63     		str	r2, [r3, #48]
  43 0010 1B6B     		ldr	r3, [r3, #48]
  44 0012 03F00103 		and	r3, r3, #1
  45 0016 0193     		str	r3, [sp, #4]
  46 0018 019B     		ldr	r3, [sp, #4]
  47              	.LBE2:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** }
  48              		.loc 1 328 0
  49 001a 02B0     		add	sp, sp, #8
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 0
  52              		@ sp needed
  53 001c 7047     		bx	lr
  54              	.L4:
  55 001e 00BF     		.align	2
  56              	.L3:
  57 0020 00380240 		.word	1073887232
  58              		.cfi_endproc
  59              	.LFE278:
  61              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MX_USART2_UART_Init:
  69              	.LFB277:
 290:Core/Src/main.c **** 
  70              		.loc 1 290 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 8


  74 0000 08B5     		push	{r3, lr}
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 3, -8
  78              		.cfi_offset 14, -4
 299:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
  79              		.loc 1 299 0
  80 0002 0A48     		ldr	r0, .L9
  81 0004 0A4B     		ldr	r3, .L9+4
  82 0006 0360     		str	r3, [r0]
 300:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  83              		.loc 1 300 0
  84 0008 4FF4E133 		mov	r3, #115200
  85 000c 4360     		str	r3, [r0, #4]
 301:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  86              		.loc 1 301 0
  87 000e 0023     		movs	r3, #0
  88 0010 8360     		str	r3, [r0, #8]
 302:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
  89              		.loc 1 302 0
  90 0012 C360     		str	r3, [r0, #12]
 303:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  91              		.loc 1 303 0
  92 0014 0361     		str	r3, [r0, #16]
 304:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  93              		.loc 1 304 0
  94 0016 0C22     		movs	r2, #12
  95 0018 4261     		str	r2, [r0, #20]
 305:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  96              		.loc 1 305 0
  97 001a 8361     		str	r3, [r0, #24]
 306:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  98              		.loc 1 306 0
  99 001c C361     		str	r3, [r0, #28]
 307:Core/Src/main.c ****   {
 100              		.loc 1 307 0
 101 001e FFF7FEFF 		bl	HAL_UART_Init
 102              	.LVL0:
 103 0022 00B9     		cbnz	r0, .L8
 104              	.L5:
 105 0024 08BD     		pop	{r3, pc}
 106              	.L8:
 309:Core/Src/main.c ****   }
 107              		.loc 1 309 0
 108 0026 FFF7FEFF 		bl	Error_Handler
 109              	.LVL1:
 315:Core/Src/main.c **** 
 110              		.loc 1 315 0
 111 002a FBE7     		b	.L5
 112              	.L10:
 113              		.align	2
 114              	.L9:
 115 002c 00000000 		.word	huart2
 116 0030 00440040 		.word	1073759232
 117              		.cfi_endproc
 118              	.LFE277:
 120              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 9


 121              		.align	1
 122              		.global	SystemClock_Config
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	SystemClock_Config:
 129              	.LFB276:
 250:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 130              		.loc 1 250 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 80
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 00B5     		push	{lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 14, -4
 138 0002 95B0     		sub	sp, sp, #84
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 88
 251:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 141              		.loc 1 251 0
 142 0004 3022     		movs	r2, #48
 143 0006 0021     		movs	r1, #0
 144 0008 08A8     		add	r0, sp, #32
 145 000a FFF7FEFF 		bl	memset
 146              	.LVL2:
 252:Core/Src/main.c **** 
 147              		.loc 1 252 0
 148 000e 0023     		movs	r3, #0
 149 0010 0393     		str	r3, [sp, #12]
 150 0012 0493     		str	r3, [sp, #16]
 151 0014 0593     		str	r3, [sp, #20]
 152 0016 0693     		str	r3, [sp, #24]
 153 0018 0793     		str	r3, [sp, #28]
 154              	.LBB3:
 256:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 155              		.loc 1 256 0
 156 001a 0193     		str	r3, [sp, #4]
 157 001c 1A4A     		ldr	r2, .L17
 158 001e 116C     		ldr	r1, [r2, #64]
 159 0020 41F08051 		orr	r1, r1, #268435456
 160 0024 1164     		str	r1, [r2, #64]
 161 0026 126C     		ldr	r2, [r2, #64]
 162 0028 02F08052 		and	r2, r2, #268435456
 163 002c 0192     		str	r2, [sp, #4]
 164 002e 019A     		ldr	r2, [sp, #4]
 165              	.LBE3:
 166              	.LBB4:
 257:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 167              		.loc 1 257 0
 168 0030 0293     		str	r3, [sp, #8]
 169 0032 1649     		ldr	r1, .L17+4
 170 0034 0A68     		ldr	r2, [r1]
 171 0036 22F44042 		bic	r2, r2, #49152
 172 003a 42F40042 		orr	r2, r2, #32768
 173 003e 0A60     		str	r2, [r1]
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 10


 174 0040 0A68     		ldr	r2, [r1]
 175 0042 02F44042 		and	r2, r2, #49152
 176 0046 0292     		str	r2, [sp, #8]
 177 0048 029A     		ldr	r2, [sp, #8]
 178              	.LBE4:
 261:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 179              		.loc 1 261 0
 180 004a 0222     		movs	r2, #2
 181 004c 0892     		str	r2, [sp, #32]
 262:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 182              		.loc 1 262 0
 183 004e 0122     		movs	r2, #1
 184 0050 0B92     		str	r2, [sp, #44]
 263:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 185              		.loc 1 263 0
 186 0052 1022     		movs	r2, #16
 187 0054 0C92     		str	r2, [sp, #48]
 264:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 188              		.loc 1 264 0
 189 0056 0E93     		str	r3, [sp, #56]
 265:Core/Src/main.c ****   {
 190              		.loc 1 265 0
 191 0058 08A8     		add	r0, sp, #32
 192 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 193              	.LVL3:
 194 005e 68B9     		cbnz	r0, .L15
 195              	.L12:
 271:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 196              		.loc 1 271 0
 197 0060 0F23     		movs	r3, #15
 198 0062 0393     		str	r3, [sp, #12]
 273:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 199              		.loc 1 273 0
 200 0064 0021     		movs	r1, #0
 201 0066 0491     		str	r1, [sp, #16]
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 202              		.loc 1 274 0
 203 0068 0591     		str	r1, [sp, #20]
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 204              		.loc 1 275 0
 205 006a 0691     		str	r1, [sp, #24]
 276:Core/Src/main.c **** 
 206              		.loc 1 276 0
 207 006c 0791     		str	r1, [sp, #28]
 278:Core/Src/main.c ****   {
 208              		.loc 1 278 0
 209 006e 03A8     		add	r0, sp, #12
 210 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 211              	.LVL4:
 212 0074 28B9     		cbnz	r0, .L16
 213              	.L11:
 282:Core/Src/main.c **** 
 214              		.loc 1 282 0
 215 0076 15B0     		add	sp, sp, #84
 216              	.LCFI5:
 217              		.cfi_remember_state
 218              		.cfi_def_cfa_offset 4
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 11


 219              		@ sp needed
 220 0078 5DF804FB 		ldr	pc, [sp], #4
 221              	.L15:
 222              	.LCFI6:
 223              		.cfi_restore_state
 267:Core/Src/main.c ****   }
 224              		.loc 1 267 0
 225 007c FFF7FEFF 		bl	Error_Handler
 226              	.LVL5:
 227 0080 EEE7     		b	.L12
 228              	.L16:
 280:Core/Src/main.c ****   }
 229              		.loc 1 280 0
 230 0082 FFF7FEFF 		bl	Error_Handler
 231              	.LVL6:
 282:Core/Src/main.c **** 
 232              		.loc 1 282 0
 233 0086 F6E7     		b	.L11
 234              	.L18:
 235              		.align	2
 236              	.L17:
 237 0088 00380240 		.word	1073887232
 238 008c 00700040 		.word	1073770496
 239              		.cfi_endproc
 240              	.LFE276:
 242              		.section	.text.print,"ax",%progbits
 243              		.align	1
 244              		.global	print
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	print:
 251              	.LFB280:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** WiFi_Status_t wifi_get_AP_settings(void)
 333:Core/Src/main.c **** {
 334:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 335:Core/Src/main.c ****   print("\r\n\n/********************************************************\n");
 336:Core/Src/main.c ****   print("\r *                                                      *\n");
 337:Core/Src/main.c ****   print("\r * X-CUBE-WIFI1 Expansion Software v3.1.1               *\n");
 338:Core/Src/main.c ****   print("\r * X-NUCLEO-IDW0xx1 Wi-Fi Mini-AP Configuration.        *\n");
 339:Core/Src/main.c ****   print("\r * HTTP-Request Example                                 *\n");
 340:Core/Src/main.c ****   print("\r *                                                      *\n");
 341:Core/Src/main.c ****   print("\r *******************************************************/\n");
 342:Core/Src/main.c ****   print("\r\nDo you want to setup SSID?(y/n):");
 343:Core/Src/main.c ****   fflush(stdout);
 344:Core/Src/main.c ****   scanf("%s",console_input);
 345:Core/Src/main.c ****   //console_input[0] = 'n';
 346:Core/Src/main.c ****   print("\r\n");
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   //HAL_UART_Receive(UartMsgHandle, (uint8_t *)console_input, 1, 100000);
 349:Core/Src/main.c ****   if(console_input[0]=='y') 
 350:Core/Src/main.c ****         {
 351:Core/Src/main.c ****               set_AP_config = WIFI_TRUE;  
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 12


 352:Core/Src/main.c ****               print("Enter the SSID:");
 353:Core/Src/main.c ****               fflush(stdout);
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****               console_count=0;
 356:Core/Src/main.c ****               console_count=scanf("%s",console_ssid);
 357:Core/Src/main.c ****               print("\r\n");
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****                 if(console_count==39) 
 360:Core/Src/main.c ****                     {
 361:Core/Src/main.c ****                         print("Exceeded number of ssid characters permitted");
 362:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 363:Core/Src/main.c ****                     }    
 364:Core/Src/main.c ****               
 365:Core/Src/main.c ****               //print("entered =%s\r\n",console_ssid);
 366:Core/Src/main.c ****               print("Enter the password:");
 367:Core/Src/main.c ****               fflush(stdout);
 368:Core/Src/main.c ****               console_count=0;
 369:Core/Src/main.c ****               
 370:Core/Src/main.c ****               console_count=scanf("%s",console_psk);
 371:Core/Src/main.c ****               print("\r\n");
 372:Core/Src/main.c ****               //print("entered =%s\r\n",console_psk);
 373:Core/Src/main.c ****                 if(console_count==19) 
 374:Core/Src/main.c ****                     {
 375:Core/Src/main.c ****                         print("Exceeded number of psk characters permitted");
 376:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 377:Core/Src/main.c ****                     }    
 378:Core/Src/main.c ****               print("Enter the encryption mode(0:Open, 1:WEP, 2:WPA2/WPA2-Personal):"); 
 379:Core/Src/main.c ****               fflush(stdout);
 380:Core/Src/main.c ****              scanf("%s",console_input);
 381:Core/Src/main.c ****              print("\r\n");
 382:Core/Src/main.c ****               //print("entered =%s\r\n",console_input);
 383:Core/Src/main.c ****               switch(console_input[0])
 384:Core/Src/main.c ****               {
 385:Core/Src/main.c ****                 case '0':
 386:Core/Src/main.c ****                   mode = None;
 387:Core/Src/main.c ****                   break;
 388:Core/Src/main.c ****                 case '1':
 389:Core/Src/main.c ****                   mode = WEP;
 390:Core/Src/main.c ****                   break;
 391:Core/Src/main.c ****                 case '2':
 392:Core/Src/main.c ****                   mode = WPA_Personal;
 393:Core/Src/main.c ****                   break;
 394:Core/Src/main.c ****                 default:
 395:Core/Src/main.c ****                   print("\r\nWrong Entry. Priv Mode is not compatible\n");
 396:Core/Src/main.c ****                   return WiFi_NOT_SUPPORTED;              
 397:Core/Src/main.c ****               }
 398:Core/Src/main.c ****               
 399:Core/Src/main.c ****               memcpy(console_host, (const char*)hostname, strlen((char*)hostname));
 400:Core/Src/main.c ****               
 401:Core/Src/main.c ****         } else 
 402:Core/Src/main.c ****             {
 403:Core/Src/main.c ****                 print("\r\n\nModule will connect with default settings.");
 404:Core/Src/main.c ****                 memcpy(console_ssid, (const char*)ssid, strlen((char*)ssid));
 405:Core/Src/main.c ****                 memcpy(console_psk, (const char*)seckey, strlen((char*)seckey));
 406:Core/Src/main.c ****                 memcpy(console_host, (const char*)hostname, strlen((char*)hostname));
 407:Core/Src/main.c ****             }
 408:Core/Src/main.c ****   
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 13


 409:Core/Src/main.c ****   print("\r\n/*************************************************************\r\n");
 410:Core/Src/main.c ****   print("\r\n * Configuration Complete                                     \r\n");
 411:Core/Src/main.c ****   print("\r\n * Please make sure a Server is running at given hostname     \r\n");
 412:Core/Src/main.c ****   print("\r\n *************************************************************\r\n");
 413:Core/Src/main.c ****   
 414:Core/Src/main.c ****   return status;
 415:Core/Src/main.c **** }
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** 
 418:Core/Src/main.c **** /******** Wi-Fi Indication User Callback *********/
 419:Core/Src/main.c **** void print(char msg[]) {
 252              		.loc 1 419 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 104
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL7:
 257 0000 00B5     		push	{lr}
 258              	.LCFI7:
 259              		.cfi_def_cfa_offset 4
 260              		.cfi_offset 14, -4
 261 0002 9BB0     		sub	sp, sp, #108
 262              	.LCFI8:
 263              		.cfi_def_cfa_offset 112
 420:Core/Src/main.c **** 	unsigned char message[MAX_MSG_SIZE];
 421:Core/Src/main.c **** 	strncpy(message, msg, MAX_MSG_SIZE);
 264              		.loc 1 421 0
 265 0004 6422     		movs	r2, #100
 266 0006 0146     		mov	r1, r0
 267 0008 01A8     		add	r0, sp, #4
 268              	.LVL8:
 269 000a FFF7FEFF 		bl	strncpy
 270              	.LVL9:
 422:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, message, MAX_MSG_SIZE, 1000);
 271              		.loc 1 422 0
 272 000e 4FF47A73 		mov	r3, #1000
 273 0012 6422     		movs	r2, #100
 274 0014 01A9     		add	r1, sp, #4
 275 0016 0348     		ldr	r0, .L21
 276 0018 FFF7FEFF 		bl	HAL_UART_Transmit
 277              	.LVL10:
 423:Core/Src/main.c **** }
 278              		.loc 1 423 0
 279 001c 1BB0     		add	sp, sp, #108
 280              	.LCFI9:
 281              		.cfi_def_cfa_offset 4
 282              		@ sp needed
 283 001e 5DF804FB 		ldr	pc, [sp], #4
 284              	.L22:
 285 0022 00BF     		.align	2
 286              	.L21:
 287 0024 00000000 		.word	huart2
 288              		.cfi_endproc
 289              	.LFE280:
 291              		.section	.text.wifi_get_AP_settings,"ax",%progbits
 292              		.align	1
 293              		.global	wifi_get_AP_settings
 294              		.syntax unified
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 14


 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv4-sp-d16
 299              	wifi_get_AP_settings:
 300              	.LFB279:
 333:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 301              		.loc 1 333 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 10B5     		push	{r4, lr}
 306              	.LCFI10:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 4, -8
 309              		.cfi_offset 14, -4
 310              	.LVL11:
 335:Core/Src/main.c ****   print("\r *                                                      *\n");
 311              		.loc 1 335 0
 312 0002 6148     		ldr	r0, .L40
 313 0004 FFF7FEFF 		bl	print
 314              	.LVL12:
 336:Core/Src/main.c ****   print("\r * X-CUBE-WIFI1 Expansion Software v3.1.1               *\n");
 315              		.loc 1 336 0
 316 0008 604C     		ldr	r4, .L40+4
 317 000a 2046     		mov	r0, r4
 318 000c FFF7FEFF 		bl	print
 319              	.LVL13:
 337:Core/Src/main.c ****   print("\r * X-NUCLEO-IDW0xx1 Wi-Fi Mini-AP Configuration.        *\n");
 320              		.loc 1 337 0
 321 0010 5F48     		ldr	r0, .L40+8
 322 0012 FFF7FEFF 		bl	print
 323              	.LVL14:
 338:Core/Src/main.c ****   print("\r * HTTP-Request Example                                 *\n");
 324              		.loc 1 338 0
 325 0016 5F48     		ldr	r0, .L40+12
 326 0018 FFF7FEFF 		bl	print
 327              	.LVL15:
 339:Core/Src/main.c ****   print("\r *                                                      *\n");
 328              		.loc 1 339 0
 329 001c 5E48     		ldr	r0, .L40+16
 330 001e FFF7FEFF 		bl	print
 331              	.LVL16:
 340:Core/Src/main.c ****   print("\r *******************************************************/\n");
 332              		.loc 1 340 0
 333 0022 2046     		mov	r0, r4
 334 0024 FFF7FEFF 		bl	print
 335              	.LVL17:
 341:Core/Src/main.c ****   print("\r\nDo you want to setup SSID?(y/n):");
 336              		.loc 1 341 0
 337 0028 5C48     		ldr	r0, .L40+20
 338 002a FFF7FEFF 		bl	print
 339              	.LVL18:
 342:Core/Src/main.c ****   fflush(stdout);
 340              		.loc 1 342 0
 341 002e 5C48     		ldr	r0, .L40+24
 342 0030 FFF7FEFF 		bl	print
 343              	.LVL19:
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 15


 343:Core/Src/main.c ****   scanf("%s",console_input);
 344              		.loc 1 343 0
 345 0034 5B4B     		ldr	r3, .L40+28
 346 0036 1B68     		ldr	r3, [r3]
 347 0038 9868     		ldr	r0, [r3, #8]
 348 003a FFF7FEFF 		bl	fflush
 349              	.LVL20:
 344:Core/Src/main.c ****   //console_input[0] = 'n';
 350              		.loc 1 344 0
 351 003e 5A4C     		ldr	r4, .L40+32
 352 0040 2146     		mov	r1, r4
 353 0042 5A48     		ldr	r0, .L40+36
 354 0044 FFF7FEFF 		bl	scanf
 355              	.LVL21:
 346:Core/Src/main.c **** 
 356              		.loc 1 346 0
 357 0048 5948     		ldr	r0, .L40+40
 358 004a FFF7FEFF 		bl	print
 359              	.LVL22:
 349:Core/Src/main.c ****         {
 360              		.loc 1 349 0
 361 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 362 0050 792B     		cmp	r3, #121
 363 0052 2ED0     		beq	.L36
 403:Core/Src/main.c ****                 memcpy(console_ssid, (const char*)ssid, strlen((char*)ssid));
 364              		.loc 1 403 0
 365 0054 5748     		ldr	r0, .L40+44
 366 0056 FFF7FEFF 		bl	print
 367              	.LVL23:
 404:Core/Src/main.c ****                 memcpy(console_psk, (const char*)seckey, strlen((char*)seckey));
 368              		.loc 1 404 0
 369 005a 574B     		ldr	r3, .L40+48
 370 005c 1C68     		ldr	r4, [r3]
 371 005e 2046     		mov	r0, r4
 372 0060 FFF7FEFF 		bl	strlen
 373              	.LVL24:
 374 0064 0246     		mov	r2, r0
 375 0066 2146     		mov	r1, r4
 376 0068 5448     		ldr	r0, .L40+52
 377 006a FFF7FEFF 		bl	memcpy
 378              	.LVL25:
 405:Core/Src/main.c ****                 memcpy(console_host, (const char*)hostname, strlen((char*)hostname));
 379              		.loc 1 405 0
 380 006e 544B     		ldr	r3, .L40+56
 381 0070 1C68     		ldr	r4, [r3]
 382 0072 2046     		mov	r0, r4
 383 0074 FFF7FEFF 		bl	strlen
 384              	.LVL26:
 385 0078 0246     		mov	r2, r0
 386 007a 2146     		mov	r1, r4
 387 007c 5148     		ldr	r0, .L40+60
 388 007e FFF7FEFF 		bl	memcpy
 389              	.LVL27:
 406:Core/Src/main.c ****             }
 390              		.loc 1 406 0
 391 0082 514B     		ldr	r3, .L40+64
 392 0084 1C68     		ldr	r4, [r3]
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 16


 393 0086 2046     		mov	r0, r4
 394 0088 FFF7FEFF 		bl	strlen
 395              	.LVL28:
 396 008c 0246     		mov	r2, r0
 397 008e 2146     		mov	r1, r4
 398 0090 4E48     		ldr	r0, .L40+68
 399 0092 FFF7FEFF 		bl	memcpy
 400              	.LVL29:
 401              	.L33:
 409:Core/Src/main.c ****   print("\r\n * Configuration Complete                                     \r\n");
 402              		.loc 1 409 0
 403 0096 4E48     		ldr	r0, .L40+72
 404 0098 FFF7FEFF 		bl	print
 405              	.LVL30:
 410:Core/Src/main.c ****   print("\r\n * Please make sure a Server is running at given hostname     \r\n");
 406              		.loc 1 410 0
 407 009c 4D48     		ldr	r0, .L40+76
 408 009e FFF7FEFF 		bl	print
 409              	.LVL31:
 411:Core/Src/main.c ****   print("\r\n *************************************************************\r\n");
 410              		.loc 1 411 0
 411 00a2 4D48     		ldr	r0, .L40+80
 412 00a4 FFF7FEFF 		bl	print
 413              	.LVL32:
 412:Core/Src/main.c ****   
 414              		.loc 1 412 0
 415 00a8 4C48     		ldr	r0, .L40+84
 416 00aa FFF7FEFF 		bl	print
 417              	.LVL33:
 414:Core/Src/main.c **** }
 418              		.loc 1 414 0
 419 00ae 0020     		movs	r0, #0
 415:Core/Src/main.c **** 
 420              		.loc 1 415 0
 421 00b0 10BD     		pop	{r4, pc}
 422              	.L36:
 351:Core/Src/main.c ****               print("Enter the SSID:");
 423              		.loc 1 351 0
 424 00b2 0122     		movs	r2, #1
 425 00b4 4A4B     		ldr	r3, .L40+88
 426 00b6 1A70     		strb	r2, [r3]
 352:Core/Src/main.c ****               fflush(stdout);
 427              		.loc 1 352 0
 428 00b8 4A48     		ldr	r0, .L40+92
 429 00ba FFF7FEFF 		bl	print
 430              	.LVL34:
 353:Core/Src/main.c **** 
 431              		.loc 1 353 0
 432 00be 394B     		ldr	r3, .L40+28
 433 00c0 1B68     		ldr	r3, [r3]
 434 00c2 9868     		ldr	r0, [r3, #8]
 435 00c4 FFF7FEFF 		bl	fflush
 436              	.LVL35:
 355:Core/Src/main.c ****               console_count=scanf("%s",console_ssid);
 437              		.loc 1 355 0
 438 00c8 474C     		ldr	r4, .L40+96
 439 00ca 0023     		movs	r3, #0
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 17


 440 00cc 2370     		strb	r3, [r4]
 356:Core/Src/main.c ****               print("\r\n");
 441              		.loc 1 356 0
 442 00ce 3B49     		ldr	r1, .L40+52
 443 00d0 3648     		ldr	r0, .L40+36
 444 00d2 FFF7FEFF 		bl	scanf
 445              	.LVL36:
 446 00d6 2070     		strb	r0, [r4]
 357:Core/Src/main.c **** 
 447              		.loc 1 357 0
 448 00d8 3548     		ldr	r0, .L40+40
 449 00da FFF7FEFF 		bl	print
 450              	.LVL37:
 359:Core/Src/main.c ****                     {
 451              		.loc 1 359 0
 452 00de 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 453 00e0 272B     		cmp	r3, #39
 454 00e2 31D0     		beq	.L37
 366:Core/Src/main.c ****               fflush(stdout);
 455              		.loc 1 366 0
 456 00e4 4148     		ldr	r0, .L40+100
 457 00e6 FFF7FEFF 		bl	print
 458              	.LVL38:
 367:Core/Src/main.c ****               console_count=0;
 459              		.loc 1 367 0
 460 00ea 2E4B     		ldr	r3, .L40+28
 461 00ec 1B68     		ldr	r3, [r3]
 462 00ee 9868     		ldr	r0, [r3, #8]
 463 00f0 FFF7FEFF 		bl	fflush
 464              	.LVL39:
 368:Core/Src/main.c ****               
 465              		.loc 1 368 0
 466 00f4 3C4C     		ldr	r4, .L40+96
 467 00f6 0023     		movs	r3, #0
 468 00f8 2370     		strb	r3, [r4]
 370:Core/Src/main.c ****               print("\r\n");
 469              		.loc 1 370 0
 470 00fa 3249     		ldr	r1, .L40+60
 471 00fc 2B48     		ldr	r0, .L40+36
 472 00fe FFF7FEFF 		bl	scanf
 473              	.LVL40:
 474 0102 2070     		strb	r0, [r4]
 371:Core/Src/main.c ****               //print("entered =%s\r\n",console_psk);
 475              		.loc 1 371 0
 476 0104 2A48     		ldr	r0, .L40+40
 477 0106 FFF7FEFF 		bl	print
 478              	.LVL41:
 373:Core/Src/main.c ****                     {
 479              		.loc 1 373 0
 480 010a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 481 010c 132B     		cmp	r3, #19
 482 010e 20D0     		beq	.L38
 378:Core/Src/main.c ****               fflush(stdout);
 483              		.loc 1 378 0
 484 0110 3748     		ldr	r0, .L40+104
 485 0112 FFF7FEFF 		bl	print
 486              	.LVL42:
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 18


 379:Core/Src/main.c ****              scanf("%s",console_input);
 487              		.loc 1 379 0
 488 0116 234B     		ldr	r3, .L40+28
 489 0118 1B68     		ldr	r3, [r3]
 490 011a 9868     		ldr	r0, [r3, #8]
 491 011c FFF7FEFF 		bl	fflush
 492              	.LVL43:
 380:Core/Src/main.c ****              print("\r\n");
 493              		.loc 1 380 0
 494 0120 214C     		ldr	r4, .L40+32
 495 0122 2146     		mov	r1, r4
 496 0124 2148     		ldr	r0, .L40+36
 497 0126 FFF7FEFF 		bl	scanf
 498              	.LVL44:
 381:Core/Src/main.c ****               //print("entered =%s\r\n",console_input);
 499              		.loc 1 381 0
 500 012a 2148     		ldr	r0, .L40+40
 501 012c FFF7FEFF 		bl	print
 502              	.LVL45:
 383:Core/Src/main.c ****               {
 503              		.loc 1 383 0
 504 0130 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 505 0132 312B     		cmp	r3, #49
 506 0134 20D0     		beq	.L29
 507 0136 322B     		cmp	r3, #50
 508 0138 22D0     		beq	.L30
 509 013a 302B     		cmp	r3, #48
 510 013c 0ED0     		beq	.L39
 395:Core/Src/main.c ****                   return WiFi_NOT_SUPPORTED;              
 511              		.loc 1 395 0
 512 013e 2D48     		ldr	r0, .L40+108
 513 0140 FFF7FEFF 		bl	print
 514              	.LVL46:
 396:Core/Src/main.c ****               }
 515              		.loc 1 396 0
 516 0144 0420     		movs	r0, #4
 517 0146 10BD     		pop	{r4, pc}
 518              	.L37:
 361:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 519              		.loc 1 361 0
 520 0148 2B48     		ldr	r0, .L40+112
 521 014a FFF7FEFF 		bl	print
 522              	.LVL47:
 362:Core/Src/main.c ****                     }    
 523              		.loc 1 362 0
 524 014e 0420     		movs	r0, #4
 525 0150 10BD     		pop	{r4, pc}
 526              	.L38:
 375:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 527              		.loc 1 375 0
 528 0152 2A48     		ldr	r0, .L40+116
 529 0154 FFF7FEFF 		bl	print
 530              	.LVL48:
 376:Core/Src/main.c ****                     }    
 531              		.loc 1 376 0
 532 0158 0420     		movs	r0, #4
 533 015a 10BD     		pop	{r4, pc}
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 19


 534              	.L39:
 386:Core/Src/main.c ****                   break;
 535              		.loc 1 386 0
 536 015c 0022     		movs	r2, #0
 537 015e 284B     		ldr	r3, .L40+120
 538 0160 1A70     		strb	r2, [r3]
 539              	.L32:
 399:Core/Src/main.c ****               
 540              		.loc 1 399 0
 541 0162 194B     		ldr	r3, .L40+64
 542 0164 1C68     		ldr	r4, [r3]
 543 0166 2046     		mov	r0, r4
 544 0168 FFF7FEFF 		bl	strlen
 545              	.LVL49:
 546 016c 0246     		mov	r2, r0
 547 016e 2146     		mov	r1, r4
 548 0170 1648     		ldr	r0, .L40+68
 549 0172 FFF7FEFF 		bl	memcpy
 550              	.LVL50:
 551 0176 8EE7     		b	.L33
 552              	.L29:
 389:Core/Src/main.c ****                   break;
 553              		.loc 1 389 0
 554 0178 0122     		movs	r2, #1
 555 017a 214B     		ldr	r3, .L40+120
 556 017c 1A70     		strb	r2, [r3]
 390:Core/Src/main.c ****                 case '2':
 557              		.loc 1 390 0
 558 017e F0E7     		b	.L32
 559              	.L30:
 392:Core/Src/main.c ****                   break;
 560              		.loc 1 392 0
 561 0180 0222     		movs	r2, #2
 562 0182 1F4B     		ldr	r3, .L40+120
 563 0184 1A70     		strb	r2, [r3]
 393:Core/Src/main.c ****                 default:
 564              		.loc 1 393 0
 565 0186 ECE7     		b	.L32
 566              	.L41:
 567              		.align	2
 568              	.L40:
 569 0188 00000000 		.word	.LC0
 570 018c 40000000 		.word	.LC1
 571 0190 7C000000 		.word	.LC2
 572 0194 B8000000 		.word	.LC3
 573 0198 F4000000 		.word	.LC4
 574 019c 30010000 		.word	.LC5
 575 01a0 6C010000 		.word	.LC6
 576 01a4 00000000 		.word	_impure_ptr
 577 01a8 00000000 		.word	console_input
 578 01ac 90010000 		.word	.LC7
 579 01b0 94010000 		.word	.LC8
 580 01b4 84020000 		.word	.LC15
 581 01b8 00000000 		.word	.LANCHOR4
 582 01bc 00000000 		.word	console_ssid
 583 01c0 00000000 		.word	.LANCHOR5
 584 01c4 00000000 		.word	console_psk
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 20


 585 01c8 00000000 		.word	.LANCHOR3
 586 01cc 00000000 		.word	console_host
 587 01d0 B4020000 		.word	.LC16
 588 01d4 F8020000 		.word	.LC17
 589 01d8 3C030000 		.word	.LC18
 590 01dc 80030000 		.word	.LC19
 591 01e0 00000000 		.word	.LANCHOR0
 592 01e4 98010000 		.word	.LC9
 593 01e8 00000000 		.word	.LANCHOR1
 594 01ec D8010000 		.word	.LC11
 595 01f0 18020000 		.word	.LC13
 596 01f4 58020000 		.word	.LC14
 597 01f8 A8010000 		.word	.LC10
 598 01fc EC010000 		.word	.LC12
 599 0200 00000000 		.word	.LANCHOR2
 600              		.cfi_endproc
 601              	.LFE279:
 603              		.section	.text.main,"ax",%progbits
 604              		.align	1
 605              		.global	main
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv4-sp-d16
 611              	main:
 612              	.LFB275:
 110:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 613              		.loc 1 110 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 38B5     		push	{r3, r4, r5, lr}
 618              	.LCFI11:
 619              		.cfi_def_cfa_offset 16
 620              		.cfi_offset 3, -16
 621              		.cfi_offset 4, -12
 622              		.cfi_offset 5, -8
 623              		.cfi_offset 14, -4
 624              	.LVL51:
 117:Core/Src/main.c ****   SystemClock_Config();
 625              		.loc 1 117 0
 626 0002 FFF7FEFF 		bl	HAL_Init
 627              	.LVL52:
 118:Core/Src/main.c **** 
 628              		.loc 1 118 0
 629 0006 FFF7FEFF 		bl	SystemClock_Config
 630              	.LVL53:
 121:Core/Src/main.c ****   MX_USART2_UART_Init();
 631              		.loc 1 121 0
 632 000a FFF7FEFF 		bl	MX_GPIO_Init
 633              	.LVL54:
 122:Core/Src/main.c **** 
 634              		.loc 1 122 0
 635 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 636              	.LVL55:
 130:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 637              		.loc 1 130 0
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 21


 638 0012 FFF7FEFF 		bl	wifi_get_AP_settings
 639              	.LVL56:
 131:Core/Src/main.c ****   {
 640              		.loc 1 131 0
 641 0016 20B1     		cbz	r0, .L43
 133:Core/Src/main.c ****     return 0;
 642              		.loc 1 133 0
 643 0018 5048     		ldr	r0, .L62
 644              	.LVL57:
 645 001a FFF7FEFF 		bl	print
 646              	.LVL58:
 647              	.L44:
 243:Core/Src/main.c **** 
 648              		.loc 1 243 0
 649 001e 0020     		movs	r0, #0
 650 0020 38BD     		pop	{r3, r4, r5, pc}
 651              	.LVL59:
 652              	.L43:
 137:Core/Src/main.c ****   
 653              		.loc 1 137 0
 654 0022 4F4D     		ldr	r5, .L62+4
 655 0024 2868     		ldr	r0, [r5]
 656              	.LVL60:
 657 0026 FFF7FEFF 		bl	UART_Configuration
 658              	.LVL61:
 139:Core/Src/main.c ****   config.power_level=high;
 659              		.loc 1 139 0
 660 002a 4E4C     		ldr	r4, .L62+8
 661 002c 0023     		movs	r3, #0
 662 002e 6370     		strb	r3, [r4, #1]
 140:Core/Src/main.c ****   config.dhcp=on;//use DHCP IP address   
 663              		.loc 1 140 0
 664 0030 0223     		movs	r3, #2
 665 0032 A370     		strb	r3, [r4, #2]
 141:Core/Src/main.c ****   config.mcu_baud_rate = baud_rate;
 666              		.loc 1 141 0
 667 0034 0122     		movs	r2, #1
 668 0036 E270     		strb	r2, [r4, #3]
 142:Core/Src/main.c ****   wifi_state = wifi_state_idle;
 669              		.loc 1 142 0
 670 0038 2A68     		ldr	r2, [r5]
 671 003a 6263     		str	r2, [r4, #52]
 143:Core/Src/main.c ****   
 672              		.loc 1 143 0
 673 003c 4A4A     		ldr	r2, .L62+12
 674 003e 1370     		strb	r3, [r2]
 145:Core/Src/main.c ****   
 675              		.loc 1 145 0
 676 0040 4A48     		ldr	r0, .L62+16
 677 0042 FFF7FEFF 		bl	print
 678              	.LVL62:
 148:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 679              		.loc 1 148 0
 680 0046 2046     		mov	r0, r4
 681 0048 FFF7FEFF 		bl	wifi_init
 682              	.LVL63:
 149:Core/Src/main.c ****   {
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 22


 683              		.loc 1 149 0
 684 004c 78B1     		cbz	r0, .L46
 151:Core/Src/main.c ****     return 0;
 685              		.loc 1 151 0
 686 004e 4848     		ldr	r0, .L62+20
 687              	.LVL64:
 688 0050 FFF7FEFF 		bl	print
 689              	.LVL65:
 152:Core/Src/main.c ****   }
 690              		.loc 1 152 0
 691 0054 E3E7     		b	.L44
 692              	.L47:
 163:Core/Src/main.c ****         wifi_connect(console_ssid, console_psk, mode);
 693              		.loc 1 163 0
 694 0056 4748     		ldr	r0, .L62+24
 695 0058 FFF7FEFF 		bl	print
 696              	.LVL66:
 164:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 697              		.loc 1 164 0
 698 005c 464B     		ldr	r3, .L62+28
 699 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 700 0060 4649     		ldr	r1, .L62+32
 701 0062 4748     		ldr	r0, .L62+36
 702 0064 FFF7FEFF 		bl	wifi_connect
 703              	.LVL67:
 165:Core/Src/main.c ****         break;
 704              		.loc 1 165 0
 705 0068 0222     		movs	r2, #2
 706 006a 3F4B     		ldr	r3, .L62+12
 707 006c 1A70     		strb	r2, [r3]
 708              	.L46:
 157:Core/Src/main.c ****     {
 709              		.loc 1 157 0
 710 006e 3E4B     		ldr	r3, .L62+12
 711 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 712 0072 013B     		subs	r3, r3, #1
 713 0074 072B     		cmp	r3, #7
 714 0076 FAD8     		bhi	.L46
 715 0078 01A2     		adr	r2, .L48
 716 007a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 717 007e 00BF     		.p2align 2
 718              	.L48:
 719 0080 57000000 		.word	.L47+1
 720 0084 43010000 		.word	.L49+1
 721 0088 A1000000 		.word	.L50+1
 722 008c 6F000000 		.word	.L46+1
 723 0090 AF000000 		.word	.L51+1
 724 0094 B7000000 		.word	.L52+1
 725 0098 0B010000 		.word	.L53+1
 726 009c 35010000 		.word	.L54+1
 727              		.p2align 1
 728              	.L50:
 169:Core/Src/main.c ****         wifi_state = wifi_state_activity;
 729              		.loc 1 169 0
 730 00a0 3848     		ldr	r0, .L62+40
 731 00a2 FFF7FEFF 		bl	print
 732              	.LVL68:
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 23


 170:Core/Src/main.c ****         break;
 733              		.loc 1 170 0
 734 00a6 0622     		movs	r2, #6
 735 00a8 2F4B     		ldr	r3, .L62+12
 736 00aa 1A70     		strb	r2, [r3]
 171:Core/Src/main.c **** 
 737              		.loc 1 171 0
 738 00ac DFE7     		b	.L46
 739              	.L51:
 174:Core/Src/main.c ****         break;
 740              		.loc 1 174 0
 741 00ae 0022     		movs	r2, #0
 742 00b0 2D4B     		ldr	r3, .L62+12
 743 00b2 1A70     		strb	r2, [r3]
 175:Core/Src/main.c **** 
 744              		.loc 1 175 0
 745 00b4 DBE7     		b	.L46
 746              	.L52:
 179:Core/Src/main.c ****         //print("\r\n>>IP address is %s\r\n", wifi_ip_addr);
 747              		.loc 1 179 0
 748 00b6 344C     		ldr	r4, .L62+44
 749 00b8 2046     		mov	r0, r4
 750 00ba FFF7FEFF 		bl	wifi_get_IP_address
 751              	.LVL69:
 182:Core/Src/main.c ****         
 752              		.loc 1 182 0
 753 00be 0023     		movs	r3, #0
 754 00c0 2360     		str	r3, [r4]	@ unaligned
 755 00c2 6360     		str	r3, [r4, #4]	@ unaligned
 756 00c4 A360     		str	r3, [r4, #8]	@ unaligned
 757 00c6 E360     		str	r3, [r4, #12]	@ unaligned
 758 00c8 2361     		str	r3, [r4, #16]	@ unaligned
 184:Core/Src/main.c ****         //print("\r\n>>model no is %s\r\n", wifi_ip_addr);
 759              		.loc 1 184 0
 760 00ca 2146     		mov	r1, r4
 761 00cc 2F4B     		ldr	r3, .L62+48
 762 00ce 1868     		ldr	r0, [r3]
 763 00d0 FFF7FEFF 		bl	GET_Configuration_Value
 764              	.LVL70:
 187:Core/Src/main.c ****             wifi_state = wifi_state_inter;//do a HTTP-POST
 765              		.loc 1 187 0
 766 00d4 2E4B     		ldr	r3, .L62+52
 767 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 768 00d8 1BB1     		cbz	r3, .L56
 188:Core/Src/main.c ****         else
 769              		.loc 1 188 0
 770 00da 0722     		movs	r2, #7
 771 00dc 224B     		ldr	r3, .L62+12
 772 00de 1A70     		strb	r2, [r3]
 773 00e0 C5E7     		b	.L46
 774              	.L56:
 191:Core/Src/main.c ****         
 775              		.loc 1 191 0
 776 00e2 2C48     		ldr	r0, .L62+56
 777 00e4 FFF7FEFF 		bl	print
 778              	.LVL71:
 193:Core/Src/main.c ****       
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 24


 779              		.loc 1 193 0
 780 00e8 5022     		movs	r2, #80
 781 00ea 2B49     		ldr	r1, .L62+60
 782 00ec 2B48     		ldr	r0, .L62+64
 783 00ee FFF7FEFF 		bl	wifi_http_get
 784              	.LVL72:
 195:Core/Src/main.c ****           {
 785              		.loc 1 195 0
 786 00f2 30B9     		cbnz	r0, .L57
 197:Core/Src/main.c ****           }
 787              		.loc 1 197 0
 788 00f4 2A48     		ldr	r0, .L62+68
 789              	.LVL73:
 790 00f6 FFF7FEFF 		bl	print
 791              	.LVL74:
 792              	.L58:
 203:Core/Src/main.c ****         }
 793              		.loc 1 203 0
 794 00fa 0222     		movs	r2, #2
 795 00fc 1A4B     		ldr	r3, .L62+12
 796 00fe 1A70     		strb	r2, [r3]
 797 0100 B5E7     		b	.L46
 798              	.LVL75:
 799              	.L57:
 201:Core/Src/main.c ****           }
 800              		.loc 1 201 0
 801 0102 2848     		ldr	r0, .L62+72
 802              	.LVL76:
 803 0104 FFF7FEFF 		bl	print
 804              	.LVL77:
 805 0108 F7E7     		b	.L58
 806              	.L53:
 210:Core/Src/main.c **** 
 807              		.loc 1 210 0
 808 010a 2748     		ldr	r0, .L62+76
 809 010c FFF7FEFF 		bl	print
 810              	.LVL78:
 212:Core/Src/main.c **** 
 811              		.loc 1 212 0
 812 0110 5022     		movs	r2, #80
 813 0112 2649     		ldr	r1, .L62+80
 814 0114 264B     		ldr	r3, .L62+84
 815 0116 1868     		ldr	r0, [r3]
 816 0118 FFF7FEFF 		bl	wifi_http_post
 817              	.LVL79:
 214:Core/Src/main.c ****         {
 818              		.loc 1 214 0
 819 011c 30B9     		cbnz	r0, .L59
 216:Core/Src/main.c ****         }
 820              		.loc 1 216 0
 821 011e 2548     		ldr	r0, .L62+88
 822              	.LVL80:
 823 0120 FFF7FEFF 		bl	print
 824              	.LVL81:
 825              	.L60:
 223:Core/Src/main.c ****         break;
 826              		.loc 1 223 0
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 25


 827 0124 0222     		movs	r2, #2
 828 0126 104B     		ldr	r3, .L62+12
 829 0128 1A70     		strb	r2, [r3]
 224:Core/Src/main.c **** 
 830              		.loc 1 224 0
 831 012a A0E7     		b	.L46
 832              	.LVL82:
 833              	.L59:
 220:Core/Src/main.c ****         }        
 834              		.loc 1 220 0
 835 012c 2248     		ldr	r0, .L62+92
 836              	.LVL83:
 837 012e FFF7FEFF 		bl	print
 838              	.LVL84:
 839 0132 F7E7     		b	.L60
 840              	.L54:
 227:Core/Src/main.c **** 
 841              		.loc 1 227 0
 842 0134 2148     		ldr	r0, .L62+96
 843 0136 FFF7FEFF 		bl	print
 844              	.LVL85:
 229:Core/Src/main.c **** 
 845              		.loc 1 229 0
 846 013a 0222     		movs	r2, #2
 847 013c 0A4B     		ldr	r3, .L62+12
 848 013e 1A70     		strb	r2, [r3]
 231:Core/Src/main.c ****     case wifi_state_idle:        
 849              		.loc 1 231 0
 850 0140 95E7     		b	.L46
 851              	.L49:
 233:Core/Src/main.c ****         fflush(stdout);
 852              		.loc 1 233 0
 853 0142 1F48     		ldr	r0, .L62+100
 854 0144 FFF7FEFF 		bl	print
 855              	.LVL86:
 234:Core/Src/main.c ****         HAL_Delay(500);
 856              		.loc 1 234 0
 857 0148 1E4B     		ldr	r3, .L62+104
 858 014a 1B68     		ldr	r3, [r3]
 859 014c 9868     		ldr	r0, [r3, #8]
 860 014e FFF7FEFF 		bl	fflush
 861              	.LVL87:
 235:Core/Src/main.c **** 
 862              		.loc 1 235 0
 863 0152 4FF4FA70 		mov	r0, #500
 864 0156 FFF7FEFF 		bl	HAL_Delay
 865              	.LVL88:
 237:Core/Src/main.c **** 
 866              		.loc 1 237 0
 867 015a 88E7     		b	.L46
 868              	.L63:
 869              		.align	2
 870              	.L62:
 871 015c 00000000 		.word	.LC20
 872 0160 00000000 		.word	.LANCHOR6
 873 0164 00000000 		.word	config
 874 0168 00000000 		.word	wifi_state
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 26


 875 016c 18000000 		.word	.LC21
 876 0170 3C000000 		.word	.LC22
 877 0174 4C000000 		.word	.LC23
 878 0178 00000000 		.word	.LANCHOR2
 879 017c 00000000 		.word	console_psk
 880 0180 00000000 		.word	console_ssid
 881 0184 68000000 		.word	.LC24
 882 0188 00000000 		.word	wifi_ip_addr
 883 018c 00000000 		.word	.LANCHOR7
 884 0190 00000000 		.word	.LANCHOR8
 885 0194 7C000000 		.word	.LC25
 886 0198 90000000 		.word	.LC26
 887 019c 00000000 		.word	console_host
 888 01a0 98000000 		.word	.LC27
 889 01a4 A8000000 		.word	.LC28
 890 01a8 BC000000 		.word	.LC29
 891 01ac E8000000 		.word	.LC30
 892 01b0 00000000 		.word	.LANCHOR9
 893 01b4 24010000 		.word	.LC31
 894 01b8 38010000 		.word	.LC32
 895 01bc 00000000 		.word	user_buffer
 896 01c0 4C010000 		.word	.LC33
 897 01c4 00000000 		.word	_impure_ptr
 898              		.cfi_endproc
 899              	.LFE275:
 901              		.section	.text.ind_wifi_on,"ax",%progbits
 902              		.align	1
 903              		.global	ind_wifi_on
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 907              		.fpu fpv4-sp-d16
 909              	ind_wifi_on:
 910              	.LFB281:
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** void ind_wifi_on()
 426:Core/Src/main.c **** {
 911              		.loc 1 426 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915 0000 08B5     		push	{r3, lr}
 916              	.LCFI12:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 3, -8
 919              		.cfi_offset 14, -4
 427:Core/Src/main.c ****   print("\r\n\nwifi started and ready...\r\n");
 920              		.loc 1 427 0
 921 0002 0348     		ldr	r0, .L66
 922 0004 FFF7FEFF 		bl	print
 923              	.LVL89:
 428:Core/Src/main.c ****   wifi_state = wifi_state_ready;
 924              		.loc 1 428 0
 925 0008 0122     		movs	r2, #1
 926 000a 024B     		ldr	r3, .L66+4
 927 000c 1A70     		strb	r2, [r3]
 928 000e 08BD     		pop	{r3, pc}
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 27


 929              	.L67:
 930              		.align	2
 931              	.L66:
 932 0010 00000000 		.word	.LC34
 933 0014 00000000 		.word	wifi_state
 934              		.cfi_endproc
 935              	.LFE281:
 937              		.section	.text.ind_wifi_connected,"ax",%progbits
 938              		.align	1
 939              		.global	ind_wifi_connected
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 943              		.fpu fpv4-sp-d16
 945              	ind_wifi_connected:
 946              	.LFB282:
 429:Core/Src/main.c **** }
 430:Core/Src/main.c ****   
 431:Core/Src/main.c **** void ind_wifi_connected()
 432:Core/Src/main.c **** {
 947              		.loc 1 432 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951 0000 08B5     		push	{r3, lr}
 952              	.LCFI13:
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 3, -8
 955              		.cfi_offset 14, -4
 433:Core/Src/main.c ****   print("\r\nwifi connected...\r\n");
 956              		.loc 1 433 0
 957 0002 0348     		ldr	r0, .L70
 958 0004 FFF7FEFF 		bl	print
 959              	.LVL90:
 434:Core/Src/main.c ****   wifi_state = wifi_state_connected;
 960              		.loc 1 434 0
 961 0008 0322     		movs	r2, #3
 962 000a 024B     		ldr	r3, .L70+4
 963 000c 1A70     		strb	r2, [r3]
 964 000e 08BD     		pop	{r3, pc}
 965              	.L71:
 966              		.align	2
 967              	.L70:
 968 0010 00000000 		.word	.LC35
 969 0014 00000000 		.word	wifi_state
 970              		.cfi_endproc
 971              	.LFE282:
 973              		.section	.text.ind_wifi_http_data_available,"ax",%progbits
 974              		.align	1
 975              		.global	ind_wifi_http_data_available
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv4-sp-d16
 981              	ind_wifi_http_data_available:
 982              	.LFB283:
 435:Core/Src/main.c **** }
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 28


 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** void ind_wifi_http_data_available(uint8_t * data_ptr, uint32_t message_size)
 438:Core/Src/main.c **** {
 983              		.loc 1 438 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL91:
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              	.LCFI14:
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 4, -16
 992              		.cfi_offset 5, -12
 993              		.cfi_offset 6, -8
 994              		.cfi_offset 14, -4
 995 0002 0546     		mov	r5, r0
 996 0004 0E46     		mov	r6, r1
 439:Core/Src/main.c ****   //User is adviced to copy the data immediately to a user buffer memory as the data will be flushe
 440:Core/Src/main.c ****   print("\r\nData Callback\r\n");
 997              		.loc 1 440 0
 998 0006 0848     		ldr	r0, .L74
 999              	.LVL92:
 1000 0008 FFF7FEFF 		bl	print
 1001              	.LVL93:
 441:Core/Src/main.c ****   memcpy(user_buffer, data_ptr, message_size);
 1002              		.loc 1 441 0
 1003 000c 074C     		ldr	r4, .L74+4
 1004 000e 3246     		mov	r2, r6
 1005 0010 2946     		mov	r1, r5
 1006 0012 2046     		mov	r0, r4
 1007 0014 FFF7FEFF 		bl	memcpy
 1008              	.LVL94:
 442:Core/Src/main.c ****   print((char*)user_buffer);
 1009              		.loc 1 442 0
 1010 0018 2046     		mov	r0, r4
 1011 001a FFF7FEFF 		bl	print
 1012              	.LVL95:
 443:Core/Src/main.c ****   print("\r\n");
 1013              		.loc 1 443 0
 1014 001e 0448     		ldr	r0, .L74+8
 1015 0020 FFF7FEFF 		bl	print
 1016              	.LVL96:
 1017 0024 70BD     		pop	{r4, r5, r6, pc}
 1018              	.LVL97:
 1019              	.L75:
 1020 0026 00BF     		.align	2
 1021              	.L74:
 1022 0028 00000000 		.word	.LC36
 1023 002c 00000000 		.word	user_buffer
 1024 0030 94010000 		.word	.LC8
 1025              		.cfi_endproc
 1026              	.LFE283:
 1028              		.global	baud_rate
 1029              		.comm	wifi_ip_addr,20,4
 1030              		.global	gcfg_key2
 1031              		.global	gcfg_key1
 1032              		.global	post_hostname
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 29


 1033              		.global	hostname
 1034              		.global	mode
 1035              		.global	seckey
 1036              		.global	ssid
 1037              		.comm	UART_MsgHandle,64,4
 1038              		.comm	config,56,4
 1039              		.comm	wifi_state,1,1
 1040              		.global	set_AP_config
 1041              		.comm	console_host,20,4
 1042              		.comm	console_psk,20,4
 1043              		.comm	console_ssid,40,4
 1044              		.global	console_count
 1045              		.comm	console_input,1,4
 1046              		.global	http_post_request
 1047              		.comm	http_char,1,1
 1048              		.comm	user_buffer,1024,4
 1049              		.comm	huart2,64,4
 1050              		.section	.bss.console_count,"aw",%nobits
 1051              		.set	.LANCHOR1,. + 0
 1054              	console_count:
 1055 0000 00       		.space	1
 1056              		.section	.bss.http_post_request,"aw",%nobits
 1057              		.set	.LANCHOR8,. + 0
 1060              	http_post_request:
 1061 0000 00       		.space	1
 1062              		.section	.bss.set_AP_config,"aw",%nobits
 1063              		.set	.LANCHOR0,. + 0
 1066              	set_AP_config:
 1067 0000 00       		.space	1
 1068              		.section	.data.baud_rate,"aw",%progbits
 1069              		.align	2
 1070              		.set	.LANCHOR6,. + 0
 1073              	baud_rate:
 1074 0000 00C20100 		.word	115200
 1075              		.section	.data.gcfg_key1,"aw",%progbits
 1076              		.align	2
 1079              	gcfg_key1:
 1080 0000 0C000000 		.word	.LC38
 1081              		.section	.data.gcfg_key2,"aw",%progbits
 1082              		.align	2
 1083              		.set	.LANCHOR7,. + 0
 1086              	gcfg_key2:
 1087 0000 00000000 		.word	.LC37
 1088              		.section	.data.hostname,"aw",%progbits
 1089              		.align	2
 1090              		.set	.LANCHOR3,. + 0
 1093              	hostname:
 1094 0000 2C000000 		.word	.LC40
 1095              		.section	.data.mode,"aw",%progbits
 1096              		.set	.LANCHOR2,. + 0
 1099              	mode:
 1100 0000 02       		.byte	2
 1101              		.section	.data.post_hostname,"aw",%progbits
 1102              		.align	2
 1103              		.set	.LANCHOR9,. + 0
 1106              	post_hostname:
 1107 0000 18000000 		.word	.LC39
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 30


 1108              		.section	.data.seckey,"aw",%progbits
 1109              		.align	2
 1110              		.set	.LANCHOR5,. + 0
 1113              	seckey:
 1114 0000 38000000 		.word	.LC41
 1115              		.section	.data.ssid,"aw",%progbits
 1116              		.align	2
 1117              		.set	.LANCHOR4,. + 0
 1120              	ssid:
 1121 0000 44000000 		.word	.LC42
 1122              		.section	.rodata.ind_wifi_connected.str1.4,"aMS",%progbits,1
 1123              		.align	2
 1124              	.LC35:
 1125 0000 0D0A7769 		.ascii	"\015\012wifi connected...\015\012\000"
 1125      66692063 
 1125      6F6E6E65 
 1125      63746564 
 1125      2E2E2E0D 
 1126              		.section	.rodata.ind_wifi_http_data_available.str1.4,"aMS",%progbits,1
 1127              		.align	2
 1128              	.LC36:
 1129 0000 0D0A4461 		.ascii	"\015\012Data Callback\015\012\000"
 1129      74612043 
 1129      616C6C62 
 1129      61636B0D 
 1129      0A00
 1130              		.section	.rodata.ind_wifi_on.str1.4,"aMS",%progbits,1
 1131              		.align	2
 1132              	.LC34:
 1133 0000 0D0A0A77 		.ascii	"\015\012\012wifi started and ready...\015\012\000"
 1133      69666920 
 1133      73746172 
 1133      74656420 
 1133      616E6420 
 1134              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1135              		.align	2
 1136              	.LC20:
 1137 0000 0D0A4572 		.ascii	"\015\012Error in AP Settings\000"
 1137      726F7220 
 1137      696E2041 
 1137      50205365 
 1137      7474696E 
 1138 0017 00       		.space	1
 1139              	.LC21:
 1140 0018 0D0A0A49 		.ascii	"\015\012\012Initializing the wifi module...\000"
 1140      6E697469 
 1140      616C697A 
 1140      696E6720 
 1140      74686520 
 1141 003b 00       		.space	1
 1142              	.LC22:
 1143 003c 4572726F 		.ascii	"Error in Config\000"
 1143      7220696E 
 1143      20436F6E 
 1143      66696700 
 1144              	.LC23:
 1145 004c 0D0A203E 		.ascii	"\015\012 >>connecting to AP...\015\012\000"
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 31


 1145      3E636F6E 
 1145      6E656374 
 1145      696E6720 
 1145      746F2041 
 1146 0067 00       		.space	1
 1147              	.LC24:
 1148 0068 0D0A203E 		.ascii	"\015\012 >>connected...\015\012\000"
 1148      3E636F6E 
 1148      6E656374 
 1148      65642E2E 
 1148      2E0D0A00 
 1149              	.LC25:
 1150 007c 0D0A3E3E 		.ascii	"\015\012>>WiFi_HTTPGET\015\012\000"
 1150      57694669 
 1150      5F485454 
 1150      50474554 
 1150      0D0A00
 1151 008f 00       		.space	1
 1152              	.LC26:
 1153 0090 2F676574 		.ascii	"/get\000"
 1153      00
 1154 0095 000000   		.space	3
 1155              	.LC27:
 1156 0098 0D0A4854 		.ascii	"\015\012HTTP GET OK\015\012\000"
 1156      54502047 
 1156      4554204F 
 1156      4B0D0A00 
 1157              	.LC28:
 1158 00a8 0D0A4854 		.ascii	"\015\012HTTP GET Error\015\012\000"
 1158      54502047 
 1158      45542045 
 1158      72726F72 
 1158      0D0A00
 1159 00bb 00       		.space	1
 1160              	.LC29:
 1161 00bc 0D0A3E3E 		.ascii	"\015\012>>Posting data to posttestserver.com..\015\012"
 1161      506F7374 
 1161      696E6720 
 1161      64617461 
 1161      20746F20 
 1162 00e6 00       		.ascii	"\000"
 1163 00e7 00       		.space	1
 1164              	.LC30:
 1165 00e8 2F706F73 		.ascii	"/post.php/name=demo&email=mymail&subject=subj&body="
 1165      742E7068 
 1165      702F6E61 
 1165      6D653D64 
 1165      656D6F26 
 1166 011b 6D657373 		.ascii	"message\000"
 1166      61676500 
 1167 0123 00       		.space	1
 1168              	.LC31:
 1169 0124 0D0A4854 		.ascii	"\015\012HTTP POST OK\015\012\000"
 1169      54502050 
 1169      4F535420 
 1169      4F4B0D0A 
 1169      00
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 32


 1170 0135 000000   		.space	3
 1171              	.LC32:
 1172 0138 0D0A4854 		.ascii	"\015\012HTTP POST Error\015\012\000"
 1172      54502050 
 1172      4F535420 
 1172      4572726F 
 1172      720D0A00 
 1173              	.LC33:
 1174 014c 2E00     		.ascii	".\000"
 1175              		.section	.rodata.str1.4,"aMS",%progbits,1
 1176              		.align	2
 1177              	.LC37:
 1178 0000 6E765F6D 		.ascii	"nv_model\000"
 1178      6F64656C 
 1178      00
 1179 0009 000000   		.space	3
 1180              	.LC38:
 1181 000c 69705F69 		.ascii	"ip_ipaddr\000"
 1181      70616464 
 1181      7200
 1182 0016 0000     		.space	2
 1183              	.LC39:
 1184 0018 706F7374 		.ascii	"posttestserver.com\000"
 1184      74657374 
 1184      73657276 
 1184      65722E63 
 1184      6F6D00
 1185 002b 00       		.space	1
 1186              	.LC40:
 1187 002c 68747470 		.ascii	"httpbin.org\000"
 1187      62696E2E 
 1187      6F726700 
 1188              	.LC41:
 1189 0038 53544D64 		.ascii	"STMdemoPWD\000"
 1189      656D6F50 
 1189      574400
 1190 0043 00       		.space	1
 1191              	.LC42:
 1192 0044 53544D00 		.ascii	"STM\000"
 1193              		.section	.rodata.wifi_get_AP_settings.str1.4,"aMS",%progbits,1
 1194              		.align	2
 1195              	.LC0:
 1196 0000 0D0A0A2F 		.ascii	"\015\012\012/**************************************"
 1196      2A2A2A2A 
 1196      2A2A2A2A 
 1196      2A2A2A2A 
 1196      2A2A2A2A 
 1197 002a 2A2A2A2A 		.ascii	"******************\012\000"
 1197      2A2A2A2A 
 1197      2A2A2A2A 
 1197      2A2A2A2A 
 1197      2A2A0A00 
 1198 003e 0000     		.space	2
 1199              	.LC1:
 1200 0040 0D202A20 		.ascii	"\015 *                                             "
 1200      20202020 
 1200      20202020 
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 33


 1200      20202020 
 1200      20202020 
 1201 0070 20202020 		.ascii	"         *\012\000"
 1201      20202020 
 1201      202A0A00 
 1202              	.LC2:
 1203 007c 0D202A20 		.ascii	"\015 * X-CUBE-WIFI1 Expansion Software v3.1.1      "
 1203      582D4355 
 1203      42452D57 
 1203      49464931 
 1203      20457870 
 1204 00ac 20202020 		.ascii	"         *\012\000"
 1204      20202020 
 1204      202A0A00 
 1205              	.LC3:
 1206 00b8 0D202A20 		.ascii	"\015 * X-NUCLEO-IDW0xx1 Wi-Fi Mini-AP Configuration"
 1206      582D4E55 
 1206      434C454F 
 1206      2D494457 
 1206      30787831 
 1207 00e8 2E202020 		.ascii	".        *\012\000"
 1207      20202020 
 1207      202A0A00 
 1208              	.LC4:
 1209 00f4 0D202A20 		.ascii	"\015 * HTTP-Request Example                        "
 1209      48545450 
 1209      2D526571 
 1209      75657374 
 1209      20457861 
 1210 0124 20202020 		.ascii	"         *\012\000"
 1210      20202020 
 1210      202A0A00 
 1211              	.LC5:
 1212 0130 0D202A2A 		.ascii	"\015 **********************************************"
 1212      2A2A2A2A 
 1212      2A2A2A2A 
 1212      2A2A2A2A 
 1212      2A2A2A2A 
 1213 0160 2A2A2A2A 		.ascii	"*********/\012\000"
 1213      2A2A2A2A 
 1213      2A2F0A00 
 1214              	.LC6:
 1215 016c 0D0A446F 		.ascii	"\015\012Do you want to setup SSID?(y/n):\000"
 1215      20796F75 
 1215      2077616E 
 1215      7420746F 
 1215      20736574 
 1216 018f 00       		.space	1
 1217              	.LC7:
 1218 0190 257300   		.ascii	"%s\000"
 1219 0193 00       		.space	1
 1220              	.LC8:
 1221 0194 0D0A00   		.ascii	"\015\012\000"
 1222 0197 00       		.space	1
 1223              	.LC9:
 1224 0198 456E7465 		.ascii	"Enter the SSID:\000"
 1224      72207468 
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 34


 1224      65205353 
 1224      49443A00 
 1225              	.LC10:
 1226 01a8 45786365 		.ascii	"Exceeded number of ssid characters permitted\000"
 1226      65646564 
 1226      206E756D 
 1226      62657220 
 1226      6F662073 
 1227 01d5 000000   		.space	3
 1228              	.LC11:
 1229 01d8 456E7465 		.ascii	"Enter the password:\000"
 1229      72207468 
 1229      65207061 
 1229      7373776F 
 1229      72643A00 
 1230              	.LC12:
 1231 01ec 45786365 		.ascii	"Exceeded number of psk characters permitted\000"
 1231      65646564 
 1231      206E756D 
 1231      62657220 
 1231      6F662070 
 1232              	.LC13:
 1233 0218 456E7465 		.ascii	"Enter the encryption mode(0:Open, 1:WEP, 2:WPA2/WPA"
 1233      72207468 
 1233      6520656E 
 1233      63727970 
 1233      74696F6E 
 1234 024b 322D5065 		.ascii	"2-Personal):\000"
 1234      72736F6E 
 1234      616C293A 
 1234      00
 1235              	.LC14:
 1236 0258 0D0A5772 		.ascii	"\015\012Wrong Entry. Priv Mode is not compatible\012"
 1236      6F6E6720 
 1236      456E7472 
 1236      792E2050 
 1236      72697620 
 1237 0283 00       		.ascii	"\000"
 1238              	.LC15:
 1239 0284 0D0A0A4D 		.ascii	"\015\012\012Module will connect with default settin"
 1239      6F64756C 
 1239      65207769 
 1239      6C6C2063 
 1239      6F6E6E65 
 1240 02ae 67732E00 		.ascii	"gs.\000"
 1241 02b2 0000     		.space	2
 1242              	.LC16:
 1243 02b4 0D0A2F2A 		.ascii	"\015\012/******************************************"
 1243      2A2A2A2A 
 1243      2A2A2A2A 
 1243      2A2A2A2A 
 1243      2A2A2A2A 
 1244 02e1 2A2A2A2A 		.ascii	"*******************\015\012\000"
 1244      2A2A2A2A 
 1244      2A2A2A2A 
 1244      2A2A2A2A 
 1244      2A2A2A0D 
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 35


 1245 02f7 00       		.space	1
 1246              	.LC17:
 1247 02f8 0D0A202A 		.ascii	"\015\012 * Configuration Complete                  "
 1247      20436F6E 
 1247      66696775 
 1247      72617469 
 1247      6F6E2043 
 1248 0325 20202020 		.ascii	"                   \015\012\000"
 1248      20202020 
 1248      20202020 
 1248      20202020 
 1248      2020200D 
 1249 033b 00       		.space	1
 1250              	.LC18:
 1251 033c 0D0A202A 		.ascii	"\015\012 * Please make sure a Server is running at "
 1251      20506C65 
 1251      61736520 
 1251      6D616B65 
 1251      20737572 
 1252 0369 67697665 		.ascii	"given hostname     \015\012\000"
 1252      6E20686F 
 1252      73746E61 
 1252      6D652020 
 1252      2020200D 
 1253 037f 00       		.space	1
 1254              	.LC19:
 1255 0380 0D0A202A 		.ascii	"\015\012 ******************************************"
 1255      2A2A2A2A 
 1255      2A2A2A2A 
 1255      2A2A2A2A 
 1255      2A2A2A2A 
 1256 03ad 2A2A2A2A 		.ascii	"*******************\015\012\000"
 1256      2A2A2A2A 
 1256      2A2A2A2A 
 1256      2A2A2A2A 
 1256      2A2A2A0D 
 1257              		.text
 1258              	.Letext0:
 1259              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1260              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1261              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1262              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1263              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1264              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1265              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1266              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1267              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1268              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1269              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1270              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1271              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1272              		.file 15 "Core/Inc/main.h"
 1273              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1274              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1275              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-ea
 1276              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1277              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 36


 1278              		.file 21 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_interface.h"
 1279              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1280              		.file 23 "Middlewares/ST/STM32_SPWF0xSy/Utils/event_buffer.h"
 1281              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1282              		.file 25 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_module.h"
 1283              		.file 26 "Middlewares/ST/STM32_SPWF0xSy/Utils/wifi_globals.h"
 1284              		.file 27 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 1285              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1286              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
D:\cygwin64\tmp\ccsyqgcK.s:18     .text.MX_GPIO_Init:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
D:\cygwin64\tmp\ccsyqgcK.s:57     .text.MX_GPIO_Init:00000020 $d
D:\cygwin64\tmp\ccsyqgcK.s:62     .text.MX_USART2_UART_Init:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:68     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
D:\cygwin64\tmp\ccsyqgcK.s:115    .text.MX_USART2_UART_Init:0000002c $d
                            *COM*:00000040 huart2
D:\cygwin64\tmp\ccsyqgcK.s:121    .text.SystemClock_Config:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:128    .text.SystemClock_Config:00000000 SystemClock_Config
D:\cygwin64\tmp\ccsyqgcK.s:237    .text.SystemClock_Config:00000088 $d
D:\cygwin64\tmp\ccsyqgcK.s:243    .text.print:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:250    .text.print:00000000 print
D:\cygwin64\tmp\ccsyqgcK.s:287    .text.print:00000024 $d
D:\cygwin64\tmp\ccsyqgcK.s:292    .text.wifi_get_AP_settings:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:299    .text.wifi_get_AP_settings:00000000 wifi_get_AP_settings
D:\cygwin64\tmp\ccsyqgcK.s:569    .text.wifi_get_AP_settings:00000188 $d
                            *COM*:00000001 console_input
                            *COM*:00000028 console_ssid
                            *COM*:00000014 console_psk
                            *COM*:00000014 console_host
D:\cygwin64\tmp\ccsyqgcK.s:604    .text.main:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:611    .text.main:00000000 main
D:\cygwin64\tmp\ccsyqgcK.s:719    .text.main:00000080 $d
D:\cygwin64\tmp\ccsyqgcK.s:727    .text.main:000000a0 $t
D:\cygwin64\tmp\ccsyqgcK.s:871    .text.main:0000015c $d
                            *COM*:00000038 config
                            *COM*:00000001 wifi_state
                            *COM*:00000014 wifi_ip_addr
                            *COM*:00000400 user_buffer
D:\cygwin64\tmp\ccsyqgcK.s:902    .text.ind_wifi_on:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:909    .text.ind_wifi_on:00000000 ind_wifi_on
D:\cygwin64\tmp\ccsyqgcK.s:932    .text.ind_wifi_on:00000010 $d
D:\cygwin64\tmp\ccsyqgcK.s:938    .text.ind_wifi_connected:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:945    .text.ind_wifi_connected:00000000 ind_wifi_connected
D:\cygwin64\tmp\ccsyqgcK.s:968    .text.ind_wifi_connected:00000010 $d
D:\cygwin64\tmp\ccsyqgcK.s:974    .text.ind_wifi_http_data_available:00000000 $t
D:\cygwin64\tmp\ccsyqgcK.s:981    .text.ind_wifi_http_data_available:00000000 ind_wifi_http_data_available
D:\cygwin64\tmp\ccsyqgcK.s:1022   .text.ind_wifi_http_data_available:00000028 $d
D:\cygwin64\tmp\ccsyqgcK.s:1073   .data.baud_rate:00000000 baud_rate
D:\cygwin64\tmp\ccsyqgcK.s:1086   .data.gcfg_key2:00000000 gcfg_key2
D:\cygwin64\tmp\ccsyqgcK.s:1079   .data.gcfg_key1:00000000 gcfg_key1
D:\cygwin64\tmp\ccsyqgcK.s:1106   .data.post_hostname:00000000 post_hostname
D:\cygwin64\tmp\ccsyqgcK.s:1093   .data.hostname:00000000 hostname
D:\cygwin64\tmp\ccsyqgcK.s:1099   .data.mode:00000000 mode
D:\cygwin64\tmp\ccsyqgcK.s:1113   .data.seckey:00000000 seckey
D:\cygwin64\tmp\ccsyqgcK.s:1120   .data.ssid:00000000 ssid
                            *COM*:00000040 UART_MsgHandle
D:\cygwin64\tmp\ccsyqgcK.s:1066   .bss.set_AP_config:00000000 set_AP_config
D:\cygwin64\tmp\ccsyqgcK.s:1054   .bss.console_count:00000000 console_count
D:\cygwin64\tmp\ccsyqgcK.s:1060   .bss.http_post_request:00000000 http_post_request
                            *COM*:00000001 http_char
D:\cygwin64\tmp\ccsyqgcK.s:1055   .bss.console_count:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1061   .bss.http_post_request:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1067   .bss.set_AP_config:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1069   .data.baud_rate:00000000 $d
ARM GAS  D:\cygwin64\tmp\ccsyqgcK.s 			page 38


D:\cygwin64\tmp\ccsyqgcK.s:1076   .data.gcfg_key1:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1082   .data.gcfg_key2:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1089   .data.hostname:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1102   .data.post_hostname:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1109   .data.seckey:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1116   .data.ssid:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1123   .rodata.ind_wifi_connected.str1.4:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1127   .rodata.ind_wifi_http_data_available.str1.4:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1131   .rodata.ind_wifi_on.str1.4:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1135   .rodata.main.str1.4:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1176   .rodata.str1.4:00000000 $d
D:\cygwin64\tmp\ccsyqgcK.s:1194   .rodata.wifi_get_AP_settings.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
strncpy
HAL_UART_Transmit
fflush
scanf
strlen
memcpy
_impure_ptr
HAL_Init
UART_Configuration
wifi_init
wifi_connect
wifi_get_IP_address
GET_Configuration_Value
wifi_http_get
wifi_http_post
HAL_Delay
