ARM GAS  /tmp/cc2jInvs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB280:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c ****   /**
   2:Core/Src/main.c ****   ******************************************************************************
   3:Core/Src/main.c ****   * @file    main.c
   4:Core/Src/main.c ****   * @author  Central LAB
   5:Core/Src/main.c ****   * @version V2.1.0
   6:Core/Src/main.c ****   * @date    17-May-2015
   7:Core/Src/main.c ****   * @brief   Main program body
   8:Core/Src/main.c ****   ******************************************************************************
   9:Core/Src/main.c ****   * @attention
  10:Core/Src/main.c ****   *
  11:Core/Src/main.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * Redistribution and use in source and binary forms, with or without modification,
  14:Core/Src/main.c ****   * are permitted provided that the following conditions are met:
  15:Core/Src/main.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  16:Core/Src/main.c ****   *      this list of conditions and the following disclaimer.
  17:Core/Src/main.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  18:Core/Src/main.c ****   *      this list of conditions and the following disclaimer in the documentation
  19:Core/Src/main.c ****   *      and/or other materials provided with the distribution.
  20:Core/Src/main.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  21:Core/Src/main.c ****   *      may be used to endorse or promote products derived from this software
  22:Core/Src/main.c ****   *      without specific prior written permission.
  23:Core/Src/main.c ****   *
  24:Core/Src/main.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Core/Src/main.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Core/Src/main.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  27:Core/Src/main.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  28:Core/Src/main.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  29:Core/Src/main.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  30:Core/Src/main.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cc2jInvs.s 			page 2


  31:Core/Src/main.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  32:Core/Src/main.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  33:Core/Src/main.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:Core/Src/main.c ****   *
  35:Core/Src/main.c ****   ******************************************************************************
  36:Core/Src/main.c ****   */
  37:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  38:Core/Src/main.c **** #include "main.h"
  39:Core/Src/main.c **** #include "stdio.h"
  40:Core/Src/main.c **** #include "string.h"
  41:Core/Src/main.c **** #include "wifi_module.h"
  42:Core/Src/main.c **** #include "wifi_globals.h"
  43:Core/Src/main.c **** #include "wifi_interface.h"
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /** @defgroup WIFI_Examples
  46:Core/Src/main.c ****   * @{
  47:Core/Src/main.c ****   */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /** @defgroup WIFI_Example_Server_Socket
  50:Core/Src/main.c ****   * @{
  51:Core/Src/main.c ****   */
  52:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  53:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  54:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c ****   
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** char print_msg_buff[512];
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private functions ---------------------------------------------------------*/                   
  61:Core/Src/main.c **** void 	SystemClock_Config(void);
  62:Core/Src/main.c **** void    UART_Msg_Gpio_Init(void);
  63:Core/Src/main.c **** void    USART_PRINT_MSG_Configuration(UART_HandleTypeDef *UART_MsgHandle, uint32_t baud_rate);
  64:Core/Src/main.c **** WiFi_Status_t 	wifi_get_AP_settings(void);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private Declarartion ------------------------------------------------------*/
  67:Core/Src/main.c **** wifi_state_t wifi_state;
  68:Core/Src/main.c **** wifi_config config;
  69:Core/Src/main.c **** UART_HandleTypeDef UART_MsgHandle;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** uint8_t console_input[1], console_count=0;
  72:Core/Src/main.c **** char console_ssid[40];
  73:Core/Src/main.c **** char console_psk[20];
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** char * ssid = "SPWF04SA";
  76:Core/Src/main.c **** char * seckey = "123456789";
  77:Core/Src/main.c **** uint8_t channel_num = 6;
  78:Core/Src/main.c **** WiFi_Priv_Mode mode = WPA_Personal;     
  79:Core/Src/main.c **** char echo[64];
  80:Core/Src/main.c **** char ip_addr[16];
  81:Core/Src/main.c **** char mac_addr[17];
  82:Core/Src/main.c **** uint16_t len;
  83:Core/Src/main.c **** uint8_t sock_id, server_id;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** char * gcfg_key1 = "ip_ipaddr";
  86:Core/Src/main.c **** char * gcfg_key2 = "nv_model";
  87:Core/Src/main.c **** uint8_t socket_id;
ARM GAS  /tmp/cc2jInvs.s 			page 3


  88:Core/Src/main.c **** char wifi_ip_addr[20];
  89:Core/Src/main.c **** uint16_t len;
  90:Core/Src/main.c **** uint32_t baud_rate = 115200;
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****  /**
  93:Core/Src/main.c ****   * @brief  Main program
  94:Core/Src/main.c ****   * @param  None
  95:Core/Src/main.c ****   * @retval None
  96:Core/Src/main.c ****   */
  97:Core/Src/main.c **** int main(void)
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 100:Core/Src/main.c ****   char *protocol = "t";
 101:Core/Src/main.c ****   uint32_t portnumber = 32000;
 102:Core/Src/main.c ****   
 103:Core/Src/main.c ****   __GPIOA_CLK_ENABLE();
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock to 64 MHz */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* configure the timers  */
 110:Core/Src/main.c ****   Timer_Config( );
 111:Core/Src/main.c ****   
 112:Core/Src/main.c **** #ifdef USART_PRINT_MSG
 113:Core/Src/main.c ****   UART_Msg_Gpio_Init();
 114:Core/Src/main.c ****   USART_PRINT_MSG_Configuration(&UART_MsgHandle,115200);
 115:Core/Src/main.c ****   Set_UartMsgHandle(&UART_MsgHandle);
 116:Core/Src/main.c **** #endif  
 117:Core/Src/main.c ****   
 118:Core/Src/main.c ****   status = wifi_get_AP_settings();
 119:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     printf("\r\nError in AP Settings");
 122:Core/Src/main.c ****     return 0;
 123:Core/Src/main.c ****   }
 124:Core/Src/main.c ****   
 125:Core/Src/main.c ****   config.power=wifi_active;
 126:Core/Src/main.c ****   config.power_level=high;
 127:Core/Src/main.c ****   config.dhcp=on;//use DHCP IP address  
 128:Core/Src/main.c ****   config.mcu_baud_rate = baud_rate;
 129:Core/Src/main.c ****   wifi_state = wifi_state_idle;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   UART_Configuration(baud_rate); 
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   printf("\r\nInitializing the wifi module...\r\n");
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Init the wi-fi module */  
 136:Core/Src/main.c ****   status = wifi_init(&config);
 137:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     printf("Error in Config");
 140:Core/Src/main.c ****     return 0;
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c ****   
 143:Core/Src/main.c ****   printf("\r\nInitializing complete.\r\n");
 144:Core/Src/main.c ****   
ARM GAS  /tmp/cc2jInvs.s 			page 4


 145:Core/Src/main.c ****   while (1)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     switch (wifi_state) 
 148:Core/Src/main.c ****         {
 149:Core/Src/main.c ****       case wifi_state_reset:
 150:Core/Src/main.c ****       break;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****       case wifi_state_ready:
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****         printf("\r\n >>setting up miniAP mode...\r\n");
 155:Core/Src/main.c ****         
 156:Core/Src/main.c ****         wifi_ap_start((uint8_t *)console_ssid, console_psk, channel_num, mode);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****         //wifi_connect(ssid,seckey, mode);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 161:Core/Src/main.c ****       break;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****       case wifi_state_connected:
 164:Core/Src/main.c ****         printf("\r\n >>connected...\r\n");      
 165:Core/Src/main.c ****         
 166:Core/Src/main.c ****         WiFi_Status_t status;
 167:Core/Src/main.c ****         
 168:Core/Src/main.c ****         status = wifi_get_IP_address((uint8_t*)wifi_ip_addr);
 169:Core/Src/main.c ****         printf("\r\n>>IP address is %s\r\n", wifi_ip_addr);
 170:Core/Src/main.c ****         
 171:Core/Src/main.c ****         memset(wifi_ip_addr, 0x00, 20);
 172:Core/Src/main.c ****         
 173:Core/Src/main.c ****         status = wifi_get_MAC_address((uint8_t*)wifi_ip_addr);
 174:Core/Src/main.c ****         printf("\r\n>>mac addr is %s\r\n", wifi_ip_addr);
 175:Core/Src/main.c ****         
 176:Core/Src/main.c ****         wifi_state = wifi_state_socket;
 177:Core/Src/main.c ****       break;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****       case wifi_state_disconnected:
 180:Core/Src/main.c ****         printf("\r\n >>disconnected..\r\n");
 181:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 182:Core/Src/main.c ****       break;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****       case wifi_state_socket:
 185:Core/Src/main.c ****       printf("\r\n >>WiFi server socket opening..\r\n");
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****       /* Read Write Socket data */        
 188:Core/Src/main.c ****       #ifdef SPWF04
 189:Core/Src/main.c ****         status = wifi_socket_server_open(portnumber, (uint8_t *)protocol, &server_id);
 190:Core/Src/main.c ****       #else
 191:Core/Src/main.c ****         status = wifi_socket_server_open(portnumber, (uint8_t *)protocol);
 192:Core/Src/main.c ****       #endif
 193:Core/Src/main.c ****       if(status == WiFi_MODULE_SUCCESS)
 194:Core/Src/main.c ****       {
 195:Core/Src/main.c ****         printf("\r\n >>Server Socket Open OK \r\n");          
 196:Core/Src/main.c ****       }
 197:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****       break;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****     case wifi_state_socket_write:
ARM GAS  /tmp/cc2jInvs.s 			page 5


 202:Core/Src/main.c ****         printf("\r\n >>Writing data to client\r\n");
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****         len = strlen(echo);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****         /* Read Write Socket data */        
 207:Core/Src/main.c ****         #ifdef SPWF04
 208:Core/Src/main.c ****           status = wifi_socket_server_write(server_id, sock_id, len, echo);
 209:Core/Src/main.c ****         #else
 210:Core/Src/main.c ****           status = wifi_socket_server_write(len, echo);
 211:Core/Src/main.c ****         #endif
 212:Core/Src/main.c ****         if(status == WiFi_MODULE_SUCCESS)
 213:Core/Src/main.c ****         {
 214:Core/Src/main.c ****           printf("\r\n >>Server Socket Write OK \r\n");  
 215:Core/Src/main.c ****         }
 216:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****         break;
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****     case wifi_state_idle:
 221:Core/Src/main.c ****       printf(".");
 222:Core/Src/main.c ****       fflush(stdout);
 223:Core/Src/main.c ****       HAL_Delay(500);
 224:Core/Src/main.c ****       break;
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****     default:
 227:Core/Src/main.c ****       break;
 228:Core/Src/main.c ****     }    
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief  System Clock Configuration
 234:Core/Src/main.c ****   *         The system Clock is configured as follow : 
 235:Core/Src/main.c ****   *            System Clock source            = PLL (HSI)
 236:Core/Src/main.c ****   *            SYSCLK(Hz)                     = 64000000
 237:Core/Src/main.c ****   *            HCLK(Hz)                       = 64000000
 238:Core/Src/main.c ****   *            AHB Prescaler                  = 1
 239:Core/Src/main.c ****   *            APB1 Prescaler                 = 2
 240:Core/Src/main.c ****   *            APB2 Prescaler                 = 1
 241:Core/Src/main.c ****   *            PLLMUL                         = 16
 242:Core/Src/main.c ****   *            Flash Latency(WS)              = 2
 243:Core/Src/main.c ****   * @param  None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** #ifdef USE_STM32F1xx_NUCLEO
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** void SystemClock_Config(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c ****   RCC_ClkInitTypeDef clkinitstruct = {0};
 252:Core/Src/main.c ****   RCC_OscInitTypeDef oscinitstruct = {0};
 253:Core/Src/main.c ****   
 254:Core/Src/main.c ****   /* Configure PLL ------------------------------------------------------*/
 255:Core/Src/main.c ****   /* PLL configuration: PLLCLK = (HSI / 2) * PLLMUL = (8 / 2) * 16 = 64 MHz */
 256:Core/Src/main.c ****   /* PREDIV1 configuration: PREDIV1CLK = PLLCLK / HSEPredivValue = 64 / 1 = 64 MHz */
 257:Core/Src/main.c ****   /* Enable HSI and activate PLL with HSi_DIV2 as source */
 258:Core/Src/main.c ****   oscinitstruct.OscillatorType  = RCC_OSCILLATORTYPE_HSE;
ARM GAS  /tmp/cc2jInvs.s 			page 6


 259:Core/Src/main.c ****   oscinitstruct.HSEState        = RCC_HSE_ON;
 260:Core/Src/main.c ****   oscinitstruct.LSEState        = RCC_LSE_OFF;
 261:Core/Src/main.c ****   oscinitstruct.HSIState        = RCC_HSI_OFF;
 262:Core/Src/main.c ****   oscinitstruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 263:Core/Src/main.c ****   oscinitstruct.HSEPredivValue    = RCC_HSE_PREDIV_DIV1;
 264:Core/Src/main.c ****   oscinitstruct.PLL.PLLState    = RCC_PLL_ON;
 265:Core/Src/main.c ****   oscinitstruct.PLL.PLLSource   = RCC_PLLSOURCE_HSE;
 266:Core/Src/main.c ****   oscinitstruct.PLL.PLLMUL      = RCC_PLL_MUL9;
 267:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&oscinitstruct)!= HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     /* Initialization Error */
 270:Core/Src/main.c ****     while(1); 
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
 274:Core/Src/main.c ****      clocks dividers */
 275:Core/Src/main.c ****   clkinitstruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_
 276:Core/Src/main.c ****   clkinitstruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 277:Core/Src/main.c ****   clkinitstruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 278:Core/Src/main.c ****   clkinitstruct.APB2CLKDivider = RCC_HCLK_DIV1;
 279:Core/Src/main.c ****   clkinitstruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 280:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&clkinitstruct, FLASH_LATENCY_2)!= HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     /* Initialization Error */
 283:Core/Src/main.c ****     while(1); 
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c **** }
 286:Core/Src/main.c **** #endif
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** #ifdef USE_STM32F4XX_NUCLEO
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** void SystemClock_Config(void)
 291:Core/Src/main.c **** {
  29              		.loc 1 291 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 95B0     		sub	sp, sp, #84
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 96
 292:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  42              		.loc 1 292 3 view .LVU1
 293:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  43              		.loc 1 293 3 view .LVU2
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* Enable Power Control clock */
 296:Core/Src/main.c ****   __PWR_CLK_ENABLE();
  44              		.loc 1 296 3 view .LVU3
  45              	.LBB2:
  46              		.loc 1 296 3 view .LVU4
  47 0004 0024     		movs	r4, #0
ARM GAS  /tmp/cc2jInvs.s 			page 7


  48 0006 0194     		str	r4, [sp, #4]
  49              		.loc 1 296 3 view .LVU5
  50 0008 1B4B     		ldr	r3, .L3
  51 000a 1A6C     		ldr	r2, [r3, #64]
  52 000c 42F08052 		orr	r2, r2, #268435456
  53 0010 1A64     		str	r2, [r3, #64]
  54              		.loc 1 296 3 view .LVU6
  55 0012 1B6C     		ldr	r3, [r3, #64]
  56 0014 03F08053 		and	r3, r3, #268435456
  57 0018 0193     		str	r3, [sp, #4]
  58              		.loc 1 296 3 view .LVU7
  59 001a 019B     		ldr	r3, [sp, #4]
  60              	.LBE2:
  61              		.loc 1 296 3 view .LVU8
 297:Core/Src/main.c ****   
 298:Core/Src/main.c ****   /* The voltage scaling allows optimizing the power consumption when the device is 
 299:Core/Src/main.c ****      clocked below the maximum system frequency, to update the voltage scaling value 
 300:Core/Src/main.c ****      regarding system frequency refer to product datasheet.  */
 301:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  62              		.loc 1 301 3 view .LVU9
  63              	.LBB3:
  64              		.loc 1 301 3 view .LVU10
  65 001c 0294     		str	r4, [sp, #8]
  66              		.loc 1 301 3 view .LVU11
  67 001e 174A     		ldr	r2, .L3+4
  68 0020 1368     		ldr	r3, [r2]
  69 0022 23F44043 		bic	r3, r3, #49152
  70 0026 43F40043 		orr	r3, r3, #32768
  71 002a 1360     		str	r3, [r2]
  72              		.loc 1 301 3 view .LVU12
  73 002c 1368     		ldr	r3, [r2]
  74 002e 03F44043 		and	r3, r3, #49152
  75 0032 0293     		str	r3, [sp, #8]
  76              		.loc 1 301 3 view .LVU13
  77 0034 029B     		ldr	r3, [sp, #8]
  78              	.LBE3:
  79              		.loc 1 301 3 view .LVU14
 302:Core/Src/main.c ****   
 303:Core/Src/main.c ****   /* Enable HSI Oscillator and activate PLL with HSI as source */
 304:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  80              		.loc 1 304 3 view .LVU15
  81              		.loc 1 304 36 is_stmt 0 view .LVU16
  82 0036 0225     		movs	r5, #2
  83 0038 0395     		str	r5, [sp, #12]
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  84              		.loc 1 305 3 is_stmt 1 view .LVU17
  85              		.loc 1 305 30 is_stmt 0 view .LVU18
  86 003a 0123     		movs	r3, #1
  87 003c 0693     		str	r3, [sp, #24]
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 0x10;
  88              		.loc 1 306 3 is_stmt 1 view .LVU19
  89              		.loc 1 306 41 is_stmt 0 view .LVU20
  90 003e 1023     		movs	r3, #16
  91 0040 0793     		str	r3, [sp, #28]
 307:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  92              		.loc 1 307 3 is_stmt 1 view .LVU21
  93              		.loc 1 307 34 is_stmt 0 view .LVU22
ARM GAS  /tmp/cc2jInvs.s 			page 8


  94 0042 0995     		str	r5, [sp, #36]
 308:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  95              		.loc 1 308 3 is_stmt 1 view .LVU23
  96              		.loc 1 308 35 is_stmt 0 view .LVU24
  97 0044 0A94     		str	r4, [sp, #40]
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
  98              		.loc 1 309 3 is_stmt 1 view .LVU25
  99              		.loc 1 309 30 is_stmt 0 view .LVU26
 100 0046 0B93     		str	r3, [sp, #44]
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 101              		.loc 1 310 3 is_stmt 1 view .LVU27
 102              		.loc 1 310 30 is_stmt 0 view .LVU28
 103 0048 4FF4A873 		mov	r3, #336
 104 004c 0C93     		str	r3, [sp, #48]
 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 105              		.loc 1 311 3 is_stmt 1 view .LVU29
 106              		.loc 1 311 30 is_stmt 0 view .LVU30
 107 004e 0423     		movs	r3, #4
 108 0050 0D93     		str	r3, [sp, #52]
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 109              		.loc 1 312 3 is_stmt 1 view .LVU31
 110              		.loc 1 312 30 is_stmt 0 view .LVU32
 111 0052 0723     		movs	r3, #7
 112 0054 0E93     		str	r3, [sp, #56]
 313:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 113              		.loc 1 313 3 is_stmt 1 view .LVU33
 114 0056 03A8     		add	r0, sp, #12
 115 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 116              	.LVL0:
 314:Core/Src/main.c ****    
 315:Core/Src/main.c ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
 316:Core/Src/main.c ****      clocks dividers */
 317:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 117              		.loc 1 317 3 view .LVU34
 118              		.loc 1 317 31 is_stmt 0 view .LVU35
 119 005c 0F23     		movs	r3, #15
 120 005e 0F93     		str	r3, [sp, #60]
 318:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 121              		.loc 1 318 3 is_stmt 1 view .LVU36
 122              		.loc 1 318 34 is_stmt 0 view .LVU37
 123 0060 1095     		str	r5, [sp, #64]
 319:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 124              		.loc 1 319 3 is_stmt 1 view .LVU38
 125              		.loc 1 319 35 is_stmt 0 view .LVU39
 126 0062 1194     		str	r4, [sp, #68]
 320:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 127              		.loc 1 320 3 is_stmt 1 view .LVU40
 128              		.loc 1 320 36 is_stmt 0 view .LVU41
 129 0064 4FF48053 		mov	r3, #4096
 130 0068 1293     		str	r3, [sp, #72]
 321:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;  
 131              		.loc 1 321 3 is_stmt 1 view .LVU42
 132              		.loc 1 321 36 is_stmt 0 view .LVU43
 133 006a 1394     		str	r4, [sp, #76]
 322:Core/Src/main.c ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2);
 134              		.loc 1 322 3 is_stmt 1 view .LVU44
 135 006c 2946     		mov	r1, r5
ARM GAS  /tmp/cc2jInvs.s 			page 9


 136 006e 0FA8     		add	r0, sp, #60
 137 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 138              	.LVL1:
 323:Core/Src/main.c **** }
 139              		.loc 1 323 1 is_stmt 0 view .LVU45
 140 0074 15B0     		add	sp, sp, #84
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 12
 143              		@ sp needed
 144 0076 30BD     		pop	{r4, r5, pc}
 145              	.L4:
 146              		.align	2
 147              	.L3:
 148 0078 00380240 		.word	1073887232
 149 007c 00700040 		.word	1073770496
 150              		.cfi_endproc
 151              	.LFE280:
 153              		.section	.rodata.wifi_get_AP_settings.str1.4,"aMS",%progbits,1
 154              		.align	2
 155              	.LC0:
 156 0000 0D0A0A2F 		.ascii	"\015\012\012/**************************************"
 156      2A2A2A2A 
 156      2A2A2A2A 
 156      2A2A2A2A 
 156      2A2A2A2A 
 157 002a 2A2A2A2A 		.ascii	"******************\000"
 157      2A2A2A2A 
 157      2A2A2A2A 
 157      2A2A2A2A 
 157      2A2A00
 158 003d 000000   		.align	2
 159              	.LC1:
 160 0040 0D202A20 		.ascii	"\015 *                                             "
 160      20202020 
 160      20202020 
 160      20202020 
 160      20202020 
 161 0070 20202020 		.ascii	"         *\000"
 161      20202020 
 161      202A00
 162 007b 00       		.align	2
 163              	.LC2:
 164 007c 0D202A20 		.ascii	"\015 * X-CUBE-WIFI1 Expansion Software V3.1.1      "
 164      582D4355 
 164      42452D57 
 164      49464931 
 164      20457870 
 165 00ac 20202020 		.ascii	"         *\000"
 165      20202020 
 165      202A00
 166 00b7 00       		.align	2
 167              	.LC3:
 168 00b8 0D202A20 		.ascii	"\015 * X-NUCLEO-IDW0xx1 Wi-Fi Mini-AP Configuration"
 168      582D4E55 
 168      434C454F 
 168      2D494457 
 168      30787831 
ARM GAS  /tmp/cc2jInvs.s 			page 10


 169 00e8 2E202020 		.ascii	".        *\000"
 169      20202020 
 169      202A00
 170 00f3 00       		.align	2
 171              	.LC4:
 172 00f4 0D202A20 		.ascii	"\015 * Server-Socket Example                       "
 172      53657276 
 172      65722D53 
 172      6F636B65 
 172      74204578 
 173 0124 20202020 		.ascii	"         *\000"
 173      20202020 
 173      202A00
 174 012f 00       		.align	2
 175              	.LC5:
 176 0130 0D202A2A 		.ascii	"\015 **********************************************"
 176      2A2A2A2A 
 176      2A2A2A2A 
 176      2A2A2A2A 
 176      2A2A2A2A 
 177 0160 2A2A2A2A 		.ascii	"*********/\000"
 177      2A2A2A2A 
 177      2A2F00
 178 016b 00       		.align	2
 179              	.LC6:
 180 016c 0D0A446F 		.ascii	"\015\012Do you want to setup SSID?(y/n):\000"
 180      20796F75 
 180      2077616E 
 180      7420746F 
 180      20736574 
 181 018f 00       		.align	2
 182              	.LC7:
 183 0190 257300   		.ascii	"%s\000"
 184 0193 00       		.align	2
 185              	.LC8:
 186 0194 0D0A456E 		.ascii	"\015\012Enter the SSID for mini-AP:\000"
 186      74657220 
 186      74686520 
 186      53534944 
 186      20666F72 
 187 01b2 0000     		.align	2
 188              	.LC9:
 189 01b4 0D00     		.ascii	"\015\000"
 190 01b6 0000     		.align	2
 191              	.LC10:
 192 01b8 45786365 		.ascii	"Exceeded number of ssid characters permitted\000"
 192      65646564 
 192      206E756D 
 192      62657220 
 192      6F662073 
 193 01e5 000000   		.align	2
 194              	.LC11:
 195 01e8 456E7465 		.ascii	"Enter the password:\000"
 195      72207468 
 195      65207061 
 195      7373776F 
 195      72643A00 
ARM GAS  /tmp/cc2jInvs.s 			page 11


 196              		.align	2
 197              	.LC12:
 198 01fc 45786365 		.ascii	"Exceeded number of psk characters permitted\000"
 198      65646564 
 198      206E756D 
 198      62657220 
 198      6F662070 
 199              		.align	2
 200              	.LC13:
 201 0228 0D0A0A4D 		.ascii	"\015\012\012Module will connect with default settin"
 201      6F64756C 
 201      65207769 
 201      6C6C2063 
 201      6F6E6E65 
 202 0252 67732E00 		.ascii	"gs.\000"
 203 0256 0000     		.align	2
 204              	.LC14:
 205 0258 0D0A2F2A 		.ascii	"\015\012/******************************************"
 205      2A2A2A2A 
 205      2A2A2A2A 
 205      2A2A2A2A 
 205      2A2A2A2A 
 206 0285 2A2A2A2A 		.ascii	"*******************\015\000"
 206      2A2A2A2A 
 206      2A2A2A2A 
 206      2A2A2A2A 
 206      2A2A2A0D 
 207 029a 0000     		.align	2
 208              	.LC15:
 209 029c 0D0A202A 		.ascii	"\015\012 * Configuration Complete                  "
 209      20436F6E 
 209      66696775 
 209      72617469 
 209      6F6E2043 
 210 02c9 20202020 		.ascii	"                   \015\000"
 210      20202020 
 210      20202020 
 210      20202020 
 210      2020200D 
 211 02de 0000     		.align	2
 212              	.LC16:
 213 02e0 0D0A202A 		.ascii	"\015\012 * Please make sure a server is listening a"
 213      20506C65 
 213      61736520 
 213      6D616B65 
 213      20737572 
 214 030d 74206769 		.ascii	"t given hostname   \015\000"
 214      76656E20 
 214      686F7374 
 214      6E616D65 
 214      2020200D 
 215 0322 0000     		.align	2
 216              	.LC17:
 217 0324 0D0A202A 		.ascii	"\015\012 ******************************************"
 217      2A2A2A2A 
 217      2A2A2A2A 
 217      2A2A2A2A 
ARM GAS  /tmp/cc2jInvs.s 			page 12


 217      2A2A2A2A 
 218 0351 2A2A2A2A 		.ascii	"*******************\015\000"
 218      2A2A2A2A 
 218      2A2A2A2A 
 218      2A2A2A2A 
 218      2A2A2A0D 
 219              		.section	.text.wifi_get_AP_settings,"ax",%progbits
 220              		.align	1
 221              		.global	wifi_get_AP_settings
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	wifi_get_AP_settings:
 228              	.LFB281:
 324:Core/Src/main.c **** #endif
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** #ifdef USE_STM32L0XX_NUCLEO
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****  * @brief  System Clock Configuration
 330:Core/Src/main.c ****  * @param  None
 331:Core/Src/main.c ****  * @retval None
 332:Core/Src/main.c ****  */
 333:Core/Src/main.c **** void SystemClock_Config(void)
 334:Core/Src/main.c **** {
 335:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 336:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   __PWR_CLK_ENABLE();
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 343:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 344:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 0x10;
 345:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 346:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 347:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 348:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 349:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 352:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;//RCC_SYSCLKSOURCE_PLLCLK;
 353:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 354:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 355:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 356:Core/Src/main.c ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1);
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   __SYSCFG_CLK_ENABLE(); 
 359:Core/Src/main.c **** }
 360:Core/Src/main.c **** #endif
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** #ifdef USE_STM32L4XX_NUCLEO
 363:Core/Src/main.c **** /**
 364:Core/Src/main.c ****   * @brief  System Clock Configuration
 365:Core/Src/main.c ****   *         The system Clock is configured as follow :
ARM GAS  /tmp/cc2jInvs.s 			page 13


 366:Core/Src/main.c ****   *            System Clock source            = PLL (MSI)
 367:Core/Src/main.c ****   *            SYSCLK(Hz)                     = 80000000
 368:Core/Src/main.c ****   *            HCLK(Hz)                       = 80000000
 369:Core/Src/main.c ****   *            AHB Prescaler                  = 1
 370:Core/Src/main.c ****   *            APB1 Prescaler                 = 1
 371:Core/Src/main.c ****   *            APB2 Prescaler                 = 1
 372:Core/Src/main.c ****   *            MSI Frequency(Hz)              = 4000000
 373:Core/Src/main.c ****   *            PLL_M                          = 1
 374:Core/Src/main.c ****   *            PLL_N                          = 40
 375:Core/Src/main.c ****   *            PLL_R                          = 2
 376:Core/Src/main.c ****   *            PLL_P                          = 7
 377:Core/Src/main.c ****   *            PLL_Q                          = 4
 378:Core/Src/main.c ****   *            Flash Latency(WS)              = 4
 379:Core/Src/main.c ****   * @param  None
 380:Core/Src/main.c ****   * @retval None
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c **** void SystemClock_Config(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 385:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* MSI is enabled after System reset, activate PLL with MSI as source */
 388:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 389:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 390:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 391:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 392:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 393:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 394:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 395:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 396:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 397:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 7;
 398:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 399:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
 402:Core/Src/main.c ****      clocks dividers */
 403:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 404:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 405:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 406:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;  
 407:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;  
 408:Core/Src/main.c ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
 409:Core/Src/main.c **** }
 410:Core/Src/main.c **** #endif
 411:Core/Src/main.c **** 
 412:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** /**
 415:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 416:Core/Src/main.c ****   *         where the assert_param error has occurred.
 417:Core/Src/main.c ****   * @param  file: pointer to the source file name
 418:Core/Src/main.c ****   * @param  line: assert_param error line source number
 419:Core/Src/main.c ****   * @retval None
 420:Core/Src/main.c ****   */
 421:Core/Src/main.c **** void assert_failed(uint8_t* file, uint32_t line)
 422:Core/Src/main.c **** { 
ARM GAS  /tmp/cc2jInvs.s 			page 14


 423:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 424:Core/Src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /* Infinite loop */
 427:Core/Src/main.c ****   while (1)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c **** }
 431:Core/Src/main.c **** #endif
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** #ifdef USART_PRINT_MSG
 434:Core/Src/main.c **** void USART_PRINT_MSG_Configuration(UART_HandleTypeDef *UART_MsgHandle, uint32_t baud_rate)
 435:Core/Src/main.c **** {
 436:Core/Src/main.c ****   UART_MsgHandle->Instance             = WIFI_UART_MSG;
 437:Core/Src/main.c ****   UART_MsgHandle->Init.BaudRate        = baud_rate;
 438:Core/Src/main.c ****   UART_MsgHandle->Init.WordLength      = UART_WORDLENGTH_8B;
 439:Core/Src/main.c ****   UART_MsgHandle->Init.StopBits        = UART_STOPBITS_1;
 440:Core/Src/main.c ****   UART_MsgHandle->Init.Parity          = UART_PARITY_NONE ;
 441:Core/Src/main.c ****   UART_MsgHandle->Init.HwFlowCtl       = UART_HWCONTROL_NONE;// USART_HardwareFlowControl_RTS_CTS;
 442:Core/Src/main.c ****   UART_MsgHandle->Init.Mode            = UART_MODE_TX_RX;
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   if(HAL_UART_DeInit(UART_MsgHandle) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }  
 448:Core/Src/main.c ****   if(HAL_UART_Init(UART_MsgHandle) != HAL_OK)
 449:Core/Src/main.c ****   {
 450:Core/Src/main.c ****     Error_Handler();
 451:Core/Src/main.c ****   }
 452:Core/Src/main.c ****       
 453:Core/Src/main.c **** }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** void UART_Msg_Gpio_Init()
 456:Core/Src/main.c **** { 
 457:Core/Src/main.c ****   GPIO_InitTypeDef  GPIO_InitStruct;
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /*##-1- Enable peripherals and GPIO Clocks #################################*/
 460:Core/Src/main.c ****   /* Enable GPIO TX/RX clock */
 461:Core/Src/main.c ****   USARTx_PRINT_TX_GPIO_CLK_ENABLE();
 462:Core/Src/main.c ****   USARTx_PRINT_RX_GPIO_CLK_ENABLE();
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* Enable USARTx clock */
 466:Core/Src/main.c ****   USARTx_PRINT_CLK_ENABLE(); 
 467:Core/Src/main.c ****     __SYSCFG_CLK_ENABLE();
 468:Core/Src/main.c ****   /*##-2- Configure peripheral GPIO ##########################################*/  
 469:Core/Src/main.c ****   /* UART TX GPIO pin configuration  */
 470:Core/Src/main.c ****   GPIO_InitStruct.Pin       = WiFi_USART_PRINT_TX_PIN;
 471:Core/Src/main.c ****   GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 472:Core/Src/main.c ****   GPIO_InitStruct.Pull      = GPIO_PULLUP;
 473:Core/Src/main.c ****   GPIO_InitStruct.Speed     = GPIO_SPEED_HIGH;
 474:Core/Src/main.c **** #if defined (USE_STM32L0XX_NUCLEO) || defined(USE_STM32F4XX_NUCLEO) || defined(USE_STM32L4XX_NUCLEO
 475:Core/Src/main.c ****   GPIO_InitStruct.Alternate = PRINTMSG_USARTx_TX_AF;
 476:Core/Src/main.c **** #endif  
 477:Core/Src/main.c ****   HAL_GPIO_Init(WiFi_USART_PRINT_TX_GPIO_PORT, &GPIO_InitStruct);
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* UART RX GPIO pin configuration  */
ARM GAS  /tmp/cc2jInvs.s 			page 15


 480:Core/Src/main.c ****   GPIO_InitStruct.Pin = WiFi_USART_PRINT_RX_PIN;
 481:Core/Src/main.c ****   GPIO_InitStruct.Mode      = GPIO_MODE_INPUT;
 482:Core/Src/main.c **** #if defined (USE_STM32L0XX_NUCLEO) || defined(USE_STM32F4XX_NUCLEO) || defined(USE_STM32L4XX_NUCLEO
 483:Core/Src/main.c ****   GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 484:Core/Src/main.c ****   GPIO_InitStruct.Alternate = PRINTMSG_USARTx_RX_AF;
 485:Core/Src/main.c **** #endif 
 486:Core/Src/main.c ****   
 487:Core/Src/main.c ****   HAL_GPIO_Init(WiFi_USART_PRINT_RX_GPIO_PORT, &GPIO_InitStruct);
 488:Core/Src/main.c ****   
 489:Core/Src/main.c **** #ifdef WIFI_USE_VCOM
 490:Core/Src/main.c ****   /*##-3- Configure the NVIC for UART ########################################*/
 491:Core/Src/main.c ****   /* NVIC for USART */
 492:Core/Src/main.c ****   HAL_NVIC_SetPriority(USARTx_PRINT_IRQn, 0, 1);
 493:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(USARTx_PRINT_IRQn);
 494:Core/Src/main.c **** #endif
 495:Core/Src/main.c **** }
 496:Core/Src/main.c **** #endif  // end of USART_PRINT_MSG
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** /**
 500:Core/Src/main.c ****   * @brief  Query the User for SSID, password and encryption mode
 501:Core/Src/main.c ****   * @param  None
 502:Core/Src/main.c ****   * @retval WiFi_Status_t
 503:Core/Src/main.c ****   */
 504:Core/Src/main.c **** WiFi_Status_t wifi_get_AP_settings(void)
 505:Core/Src/main.c **** {
 229              		.loc 1 505 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 10B5     		push	{r4, lr}
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
 506:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 238              		.loc 1 506 3 view .LVU47
 239              	.LVL2:
 507:Core/Src/main.c ****   printf("\r\n\n/********************************************************\n");
 240              		.loc 1 507 3 view .LVU48
 241 0002 4048     		ldr	r0, .L13
 242 0004 FFF7FEFF 		bl	puts
 243              	.LVL3:
 508:Core/Src/main.c ****   printf("\r *                                                      *\n");
 244              		.loc 1 508 3 view .LVU49
 245 0008 3F4C     		ldr	r4, .L13+4
 246 000a 2046     		mov	r0, r4
 247 000c FFF7FEFF 		bl	puts
 248              	.LVL4:
 509:Core/Src/main.c ****   printf("\r * X-CUBE-WIFI1 Expansion Software V3.1.1               *\n");
 249              		.loc 1 509 3 view .LVU50
 250 0010 3E48     		ldr	r0, .L13+8
 251 0012 FFF7FEFF 		bl	puts
 252              	.LVL5:
 510:Core/Src/main.c ****   printf("\r * X-NUCLEO-IDW0xx1 Wi-Fi Mini-AP Configuration.        *\n");
 253              		.loc 1 510 3 view .LVU51
 254 0016 3E48     		ldr	r0, .L13+12
ARM GAS  /tmp/cc2jInvs.s 			page 16


 255 0018 FFF7FEFF 		bl	puts
 256              	.LVL6:
 511:Core/Src/main.c ****   printf("\r * Server-Socket Example                                *\n");
 257              		.loc 1 511 3 view .LVU52
 258 001c 3D48     		ldr	r0, .L13+16
 259 001e FFF7FEFF 		bl	puts
 260              	.LVL7:
 512:Core/Src/main.c ****   printf("\r *                                                      *\n");
 261              		.loc 1 512 3 view .LVU53
 262 0022 2046     		mov	r0, r4
 263 0024 FFF7FEFF 		bl	puts
 264              	.LVL8:
 513:Core/Src/main.c ****   printf("\r *******************************************************/\n");
 265              		.loc 1 513 3 view .LVU54
 266 0028 3B48     		ldr	r0, .L13+20
 267 002a FFF7FEFF 		bl	puts
 268              	.LVL9:
 514:Core/Src/main.c ****   printf("\r\nDo you want to setup SSID?(y/n):");
 269              		.loc 1 514 3 view .LVU55
 270 002e 3B48     		ldr	r0, .L13+24
 271 0030 FFF7FEFF 		bl	printf
 272              	.LVL10:
 515:Core/Src/main.c ****   fflush(stdout);
 273              		.loc 1 515 3 view .LVU56
 274              		.loc 1 515 10 is_stmt 0 view .LVU57
 275 0034 3A4B     		ldr	r3, .L13+28
 276 0036 1B68     		ldr	r3, [r3]
 277              		.loc 1 515 3 view .LVU58
 278 0038 9868     		ldr	r0, [r3, #8]
 279 003a FFF7FEFF 		bl	fflush
 280              	.LVL11:
 516:Core/Src/main.c ****   scanf("%s",console_input);
 281              		.loc 1 516 3 is_stmt 1 view .LVU59
 282 003e 394C     		ldr	r4, .L13+32
 283 0040 2146     		mov	r1, r4
 284 0042 3948     		ldr	r0, .L13+36
 285 0044 FFF7FEFF 		bl	scanf
 286              	.LVL12:
 517:Core/Src/main.c ****   //console_input[0]='n';
 518:Core/Src/main.c ****   
 519:Core/Src/main.c ****   //HAL_UART_Receive(UartMsgHandle, (uint8_t *)console_input, 1, 100000);
 520:Core/Src/main.c ****   if(console_input[0]=='y') 
 287              		.loc 1 520 3 view .LVU60
 288              		.loc 1 520 19 is_stmt 0 view .LVU61
 289 0048 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 290              		.loc 1 520 5 view .LVU62
 291 004a 792B     		cmp	r3, #121
 292 004c 24D0     		beq	.L11
 521:Core/Src/main.c ****         {
 522:Core/Src/main.c ****               printf("\r\nEnter the SSID for mini-AP:");
 523:Core/Src/main.c ****               fflush(stdout);
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****               console_count=0;
 526:Core/Src/main.c ****               console_count=scanf("%s",console_ssid);
 527:Core/Src/main.c ****               printf("\r\n");
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****                 if(console_count==39) 
ARM GAS  /tmp/cc2jInvs.s 			page 17


 530:Core/Src/main.c ****                     {
 531:Core/Src/main.c ****                         printf("Exceeded number of ssid characters permitted");
 532:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 533:Core/Src/main.c ****                     }
 534:Core/Src/main.c ****                 
 535:Core/Src/main.c ****               printf("Enter the password:");
 536:Core/Src/main.c ****               fflush(stdout);
 537:Core/Src/main.c ****               console_count=0;
 538:Core/Src/main.c ****               
 539:Core/Src/main.c ****               console_count=scanf("%s",console_psk);
 540:Core/Src/main.c ****               printf("\r\n");
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****                 if(console_count==19) 
 543:Core/Src/main.c ****                     {
 544:Core/Src/main.c ****                         printf("Exceeded number of psk characters permitted");
 545:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 546:Core/Src/main.c ****                     }
 547:Core/Src/main.c ****         } else 
 548:Core/Src/main.c ****             {
 549:Core/Src/main.c ****                 printf("\r\n\nModule will connect with default settings.");
 293              		.loc 1 549 17 is_stmt 1 view .LVU63
 294 004e 3748     		ldr	r0, .L13+40
 295 0050 FFF7FEFF 		bl	printf
 296              	.LVL13:
 550:Core/Src/main.c ****                 memcpy(console_ssid, (const char*)ssid, strlen((char*)ssid));
 297              		.loc 1 550 17 view .LVU64
 298 0054 364B     		ldr	r3, .L13+44
 299 0056 1C68     		ldr	r4, [r3]
 300 0058 2046     		mov	r0, r4
 301 005a FFF7FEFF 		bl	strlen
 302              	.LVL14:
 303 005e 0246     		mov	r2, r0
 304 0060 2146     		mov	r1, r4
 305 0062 3448     		ldr	r0, .L13+48
 306 0064 FFF7FEFF 		bl	memcpy
 307              	.LVL15:
 551:Core/Src/main.c ****                 memcpy(console_psk, (const char*)seckey, strlen((char*)seckey));
 308              		.loc 1 551 17 view .LVU65
 309 0068 334B     		ldr	r3, .L13+52
 310 006a 1C68     		ldr	r4, [r3]
 311 006c 2046     		mov	r0, r4
 312 006e FFF7FEFF 		bl	strlen
 313              	.LVL16:
 314 0072 0246     		mov	r2, r0
 315 0074 2146     		mov	r1, r4
 316 0076 3148     		ldr	r0, .L13+56
 317 0078 FFF7FEFF 		bl	memcpy
 318              	.LVL17:
 319              	.L9:
 552:Core/Src/main.c ****             }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   printf("\r\n/*************************************************************\r\n");
 320              		.loc 1 554 3 view .LVU66
 321 007c 3048     		ldr	r0, .L13+60
 322 007e FFF7FEFF 		bl	puts
 323              	.LVL18:
 555:Core/Src/main.c ****   printf("\r\n * Configuration Complete                                     \r\n");
ARM GAS  /tmp/cc2jInvs.s 			page 18


 324              		.loc 1 555 3 view .LVU67
 325 0082 3048     		ldr	r0, .L13+64
 326 0084 FFF7FEFF 		bl	puts
 327              	.LVL19:
 556:Core/Src/main.c ****   printf("\r\n * Please make sure a server is listening at given hostname   \r\n");
 328              		.loc 1 556 3 view .LVU68
 329 0088 2F48     		ldr	r0, .L13+68
 330 008a FFF7FEFF 		bl	puts
 331              	.LVL20:
 557:Core/Src/main.c ****   printf("\r\n *************************************************************\r\n");
 332              		.loc 1 557 3 view .LVU69
 333 008e 2F48     		ldr	r0, .L13+72
 334 0090 FFF7FEFF 		bl	puts
 335              	.LVL21:
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   return status;
 336              		.loc 1 559 3 view .LVU70
 337              		.loc 1 559 10 is_stmt 0 view .LVU71
 338 0094 0020     		movs	r0, #0
 339              	.L8:
 560:Core/Src/main.c **** }
 340              		.loc 1 560 1 view .LVU72
 341 0096 10BD     		pop	{r4, pc}
 342              	.L11:
 522:Core/Src/main.c ****               fflush(stdout);
 343              		.loc 1 522 15 is_stmt 1 view .LVU73
 344 0098 2D48     		ldr	r0, .L13+76
 345 009a FFF7FEFF 		bl	printf
 346              	.LVL22:
 523:Core/Src/main.c **** 
 347              		.loc 1 523 15 view .LVU74
 523:Core/Src/main.c **** 
 348              		.loc 1 523 22 is_stmt 0 view .LVU75
 349 009e 204B     		ldr	r3, .L13+28
 350 00a0 1B68     		ldr	r3, [r3]
 523:Core/Src/main.c **** 
 351              		.loc 1 523 15 view .LVU76
 352 00a2 9868     		ldr	r0, [r3, #8]
 353 00a4 FFF7FEFF 		bl	fflush
 354              	.LVL23:
 525:Core/Src/main.c ****               console_count=scanf("%s",console_ssid);
 355              		.loc 1 525 15 is_stmt 1 view .LVU77
 525:Core/Src/main.c ****               console_count=scanf("%s",console_ssid);
 356              		.loc 1 525 28 is_stmt 0 view .LVU78
 357 00a8 2A4C     		ldr	r4, .L13+80
 358 00aa 0023     		movs	r3, #0
 359 00ac 2370     		strb	r3, [r4]
 526:Core/Src/main.c ****               printf("\r\n");
 360              		.loc 1 526 15 is_stmt 1 view .LVU79
 526:Core/Src/main.c ****               printf("\r\n");
 361              		.loc 1 526 29 is_stmt 0 view .LVU80
 362 00ae 2149     		ldr	r1, .L13+48
 363 00b0 1D48     		ldr	r0, .L13+36
 364 00b2 FFF7FEFF 		bl	scanf
 365              	.LVL24:
 526:Core/Src/main.c ****               printf("\r\n");
 366              		.loc 1 526 28 view .LVU81
ARM GAS  /tmp/cc2jInvs.s 			page 19


 367 00b6 2070     		strb	r0, [r4]
 527:Core/Src/main.c **** 
 368              		.loc 1 527 15 is_stmt 1 view .LVU82
 369 00b8 2748     		ldr	r0, .L13+84
 370 00ba FFF7FEFF 		bl	puts
 371              	.LVL25:
 529:Core/Src/main.c ****                     {
 372              		.loc 1 529 17 view .LVU83
 529:Core/Src/main.c ****                     {
 373              		.loc 1 529 33 is_stmt 0 view .LVU84
 374 00be 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 529:Core/Src/main.c ****                     {
 375              		.loc 1 529 19 view .LVU85
 376 00c0 272B     		cmp	r3, #39
 377 00c2 1AD0     		beq	.L12
 535:Core/Src/main.c ****               fflush(stdout);
 378              		.loc 1 535 15 is_stmt 1 view .LVU86
 379 00c4 2548     		ldr	r0, .L13+88
 380 00c6 FFF7FEFF 		bl	printf
 381              	.LVL26:
 536:Core/Src/main.c ****               console_count=0;
 382              		.loc 1 536 15 view .LVU87
 536:Core/Src/main.c ****               console_count=0;
 383              		.loc 1 536 22 is_stmt 0 view .LVU88
 384 00ca 154B     		ldr	r3, .L13+28
 385 00cc 1B68     		ldr	r3, [r3]
 536:Core/Src/main.c ****               console_count=0;
 386              		.loc 1 536 15 view .LVU89
 387 00ce 9868     		ldr	r0, [r3, #8]
 388 00d0 FFF7FEFF 		bl	fflush
 389              	.LVL27:
 537:Core/Src/main.c ****               
 390              		.loc 1 537 15 is_stmt 1 view .LVU90
 537:Core/Src/main.c ****               
 391              		.loc 1 537 28 is_stmt 0 view .LVU91
 392 00d4 1F4C     		ldr	r4, .L13+80
 393 00d6 0023     		movs	r3, #0
 394 00d8 2370     		strb	r3, [r4]
 539:Core/Src/main.c ****               printf("\r\n");
 395              		.loc 1 539 15 is_stmt 1 view .LVU92
 539:Core/Src/main.c ****               printf("\r\n");
 396              		.loc 1 539 29 is_stmt 0 view .LVU93
 397 00da 1849     		ldr	r1, .L13+56
 398 00dc 1248     		ldr	r0, .L13+36
 399 00de FFF7FEFF 		bl	scanf
 400              	.LVL28:
 539:Core/Src/main.c ****               printf("\r\n");
 401              		.loc 1 539 28 view .LVU94
 402 00e2 2070     		strb	r0, [r4]
 540:Core/Src/main.c **** 
 403              		.loc 1 540 15 is_stmt 1 view .LVU95
 404 00e4 1C48     		ldr	r0, .L13+84
 405 00e6 FFF7FEFF 		bl	puts
 406              	.LVL29:
 542:Core/Src/main.c ****                     {
 407              		.loc 1 542 17 view .LVU96
 542:Core/Src/main.c ****                     {
ARM GAS  /tmp/cc2jInvs.s 			page 20


 408              		.loc 1 542 33 is_stmt 0 view .LVU97
 409 00ea 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 542:Core/Src/main.c ****                     {
 410              		.loc 1 542 19 view .LVU98
 411 00ec 132B     		cmp	r3, #19
 412 00ee C5D1     		bne	.L9
 544:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 413              		.loc 1 544 25 is_stmt 1 view .LVU99
 414 00f0 1B48     		ldr	r0, .L13+92
 415 00f2 FFF7FEFF 		bl	printf
 416              	.LVL30:
 545:Core/Src/main.c ****                     }
 417              		.loc 1 545 25 view .LVU100
 545:Core/Src/main.c ****                     }
 418              		.loc 1 545 32 is_stmt 0 view .LVU101
 419 00f6 0420     		movs	r0, #4
 420 00f8 CDE7     		b	.L8
 421              	.L12:
 531:Core/Src/main.c ****                         return WiFi_NOT_SUPPORTED;
 422              		.loc 1 531 25 is_stmt 1 view .LVU102
 423 00fa 1A48     		ldr	r0, .L13+96
 424 00fc FFF7FEFF 		bl	printf
 425              	.LVL31:
 532:Core/Src/main.c ****                     }
 426              		.loc 1 532 25 view .LVU103
 532:Core/Src/main.c ****                     }
 427              		.loc 1 532 32 is_stmt 0 view .LVU104
 428 0100 0420     		movs	r0, #4
 429 0102 C8E7     		b	.L8
 430              	.L14:
 431              		.align	2
 432              	.L13:
 433 0104 00000000 		.word	.LC0
 434 0108 40000000 		.word	.LC1
 435 010c 7C000000 		.word	.LC2
 436 0110 B8000000 		.word	.LC3
 437 0114 F4000000 		.word	.LC4
 438 0118 30010000 		.word	.LC5
 439 011c 6C010000 		.word	.LC6
 440 0120 00000000 		.word	_impure_ptr
 441 0124 00000000 		.word	console_input
 442 0128 90010000 		.word	.LC7
 443 012c 28020000 		.word	.LC13
 444 0130 00000000 		.word	.LANCHOR1
 445 0134 00000000 		.word	console_ssid
 446 0138 00000000 		.word	.LANCHOR2
 447 013c 00000000 		.word	console_psk
 448 0140 58020000 		.word	.LC14
 449 0144 9C020000 		.word	.LC15
 450 0148 E0020000 		.word	.LC16
 451 014c 24030000 		.word	.LC17
 452 0150 94010000 		.word	.LC8
 453 0154 00000000 		.word	.LANCHOR0
 454 0158 B4010000 		.word	.LC9
 455 015c E8010000 		.word	.LC11
 456 0160 FC010000 		.word	.LC12
 457 0164 B8010000 		.word	.LC10
ARM GAS  /tmp/cc2jInvs.s 			page 21


 458              		.cfi_endproc
 459              	.LFE281:
 461              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 462              		.align	2
 463              	.LC18:
 464 0000 0D0A4572 		.ascii	"\015\012Error in AP Settings\000"
 464      726F7220 
 464      696E2041 
 464      50205365 
 464      7474696E 
 465 0017 00       		.align	2
 466              	.LC19:
 467 0018 0D0A496E 		.ascii	"\015\012Initializing the wifi module...\015\000"
 467      69746961 
 467      6C697A69 
 467      6E672074 
 467      68652077 
 468 003b 00       		.align	2
 469              	.LC20:
 470 003c 4572726F 		.ascii	"Error in Config\000"
 470      7220696E 
 470      20436F6E 
 470      66696700 
 471              		.align	2
 472              	.LC21:
 473 004c 0D0A496E 		.ascii	"\015\012Initializing complete.\015\000"
 473      69746961 
 473      6C697A69 
 473      6E672063 
 473      6F6D706C 
 474 0066 0000     		.align	2
 475              	.LC22:
 476 0068 0D0A203E 		.ascii	"\015\012 >>setting up miniAP mode...\015\000"
 476      3E736574 
 476      74696E67 
 476      20757020 
 476      6D696E69 
 477              		.align	2
 478              	.LC23:
 479 0088 0D0A203E 		.ascii	"\015\012 >>connected...\015\000"
 479      3E636F6E 
 479      6E656374 
 479      65642E2E 
 479      2E0D00
 480 009b 00       		.align	2
 481              	.LC24:
 482 009c 0D0A3E3E 		.ascii	"\015\012>>IP address is %s\015\012\000"
 482      49502061 
 482      64647265 
 482      73732069 
 482      73202573 
 483 00b3 00       		.align	2
 484              	.LC25:
 485 00b4 0D0A3E3E 		.ascii	"\015\012>>mac addr is %s\015\012\000"
 485      6D616320 
 485      61646472 
 485      20697320 
ARM GAS  /tmp/cc2jInvs.s 			page 22


 485      25730D0A 
 486 00c9 000000   		.align	2
 487              	.LC26:
 488 00cc 0D0A203E 		.ascii	"\015\012 >>disconnected..\015\000"
 488      3E646973 
 488      636F6E6E 
 488      65637465 
 488      642E2E0D 
 489 00e1 000000   		.align	2
 490              	.LC27:
 491 00e4 0D0A203E 		.ascii	"\015\012 >>WiFi server socket opening..\015\000"
 491      3E576946 
 491      69207365 
 491      72766572 
 491      20736F63 
 492 0107 00       		.align	2
 493              	.LC28:
 494 0108 7400     		.ascii	"t\000"
 495 010a 0000     		.align	2
 496              	.LC29:
 497 010c 0D0A203E 		.ascii	"\015\012 >>Server Socket Open OK \015\000"
 497      3E536572 
 497      76657220 
 497      536F636B 
 497      6574204F 
 498 0129 000000   		.align	2
 499              	.LC30:
 500 012c 0D0A203E 		.ascii	"\015\012 >>Writing data to client\015\000"
 500      3E577269 
 500      74696E67 
 500      20646174 
 500      6120746F 
 501 0149 000000   		.align	2
 502              	.LC31:
 503 014c 0D0A203E 		.ascii	"\015\012 >>Server Socket Write OK \015\000"
 503      3E536572 
 503      76657220 
 503      536F636B 
 503      65742057 
 504              		.section	.text.main,"ax",%progbits
 505              		.align	1
 506              		.global	main
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu fpv4-sp-d16
 512              	main:
 513              	.LFB279:
  98:Core/Src/main.c ****   WiFi_Status_t status = WiFi_MODULE_SUCCESS;
 514              		.loc 1 98 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518 0000 10B5     		push	{r4, lr}
 519              	.LCFI4:
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
ARM GAS  /tmp/cc2jInvs.s 			page 23


 522              		.cfi_offset 14, -4
 523 0002 82B0     		sub	sp, sp, #8
 524              	.LCFI5:
 525              		.cfi_def_cfa_offset 16
  99:Core/Src/main.c ****   char *protocol = "t";
 526              		.loc 1 99 3 view .LVU106
 527              	.LVL32:
 100:Core/Src/main.c ****   uint32_t portnumber = 32000;
 528              		.loc 1 100 3 view .LVU107
 101:Core/Src/main.c ****   
 529              		.loc 1 101 3 view .LVU108
 103:Core/Src/main.c ****   HAL_Init();
 530              		.loc 1 103 3 view .LVU109
 531              	.LBB4:
 103:Core/Src/main.c ****   HAL_Init();
 532              		.loc 1 103 3 view .LVU110
 533 0004 0023     		movs	r3, #0
 534 0006 0193     		str	r3, [sp, #4]
 103:Core/Src/main.c ****   HAL_Init();
 535              		.loc 1 103 3 view .LVU111
 536 0008 574B     		ldr	r3, .L36
 537 000a 1A6B     		ldr	r2, [r3, #48]
 538 000c 42F00102 		orr	r2, r2, #1
 539 0010 1A63     		str	r2, [r3, #48]
 103:Core/Src/main.c ****   HAL_Init();
 540              		.loc 1 103 3 view .LVU112
 541 0012 1B6B     		ldr	r3, [r3, #48]
 542 0014 03F00103 		and	r3, r3, #1
 543 0018 0193     		str	r3, [sp, #4]
 103:Core/Src/main.c ****   HAL_Init();
 544              		.loc 1 103 3 view .LVU113
 545 001a 019B     		ldr	r3, [sp, #4]
 546              	.LBE4:
 103:Core/Src/main.c ****   HAL_Init();
 547              		.loc 1 103 3 view .LVU114
 104:Core/Src/main.c **** 
 548              		.loc 1 104 3 view .LVU115
 549 001c FFF7FEFF 		bl	HAL_Init
 550              	.LVL33:
 107:Core/Src/main.c **** 
 551              		.loc 1 107 3 view .LVU116
 552 0020 FFF7FEFF 		bl	SystemClock_Config
 553              	.LVL34:
 110:Core/Src/main.c ****   
 554              		.loc 1 110 3 view .LVU117
 555 0024 FFF7FEFF 		bl	Timer_Config
 556              	.LVL35:
 118:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 557              		.loc 1 118 3 view .LVU118
 118:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 558              		.loc 1 118 12 is_stmt 0 view .LVU119
 559 0028 FFF7FEFF 		bl	wifi_get_AP_settings
 560              	.LVL36:
 119:Core/Src/main.c ****   {
 561              		.loc 1 119 3 is_stmt 1 view .LVU120
 119:Core/Src/main.c ****   {
 562              		.loc 1 119 5 is_stmt 0 view .LVU121
ARM GAS  /tmp/cc2jInvs.s 			page 24


 563 002c C0B9     		cbnz	r0, .L32
 125:Core/Src/main.c ****   config.power_level=high;
 564              		.loc 1 125 3 is_stmt 1 view .LVU122
 125:Core/Src/main.c ****   config.power_level=high;
 565              		.loc 1 125 15 is_stmt 0 view .LVU123
 566 002e 4F4C     		ldr	r4, .L36+4
 567 0030 0023     		movs	r3, #0
 568 0032 6370     		strb	r3, [r4, #1]
 126:Core/Src/main.c ****   config.dhcp=on;//use DHCP IP address  
 569              		.loc 1 126 3 is_stmt 1 view .LVU124
 126:Core/Src/main.c ****   config.dhcp=on;//use DHCP IP address  
 570              		.loc 1 126 21 is_stmt 0 view .LVU125
 571 0034 0223     		movs	r3, #2
 572 0036 A370     		strb	r3, [r4, #2]
 127:Core/Src/main.c ****   config.mcu_baud_rate = baud_rate;
 573              		.loc 1 127 3 is_stmt 1 view .LVU126
 127:Core/Src/main.c ****   config.mcu_baud_rate = baud_rate;
 574              		.loc 1 127 14 is_stmt 0 view .LVU127
 575 0038 0122     		movs	r2, #1
 576 003a E270     		strb	r2, [r4, #3]
 128:Core/Src/main.c ****   wifi_state = wifi_state_idle;
 577              		.loc 1 128 3 is_stmt 1 view .LVU128
 128:Core/Src/main.c ****   wifi_state = wifi_state_idle;
 578              		.loc 1 128 24 is_stmt 0 view .LVU129
 579 003c 4C4A     		ldr	r2, .L36+8
 580 003e 1068     		ldr	r0, [r2]
 581              	.LVL37:
 128:Core/Src/main.c ****   wifi_state = wifi_state_idle;
 582              		.loc 1 128 24 view .LVU130
 583 0040 6063     		str	r0, [r4, #52]
 129:Core/Src/main.c **** 
 584              		.loc 1 129 3 is_stmt 1 view .LVU131
 129:Core/Src/main.c **** 
 585              		.loc 1 129 14 is_stmt 0 view .LVU132
 586 0042 4C4A     		ldr	r2, .L36+12
 587 0044 1370     		strb	r3, [r2]
 131:Core/Src/main.c **** 
 588              		.loc 1 131 3 is_stmt 1 view .LVU133
 589 0046 FFF7FEFF 		bl	UART_Configuration
 590              	.LVL38:
 133:Core/Src/main.c **** 
 591              		.loc 1 133 3 view .LVU134
 592 004a 4B48     		ldr	r0, .L36+16
 593 004c FFF7FEFF 		bl	puts
 594              	.LVL39:
 136:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 595              		.loc 1 136 3 view .LVU135
 136:Core/Src/main.c ****   if(status!=WiFi_MODULE_SUCCESS)
 596              		.loc 1 136 12 is_stmt 0 view .LVU136
 597 0050 2046     		mov	r0, r4
 598 0052 FFF7FEFF 		bl	wifi_init
 599              	.LVL40:
 137:Core/Src/main.c ****   {
 600              		.loc 1 137 3 is_stmt 1 view .LVU137
 137:Core/Src/main.c ****   {
 601              		.loc 1 137 5 is_stmt 0 view .LVU138
 602 0056 48B9     		cbnz	r0, .L33
ARM GAS  /tmp/cc2jInvs.s 			page 25


 143:Core/Src/main.c ****   
 603              		.loc 1 143 3 is_stmt 1 view .LVU139
 604 0058 4848     		ldr	r0, .L36+20
 605              	.LVL41:
 143:Core/Src/main.c ****   
 606              		.loc 1 143 3 is_stmt 0 view .LVU140
 607 005a FFF7FEFF 		bl	puts
 608              	.LVL42:
 609 005e 17E0     		b	.L20
 610              	.LVL43:
 611              	.L32:
 121:Core/Src/main.c ****     return 0;
 612              		.loc 1 121 5 is_stmt 1 view .LVU141
 613 0060 4748     		ldr	r0, .L36+24
 614              	.LVL44:
 121:Core/Src/main.c ****     return 0;
 615              		.loc 1 121 5 is_stmt 0 view .LVU142
 616 0062 FFF7FEFF 		bl	printf
 617              	.LVL45:
 122:Core/Src/main.c ****   }
 618              		.loc 1 122 5 is_stmt 1 view .LVU143
 619              	.L17:
 230:Core/Src/main.c **** 
 620              		.loc 1 230 1 is_stmt 0 view .LVU144
 621 0066 0020     		movs	r0, #0
 622 0068 02B0     		add	sp, sp, #8
 623              	.LCFI6:
 624              		.cfi_remember_state
 625              		.cfi_def_cfa_offset 8
 626              		@ sp needed
 627 006a 10BD     		pop	{r4, pc}
 628              	.LVL46:
 629              	.L33:
 630              	.LCFI7:
 631              		.cfi_restore_state
 139:Core/Src/main.c ****     return 0;
 632              		.loc 1 139 5 is_stmt 1 view .LVU145
 633 006c 4548     		ldr	r0, .L36+28
 634              	.LVL47:
 139:Core/Src/main.c ****     return 0;
 635              		.loc 1 139 5 is_stmt 0 view .LVU146
 636 006e FFF7FEFF 		bl	printf
 637              	.LVL48:
 140:Core/Src/main.c ****   }
 638              		.loc 1 140 5 is_stmt 1 view .LVU147
 140:Core/Src/main.c ****   }
 639              		.loc 1 140 12 is_stmt 0 view .LVU148
 640 0072 F8E7     		b	.L17
 641              	.L27:
 642              	.LBB5:
 154:Core/Src/main.c ****         
 643              		.loc 1 154 9 is_stmt 1 view .LVU149
 644 0074 4448     		ldr	r0, .L36+32
 645 0076 FFF7FEFF 		bl	puts
 646              	.LVL49:
 156:Core/Src/main.c **** 
 647              		.loc 1 156 9 view .LVU150
ARM GAS  /tmp/cc2jInvs.s 			page 26


 648 007a 444B     		ldr	r3, .L36+36
 649 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 007e 444A     		ldr	r2, .L36+40
 651 0080 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 652 0082 4449     		ldr	r1, .L36+44
 653 0084 4448     		ldr	r0, .L36+48
 654 0086 FFF7FEFF 		bl	wifi_ap_start
 655              	.LVL50:
 160:Core/Src/main.c ****       break;
 656              		.loc 1 160 9 view .LVU151
 160:Core/Src/main.c ****       break;
 657              		.loc 1 160 20 is_stmt 0 view .LVU152
 658 008a 3A4B     		ldr	r3, .L36+12
 659 008c 0222     		movs	r2, #2
 660 008e 1A70     		strb	r2, [r3]
 161:Core/Src/main.c **** 
 661              		.loc 1 161 7 is_stmt 1 view .LVU153
 662              	.L20:
 663              	.LBE5:
 145:Core/Src/main.c ****   {
 664              		.loc 1 145 3 view .LVU154
 147:Core/Src/main.c ****         {
 665              		.loc 1 147 5 view .LVU155
 666 0090 384B     		ldr	r3, .L36+12
 667 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668 0094 013B     		subs	r3, r3, #1
 669 0096 062B     		cmp	r3, #6
 670 0098 FAD8     		bhi	.L20
 671 009a 01A2     		adr	r2, .L22
 672 009c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 673              		.p2align 2
 674              	.L22:
 675 00a0 75000000 		.word	.L27+1
 676 00a4 4F010000 		.word	.L26+1
 677 00a8 BD000000 		.word	.L25+1
 678 00ac 91000000 		.word	.L20+1
 679 00b0 03010000 		.word	.L24+1
 680 00b4 25010000 		.word	.L23+1
 681 00b8 F5000000 		.word	.L21+1
 682              		.p2align 1
 683              	.L25:
 684              	.LBB6:
 164:Core/Src/main.c ****         
 685              		.loc 1 164 9 view .LVU156
 686 00bc 3748     		ldr	r0, .L36+52
 687 00be FFF7FEFF 		bl	puts
 688              	.LVL51:
 166:Core/Src/main.c ****         
 689              		.loc 1 166 9 view .LVU157
 168:Core/Src/main.c ****         printf("\r\n>>IP address is %s\r\n", wifi_ip_addr);
 690              		.loc 1 168 9 view .LVU158
 168:Core/Src/main.c ****         printf("\r\n>>IP address is %s\r\n", wifi_ip_addr);
 691              		.loc 1 168 18 is_stmt 0 view .LVU159
 692 00c2 374C     		ldr	r4, .L36+56
 693 00c4 2046     		mov	r0, r4
 694 00c6 FFF7FEFF 		bl	wifi_get_IP_address
 695              	.LVL52:
ARM GAS  /tmp/cc2jInvs.s 			page 27


 169:Core/Src/main.c ****         
 696              		.loc 1 169 9 is_stmt 1 view .LVU160
 697 00ca 2146     		mov	r1, r4
 698 00cc 3548     		ldr	r0, .L36+60
 699 00ce FFF7FEFF 		bl	printf
 700              	.LVL53:
 171:Core/Src/main.c ****         
 701              		.loc 1 171 9 view .LVU161
 702 00d2 0023     		movs	r3, #0
 703 00d4 2360     		str	r3, [r4]	@ unaligned
 704 00d6 6360     		str	r3, [r4, #4]	@ unaligned
 705 00d8 A360     		str	r3, [r4, #8]	@ unaligned
 706 00da E360     		str	r3, [r4, #12]	@ unaligned
 707 00dc 2361     		str	r3, [r4, #16]	@ unaligned
 173:Core/Src/main.c ****         printf("\r\n>>mac addr is %s\r\n", wifi_ip_addr);
 708              		.loc 1 173 9 view .LVU162
 173:Core/Src/main.c ****         printf("\r\n>>mac addr is %s\r\n", wifi_ip_addr);
 709              		.loc 1 173 18 is_stmt 0 view .LVU163
 710 00de 2046     		mov	r0, r4
 711 00e0 FFF7FEFF 		bl	wifi_get_MAC_address
 712              	.LVL54:
 174:Core/Src/main.c ****         
 713              		.loc 1 174 9 is_stmt 1 view .LVU164
 714 00e4 2146     		mov	r1, r4
 715 00e6 3048     		ldr	r0, .L36+64
 716 00e8 FFF7FEFF 		bl	printf
 717              	.LVL55:
 176:Core/Src/main.c ****       break;
 718              		.loc 1 176 9 view .LVU165
 176:Core/Src/main.c ****       break;
 719              		.loc 1 176 20 is_stmt 0 view .LVU166
 720 00ec 214B     		ldr	r3, .L36+12
 721 00ee 0522     		movs	r2, #5
 722 00f0 1A70     		strb	r2, [r3]
 177:Core/Src/main.c **** 
 723              		.loc 1 177 7 is_stmt 1 view .LVU167
 724 00f2 CDE7     		b	.L20
 725              	.L21:
 180:Core/Src/main.c ****         wifi_state = wifi_state_idle;
 726              		.loc 1 180 9 view .LVU168
 727 00f4 2D48     		ldr	r0, .L36+68
 728 00f6 FFF7FEFF 		bl	puts
 729              	.LVL56:
 181:Core/Src/main.c ****       break;
 730              		.loc 1 181 9 view .LVU169
 181:Core/Src/main.c ****       break;
 731              		.loc 1 181 20 is_stmt 0 view .LVU170
 732 00fa 1E4B     		ldr	r3, .L36+12
 733 00fc 0222     		movs	r2, #2
 734 00fe 1A70     		strb	r2, [r3]
 182:Core/Src/main.c **** 
 735              		.loc 1 182 7 is_stmt 1 view .LVU171
 736 0100 C6E7     		b	.L20
 737              	.L24:
 185:Core/Src/main.c **** 
 738              		.loc 1 185 7 view .LVU172
 739 0102 2B48     		ldr	r0, .L36+72
ARM GAS  /tmp/cc2jInvs.s 			page 28


 740 0104 FFF7FEFF 		bl	puts
 741              	.LVL57:
 191:Core/Src/main.c ****       #endif
 742              		.loc 1 191 9 view .LVU173
 191:Core/Src/main.c ****       #endif
 743              		.loc 1 191 18 is_stmt 0 view .LVU174
 744 0108 2A49     		ldr	r1, .L36+76
 745 010a 4FF4FA40 		mov	r0, #32000
 746 010e FFF7FEFF 		bl	wifi_socket_server_open
 747              	.LVL58:
 193:Core/Src/main.c ****       {
 748              		.loc 1 193 7 is_stmt 1 view .LVU175
 193:Core/Src/main.c ****       {
 749              		.loc 1 193 9 is_stmt 0 view .LVU176
 750 0112 18B1     		cbz	r0, .L34
 751              	.LVL59:
 752              	.L29:
 197:Core/Src/main.c **** 
 753              		.loc 1 197 9 is_stmt 1 view .LVU177
 197:Core/Src/main.c **** 
 754              		.loc 1 197 20 is_stmt 0 view .LVU178
 755 0114 174B     		ldr	r3, .L36+12
 756 0116 0222     		movs	r2, #2
 757 0118 1A70     		strb	r2, [r3]
 199:Core/Src/main.c **** 
 758              		.loc 1 199 7 is_stmt 1 view .LVU179
 759 011a B9E7     		b	.L20
 760              	.LVL60:
 761              	.L34:
 195:Core/Src/main.c ****       }
 762              		.loc 1 195 9 view .LVU180
 763 011c 2648     		ldr	r0, .L36+80
 764              	.LVL61:
 195:Core/Src/main.c ****       }
 765              		.loc 1 195 9 is_stmt 0 view .LVU181
 766 011e FFF7FEFF 		bl	puts
 767              	.LVL62:
 768 0122 F7E7     		b	.L29
 769              	.L23:
 202:Core/Src/main.c **** 
 770              		.loc 1 202 9 is_stmt 1 view .LVU182
 771 0124 2548     		ldr	r0, .L36+84
 772 0126 FFF7FEFF 		bl	puts
 773              	.LVL63:
 204:Core/Src/main.c **** 
 774              		.loc 1 204 9 view .LVU183
 204:Core/Src/main.c **** 
 775              		.loc 1 204 15 is_stmt 0 view .LVU184
 776 012a 254C     		ldr	r4, .L36+88
 777 012c 2046     		mov	r0, r4
 778 012e FFF7FEFF 		bl	strlen
 779              	.LVL64:
 204:Core/Src/main.c **** 
 780              		.loc 1 204 13 view .LVU185
 781 0132 244B     		ldr	r3, .L36+92
 782 0134 1880     		strh	r0, [r3]	@ movhi
 210:Core/Src/main.c ****         #endif
ARM GAS  /tmp/cc2jInvs.s 			page 29


 783              		.loc 1 210 11 is_stmt 1 view .LVU186
 210:Core/Src/main.c ****         #endif
 784              		.loc 1 210 20 is_stmt 0 view .LVU187
 785 0136 2146     		mov	r1, r4
 786 0138 FFF7FEFF 		bl	wifi_socket_server_write
 787              	.LVL65:
 212:Core/Src/main.c ****         {
 788              		.loc 1 212 9 is_stmt 1 view .LVU188
 212:Core/Src/main.c ****         {
 789              		.loc 1 212 11 is_stmt 0 view .LVU189
 790 013c 18B1     		cbz	r0, .L35
 791              	.LVL66:
 792              	.L30:
 216:Core/Src/main.c **** 
 793              		.loc 1 216 9 is_stmt 1 view .LVU190
 216:Core/Src/main.c **** 
 794              		.loc 1 216 20 is_stmt 0 view .LVU191
 795 013e 0D4B     		ldr	r3, .L36+12
 796 0140 0222     		movs	r2, #2
 797 0142 1A70     		strb	r2, [r3]
 218:Core/Src/main.c **** 
 798              		.loc 1 218 9 is_stmt 1 view .LVU192
 799 0144 A4E7     		b	.L20
 800              	.LVL67:
 801              	.L35:
 214:Core/Src/main.c ****         }
 802              		.loc 1 214 11 view .LVU193
 803 0146 2048     		ldr	r0, .L36+96
 804              	.LVL68:
 214:Core/Src/main.c ****         }
 805              		.loc 1 214 11 is_stmt 0 view .LVU194
 806 0148 FFF7FEFF 		bl	puts
 807              	.LVL69:
 808 014c F7E7     		b	.L30
 809              	.L26:
 221:Core/Src/main.c ****       fflush(stdout);
 810              		.loc 1 221 7 is_stmt 1 view .LVU195
 811 014e 2E20     		movs	r0, #46
 812 0150 FFF7FEFF 		bl	putchar
 813              	.LVL70:
 222:Core/Src/main.c ****       HAL_Delay(500);
 814              		.loc 1 222 7 view .LVU196
 222:Core/Src/main.c ****       HAL_Delay(500);
 815              		.loc 1 222 14 is_stmt 0 view .LVU197
 816 0154 1D4B     		ldr	r3, .L36+100
 817 0156 1B68     		ldr	r3, [r3]
 222:Core/Src/main.c ****       HAL_Delay(500);
 818              		.loc 1 222 7 view .LVU198
 819 0158 9868     		ldr	r0, [r3, #8]
 820 015a FFF7FEFF 		bl	fflush
 821              	.LVL71:
 223:Core/Src/main.c ****       break;
 822              		.loc 1 223 7 is_stmt 1 view .LVU199
 823 015e 4FF4FA70 		mov	r0, #500
 824 0162 FFF7FEFF 		bl	HAL_Delay
 825              	.LVL72:
 224:Core/Src/main.c **** 
ARM GAS  /tmp/cc2jInvs.s 			page 30


 826              		.loc 1 224 7 view .LVU200
 827 0166 93E7     		b	.L20
 828              	.L37:
 829              		.align	2
 830              	.L36:
 831 0168 00380240 		.word	1073887232
 832 016c 00000000 		.word	config
 833 0170 00000000 		.word	.LANCHOR3
 834 0174 00000000 		.word	wifi_state
 835 0178 18000000 		.word	.LC19
 836 017c 4C000000 		.word	.LC21
 837 0180 00000000 		.word	.LC18
 838 0184 3C000000 		.word	.LC20
 839 0188 68000000 		.word	.LC22
 840 018c 00000000 		.word	.LANCHOR4
 841 0190 00000000 		.word	.LANCHOR5
 842 0194 00000000 		.word	console_psk
 843 0198 00000000 		.word	console_ssid
 844 019c 88000000 		.word	.LC23
 845 01a0 00000000 		.word	wifi_ip_addr
 846 01a4 9C000000 		.word	.LC24
 847 01a8 B4000000 		.word	.LC25
 848 01ac CC000000 		.word	.LC26
 849 01b0 E4000000 		.word	.LC27
 850 01b4 08010000 		.word	.LC28
 851 01b8 0C010000 		.word	.LC29
 852 01bc 2C010000 		.word	.LC30
 853 01c0 00000000 		.word	echo
 854 01c4 00000000 		.word	len
 855 01c8 4C010000 		.word	.LC31
 856 01cc 00000000 		.word	_impure_ptr
 857              	.LBE6:
 858              		.cfi_endproc
 859              	.LFE279:
 861              		.section	.rodata.ind_wifi_socket_data_received.str1.4,"aMS",%progbits,1
 862              		.align	2
 863              	.LC32:
 864 0000 0D0A4461 		.ascii	"\015\012Data Receive Callback...\015\000"
 864      74612052 
 864      65636569 
 864      76652043 
 864      616C6C62 
 865              		.align	2
 866              	.LC33:
 867 001c 0D0A736F 		.ascii	"\015\012socket ID: %d\015\012\000"
 867      636B6574 
 867      2049443A 
 867      2025640D 
 867      0A00
 868 002e 0000     		.align	2
 869              	.LC34:
 870 0030 6D736720 		.ascii	"msg size: %lu\015\012\000"
 870      73697A65 
 870      3A20256C 
 870      750D0A00 
 871              		.align	2
 872              	.LC35:
ARM GAS  /tmp/cc2jInvs.s 			page 31


 873 0040 6368756E 		.ascii	"chunk size: %lu\015\012\000"
 873      6B207369 
 873      7A653A20 
 873      256C750D 
 873      0A00
 874              		.section	.text.ind_wifi_socket_data_received,"ax",%progbits
 875              		.align	1
 876              		.global	ind_wifi_socket_data_received
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv4-sp-d16
 882              	ind_wifi_socket_data_received:
 883              	.LVL73:
 884              	.LFB282:
 561:Core/Src/main.c **** 
 562:Core/Src/main.c **** /******** Wi-Fi Indication User Callback *********/
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** void ind_wifi_socket_data_received(int8_t callback_server_id, int8_t socket_id, uint8_t * data_ptr,
 565:Core/Src/main.c **** {
 885              		.loc 1 565 1 view -0
 886              		.cfi_startproc
 887              		@ args = 8, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              		.loc 1 565 1 is_stmt 0 view .LVU202
 890 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 891              	.LCFI8:
 892              		.cfi_def_cfa_offset 32
 893              		.cfi_offset 3, -32
 894              		.cfi_offset 4, -28
 895              		.cfi_offset 5, -24
 896              		.cfi_offset 6, -20
 897              		.cfi_offset 7, -16
 898              		.cfi_offset 8, -12
 899              		.cfi_offset 9, -8
 900              		.cfi_offset 14, -4
 901 0004 8046     		mov	r8, r0
 902 0006 0F46     		mov	r7, r1
 903 0008 1646     		mov	r6, r2
 904 000a 9946     		mov	r9, r3
 566:Core/Src/main.c ****   printf("\r\nData Receive Callback...\r\n");
 905              		.loc 1 566 3 is_stmt 1 view .LVU203
 906 000c 1748     		ldr	r0, .L41
 907              	.LVL74:
 908              		.loc 1 566 3 is_stmt 0 view .LVU204
 909 000e FFF7FEFF 		bl	puts
 910              	.LVL75:
 567:Core/Src/main.c ****   memcpy(echo, data_ptr, 50);
 911              		.loc 1 567 3 is_stmt 1 view .LVU205
 912 0012 3446     		mov	r4, r6
 913 0014 164D     		ldr	r5, .L41+4
 914 0016 3036     		adds	r6, r6, #48
 915              	.LVL76:
 916              	.L39:
 917              		.loc 1 567 3 is_stmt 0 view .LVU206
 918 0018 2068     		ldr	r0, [r4]	@ unaligned
 919 001a 6168     		ldr	r1, [r4, #4]	@ unaligned
ARM GAS  /tmp/cc2jInvs.s 			page 32


 920 001c A268     		ldr	r2, [r4, #8]	@ unaligned
 921 001e E368     		ldr	r3, [r4, #12]	@ unaligned
 922 0020 2860     		str	r0, [r5]	@ unaligned
 923 0022 6960     		str	r1, [r5, #4]	@ unaligned
 924 0024 AA60     		str	r2, [r5, #8]	@ unaligned
 925 0026 EB60     		str	r3, [r5, #12]	@ unaligned
 926 0028 1034     		adds	r4, r4, #16
 927 002a 1035     		adds	r5, r5, #16
 928 002c B442     		cmp	r4, r6
 929 002e F3D1     		bne	.L39
 930 0030 2388     		ldrh	r3, [r4]	@ unaligned
 931 0032 2B80     		strh	r3, [r5]	@ unaligned
 568:Core/Src/main.c ****   printf((const char*)echo);
 932              		.loc 1 568 3 is_stmt 1 view .LVU207
 933 0034 0E48     		ldr	r0, .L41+4
 934 0036 FFF7FEFF 		bl	printf
 935              	.LVL77:
 569:Core/Src/main.c ****   printf("\r\nsocket ID: %d\r\n",socket_id);
 936              		.loc 1 569 3 view .LVU208
 937 003a 3946     		mov	r1, r7
 938 003c 0D48     		ldr	r0, .L41+8
 939 003e FFF7FEFF 		bl	printf
 940              	.LVL78:
 570:Core/Src/main.c ****   printf("msg size: %lu\r\n",(unsigned long)message_size);
 941              		.loc 1 570 3 view .LVU209
 942 0042 4946     		mov	r1, r9
 943 0044 0C48     		ldr	r0, .L41+12
 944 0046 FFF7FEFF 		bl	printf
 945              	.LVL79:
 571:Core/Src/main.c ****   printf("chunk size: %lu\r\n",(unsigned long)chunk_size);
 946              		.loc 1 571 3 view .LVU210
 947 004a 0899     		ldr	r1, [sp, #32]
 948 004c 0B48     		ldr	r0, .L41+16
 949 004e FFF7FEFF 		bl	printf
 950              	.LVL80:
 572:Core/Src/main.c ****   fflush(stdout);
 951              		.loc 1 572 3 view .LVU211
 952              		.loc 1 572 10 is_stmt 0 view .LVU212
 953 0052 0B4B     		ldr	r3, .L41+20
 954 0054 1B68     		ldr	r3, [r3]
 955              		.loc 1 572 3 view .LVU213
 956 0056 9868     		ldr	r0, [r3, #8]
 957 0058 FFF7FEFF 		bl	fflush
 958              	.LVL81:
 573:Core/Src/main.c ****   sock_id = socket_id;//client_ID from where message has arrived
 959              		.loc 1 573 3 is_stmt 1 view .LVU214
 960              		.loc 1 573 11 is_stmt 0 view .LVU215
 961 005c 094B     		ldr	r3, .L41+24
 962 005e 1F70     		strb	r7, [r3]
 574:Core/Src/main.c ****   server_id = callback_server_id;//server_ID from where message has arrived
 963              		.loc 1 574 3 is_stmt 1 view .LVU216
 964              		.loc 1 574 13 is_stmt 0 view .LVU217
 965 0060 094B     		ldr	r3, .L41+28
 966 0062 83F80080 		strb	r8, [r3]
 575:Core/Src/main.c ****   //wifi_state = wifi_state_socket_write;
 576:Core/Src/main.c **** }
 967              		.loc 1 576 1 view .LVU218
ARM GAS  /tmp/cc2jInvs.s 			page 33


 968 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 969              	.LVL82:
 970              	.L42:
 971              		.loc 1 576 1 view .LVU219
 972 006a 00BF     		.align	2
 973              	.L41:
 974 006c 00000000 		.word	.LC32
 975 0070 00000000 		.word	echo
 976 0074 1C000000 		.word	.LC33
 977 0078 30000000 		.word	.LC34
 978 007c 40000000 		.word	.LC35
 979 0080 00000000 		.word	_impure_ptr
 980 0084 00000000 		.word	sock_id
 981 0088 00000000 		.word	server_id
 982              		.cfi_endproc
 983              	.LFE282:
 985              		.section	.text.ind_wifi_on,"ax",%progbits
 986              		.align	1
 987              		.global	ind_wifi_on
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	ind_wifi_on:
 994              	.LFB283:
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** void ind_wifi_on()
 579:Core/Src/main.c **** {
 995              		.loc 1 579 1 is_stmt 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 580:Core/Src/main.c ****     wifi_state = wifi_state_ready;
 1000              		.loc 1 580 5 view .LVU221
 1001              		.loc 1 580 16 is_stmt 0 view .LVU222
 1002 0000 014B     		ldr	r3, .L44
 1003 0002 0122     		movs	r2, #1
 1004 0004 1A70     		strb	r2, [r3]
 581:Core/Src/main.c **** }
 1005              		.loc 1 581 1 view .LVU223
 1006 0006 7047     		bx	lr
 1007              	.L45:
 1008              		.align	2
 1009              	.L44:
 1010 0008 00000000 		.word	wifi_state
 1011              		.cfi_endproc
 1012              	.LFE283:
 1014              		.section	.text.ind_wifi_connected,"ax",%progbits
 1015              		.align	1
 1016              		.global	ind_wifi_connected
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu fpv4-sp-d16
 1022              	ind_wifi_connected:
 1023              	.LFB284:
ARM GAS  /tmp/cc2jInvs.s 			page 34


 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** void ind_wifi_connected()
 584:Core/Src/main.c **** {
 1024              		.loc 1 584 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		@ link register save eliminated.
 585:Core/Src/main.c ****   wifi_state = wifi_state_connected;
 1029              		.loc 1 585 3 view .LVU225
 1030              		.loc 1 585 14 is_stmt 0 view .LVU226
 1031 0000 014B     		ldr	r3, .L47
 1032 0002 0322     		movs	r2, #3
 1033 0004 1A70     		strb	r2, [r3]
 586:Core/Src/main.c **** }
 1034              		.loc 1 586 1 view .LVU227
 1035 0006 7047     		bx	lr
 1036              	.L48:
 1037              		.align	2
 1038              	.L47:
 1039 0008 00000000 		.word	wifi_state
 1040              		.cfi_endproc
 1041              	.LFE284:
 1043              		.section	.rodata.ind_socket_server_client_joined.str1.4,"aMS",%progbits,1
 1044              		.align	2
 1045              	.LC36:
 1046 0000 0D0A5573 		.ascii	"\015\012User callback: Client joined...\015\000"
 1046      65722063 
 1046      616C6C62 
 1046      61636B3A 
 1046      20436C69 
 1047              		.section	.text.ind_socket_server_client_joined,"ax",%progbits
 1048              		.align	1
 1049              		.global	ind_socket_server_client_joined
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu fpv4-sp-d16
 1055              	ind_socket_server_client_joined:
 1056              	.LFB285:
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** void ind_socket_server_client_joined(void)
 589:Core/Src/main.c **** {
 1057              		.loc 1 589 1 is_stmt 1 view -0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061 0000 08B5     		push	{r3, lr}
 1062              	.LCFI9:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 3, -8
 1065              		.cfi_offset 14, -4
 590:Core/Src/main.c ****   printf("\r\nUser callback: Client joined...\r\n");
 1066              		.loc 1 590 3 view .LVU229
 1067 0002 0448     		ldr	r0, .L51
 1068 0004 FFF7FEFF 		bl	puts
 1069              	.LVL83:
ARM GAS  /tmp/cc2jInvs.s 			page 35


 591:Core/Src/main.c ****   fflush(stdout);
 1070              		.loc 1 591 3 view .LVU230
 1071              		.loc 1 591 10 is_stmt 0 view .LVU231
 1072 0008 034B     		ldr	r3, .L51+4
 1073 000a 1B68     		ldr	r3, [r3]
 1074              		.loc 1 591 3 view .LVU232
 1075 000c 9868     		ldr	r0, [r3, #8]
 1076 000e FFF7FEFF 		bl	fflush
 1077              	.LVL84:
 592:Core/Src/main.c **** }
 1078              		.loc 1 592 1 view .LVU233
 1079 0012 08BD     		pop	{r3, pc}
 1080              	.L52:
 1081              		.align	2
 1082              	.L51:
 1083 0014 00000000 		.word	.LC36
 1084 0018 00000000 		.word	_impure_ptr
 1085              		.cfi_endproc
 1086              	.LFE285:
 1088              		.section	.rodata.ind_socket_server_client_left.str1.4,"aMS",%progbits,1
 1089              		.align	2
 1090              	.LC37:
 1091 0000 0D0A5573 		.ascii	"\015\012User callback: Client left...\015\000"
 1091      65722063 
 1091      616C6C62 
 1091      61636B3A 
 1091      20436C69 
 1092              		.section	.text.ind_socket_server_client_left,"ax",%progbits
 1093              		.align	1
 1094              		.global	ind_socket_server_client_left
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu fpv4-sp-d16
 1100              	ind_socket_server_client_left:
 1101              	.LFB286:
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** void ind_socket_server_client_left(void)
 595:Core/Src/main.c **** {
 1102              		.loc 1 595 1 is_stmt 1 view -0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106 0000 08B5     		push	{r3, lr}
 1107              	.LCFI10:
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 3, -8
 1110              		.cfi_offset 14, -4
 596:Core/Src/main.c ****   printf("\r\nUser callback: Client left...\r\n");
 1111              		.loc 1 596 3 view .LVU235
 1112 0002 0448     		ldr	r0, .L55
 1113 0004 FFF7FEFF 		bl	puts
 1114              	.LVL85:
 597:Core/Src/main.c ****   fflush(stdout);
 1115              		.loc 1 597 3 view .LVU236
 1116              		.loc 1 597 10 is_stmt 0 view .LVU237
 1117 0008 034B     		ldr	r3, .L55+4
ARM GAS  /tmp/cc2jInvs.s 			page 36


 1118 000a 1B68     		ldr	r3, [r3]
 1119              		.loc 1 597 3 view .LVU238
 1120 000c 9868     		ldr	r0, [r3, #8]
 1121 000e FFF7FEFF 		bl	fflush
 1122              	.LVL86:
 598:Core/Src/main.c **** }
 1123              		.loc 1 598 1 view .LVU239
 1124 0012 08BD     		pop	{r3, pc}
 1125              	.L56:
 1126              		.align	2
 1127              	.L55:
 1128 0014 00000000 		.word	.LC37
 1129 0018 00000000 		.word	_impure_ptr
 1130              		.cfi_endproc
 1131              	.LFE286:
 1133              		.section	.rodata.ind_wifi_ap_client_joined.str1.4,"aMS",%progbits,1
 1134              		.align	2
 1135              	.LC38:
 1136 0000 0D0A3E3E 		.ascii	"\015\012>>client joined callback...\015\000"
 1136      636C6965 
 1136      6E74206A 
 1136      6F696E65 
 1136      64206361 
 1137 001f 00       		.align	2
 1138              	.LC39:
 1139 0020 3E3E636C 		.ascii	">>client MAC address: \000"
 1139      69656E74 
 1139      204D4143 
 1139      20616464 
 1139      72657373 
 1140              		.section	.text.ind_wifi_ap_client_joined,"ax",%progbits
 1141              		.align	1
 1142              		.global	ind_wifi_ap_client_joined
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv4-sp-d16
 1148              	ind_wifi_ap_client_joined:
 1149              	.LVL87:
 1150              	.LFB287:
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** void ind_wifi_ap_client_joined(uint8_t * client_mac_address)
 601:Core/Src/main.c **** {
 1151              		.loc 1 601 1 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155              		.loc 1 601 1 is_stmt 0 view .LVU241
 1156 0000 10B5     		push	{r4, lr}
 1157              	.LCFI11:
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 4, -8
 1160              		.cfi_offset 14, -4
 1161 0002 0446     		mov	r4, r0
 602:Core/Src/main.c ****   printf("\r\n>>client joined callback...\r\n");
 1162              		.loc 1 602 3 is_stmt 1 view .LVU242
 1163 0004 0748     		ldr	r0, .L59
ARM GAS  /tmp/cc2jInvs.s 			page 37


 1164              	.LVL88:
 1165              		.loc 1 602 3 is_stmt 0 view .LVU243
 1166 0006 FFF7FEFF 		bl	puts
 1167              	.LVL89:
 603:Core/Src/main.c ****   printf(">>client MAC address: ");
 1168              		.loc 1 603 3 is_stmt 1 view .LVU244
 1169 000a 0748     		ldr	r0, .L59+4
 1170 000c FFF7FEFF 		bl	printf
 1171              	.LVL90:
 604:Core/Src/main.c ****   printf((const char*)client_mac_address);
 1172              		.loc 1 604 3 view .LVU245
 1173 0010 2046     		mov	r0, r4
 1174 0012 FFF7FEFF 		bl	printf
 1175              	.LVL91:
 605:Core/Src/main.c ****   fflush(stdout);  
 1176              		.loc 1 605 3 view .LVU246
 1177              		.loc 1 605 10 is_stmt 0 view .LVU247
 1178 0016 054B     		ldr	r3, .L59+8
 1179 0018 1B68     		ldr	r3, [r3]
 1180              		.loc 1 605 3 view .LVU248
 1181 001a 9868     		ldr	r0, [r3, #8]
 1182 001c FFF7FEFF 		bl	fflush
 1183              	.LVL92:
 606:Core/Src/main.c **** }
 1184              		.loc 1 606 1 view .LVU249
 1185 0020 10BD     		pop	{r4, pc}
 1186              	.LVL93:
 1187              	.L60:
 1188              		.loc 1 606 1 view .LVU250
 1189 0022 00BF     		.align	2
 1190              	.L59:
 1191 0024 00000000 		.word	.LC38
 1192 0028 20000000 		.word	.LC39
 1193 002c 00000000 		.word	_impure_ptr
 1194              		.cfi_endproc
 1195              	.LFE287:
 1197              		.section	.rodata.ind_wifi_ap_client_left.str1.4,"aMS",%progbits,1
 1198              		.align	2
 1199              	.LC40:
 1200 0000 0D0A3E3E 		.ascii	"\015\012>>client left callback...\015\000"
 1200      636C6965 
 1200      6E74206C 
 1200      65667420 
 1200      63616C6C 
 1201 001d 000000   		.align	2
 1202              	.LC41:
 1203 0020 0D0A203E 		.ascii	"\015\012 >>client MAC address: \000"
 1203      3E636C69 
 1203      656E7420 
 1203      4D414320 
 1203      61646472 
 1204              		.section	.text.ind_wifi_ap_client_left,"ax",%progbits
 1205              		.align	1
 1206              		.global	ind_wifi_ap_client_left
 1207              		.syntax unified
 1208              		.thumb
 1209              		.thumb_func
ARM GAS  /tmp/cc2jInvs.s 			page 38


 1210              		.fpu fpv4-sp-d16
 1212              	ind_wifi_ap_client_left:
 1213              	.LVL94:
 1214              	.LFB288:
 607:Core/Src/main.c **** 
 608:Core/Src/main.c **** void ind_wifi_ap_client_left(uint8_t * client_mac_address)
 609:Core/Src/main.c **** {
 1215              		.loc 1 609 1 is_stmt 1 view -0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219              		.loc 1 609 1 is_stmt 0 view .LVU252
 1220 0000 10B5     		push	{r4, lr}
 1221              	.LCFI12:
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 4, -8
 1224              		.cfi_offset 14, -4
 1225 0002 0446     		mov	r4, r0
 610:Core/Src/main.c ****   printf("\r\n>>client left callback...\r\n");
 1226              		.loc 1 610 3 is_stmt 1 view .LVU253
 1227 0004 0748     		ldr	r0, .L63
 1228              	.LVL95:
 1229              		.loc 1 610 3 is_stmt 0 view .LVU254
 1230 0006 FFF7FEFF 		bl	puts
 1231              	.LVL96:
 611:Core/Src/main.c ****   printf("\r\n >>client MAC address: ");
 1232              		.loc 1 611 3 is_stmt 1 view .LVU255
 1233 000a 0748     		ldr	r0, .L63+4
 1234 000c FFF7FEFF 		bl	printf
 1235              	.LVL97:
 612:Core/Src/main.c ****   printf((const char*)client_mac_address);
 1236              		.loc 1 612 3 view .LVU256
 1237 0010 2046     		mov	r0, r4
 1238 0012 FFF7FEFF 		bl	printf
 1239              	.LVL98:
 613:Core/Src/main.c ****   fflush(stdout);  
 1240              		.loc 1 613 3 view .LVU257
 1241              		.loc 1 613 10 is_stmt 0 view .LVU258
 1242 0016 054B     		ldr	r3, .L63+8
 1243 0018 1B68     		ldr	r3, [r3]
 1244              		.loc 1 613 3 view .LVU259
 1245 001a 9868     		ldr	r0, [r3, #8]
 1246 001c FFF7FEFF 		bl	fflush
 1247              	.LVL99:
 614:Core/Src/main.c **** }
 1248              		.loc 1 614 1 view .LVU260
 1249 0020 10BD     		pop	{r4, pc}
 1250              	.LVL100:
 1251              	.L64:
 1252              		.loc 1 614 1 view .LVU261
 1253 0022 00BF     		.align	2
 1254              	.L63:
 1255 0024 00000000 		.word	.LC40
 1256 0028 20000000 		.word	.LC41
 1257 002c 00000000 		.word	_impure_ptr
 1258              		.cfi_endproc
 1259              	.LFE288:
ARM GAS  /tmp/cc2jInvs.s 			page 39


 1261              		.section	.rodata.ind_wifi_error.str1.4,"aMS",%progbits,1
 1262              		.align	2
 1263              	.LC42:
 1264 0000 0D0A2057 		.ascii	"\015\012 WiFi Command Failed. \015\012 User should "
 1264      69466920 
 1264      436F6D6D 
 1264      616E6420 
 1264      4661696C 
 1265 0027 6E6F7720 		.ascii	"now press the RESET Button(B2). \015\000"
 1265      70726573 
 1265      73207468 
 1265      65205245 
 1265      53455420 
 1266              		.section	.text.ind_wifi_error,"ax",%progbits
 1267              		.align	1
 1268              		.global	ind_wifi_error
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu fpv4-sp-d16
 1274              	ind_wifi_error:
 1275              	.LVL101:
 1276              	.LFB289:
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** void ind_wifi_error(WiFi_Status_t error_code)
 617:Core/Src/main.c **** {
 1277              		.loc 1 617 1 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 618:Core/Src/main.c ****   if(error_code == WiFi_AT_CMD_RESP_ERROR)
 1281              		.loc 1 618 3 view .LVU263
 1282              		.loc 1 618 5 is_stmt 0 view .LVU264
 1283 0000 0D28     		cmp	r0, #13
 1284 0002 00D0     		beq	.L71
 1285 0004 7047     		bx	lr
 1286              	.L71:
 617:Core/Src/main.c ****   if(error_code == WiFi_AT_CMD_RESP_ERROR)
 1287              		.loc 1 617 1 view .LVU265
 1288 0006 08B5     		push	{r3, lr}
 1289              	.LCFI13:
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 3, -8
 1292              		.cfi_offset 14, -4
 619:Core/Src/main.c ****   {
 620:Core/Src/main.c ****     wifi_state = wifi_state_idle;
 1293              		.loc 1 620 5 is_stmt 1 view .LVU266
 1294              		.loc 1 620 16 is_stmt 0 view .LVU267
 1295 0008 034B     		ldr	r3, .L72
 1296 000a 0222     		movs	r2, #2
 1297 000c 1A70     		strb	r2, [r3]
 621:Core/Src/main.c ****     printf("\r\n WiFi Command Failed. \r\n User should now press the RESET Button(B2). \r\n");
 1298              		.loc 1 621 5 is_stmt 1 view .LVU268
 1299 000e 0348     		ldr	r0, .L72+4
 1300              	.LVL102:
 1301              		.loc 1 621 5 is_stmt 0 view .LVU269
 1302 0010 FFF7FEFF 		bl	puts
ARM GAS  /tmp/cc2jInvs.s 			page 40


 1303              	.LVL103:
 622:Core/Src/main.c ****   }
 623:Core/Src/main.c **** }
 1304              		.loc 1 623 1 view .LVU270
 1305 0014 08BD     		pop	{r3, pc}
 1306              	.L73:
 1307 0016 00BF     		.align	2
 1308              	.L72:
 1309 0018 00000000 		.word	wifi_state
 1310 001c 00000000 		.word	.LC42
 1311              		.cfi_endproc
 1312              	.LFE289:
 1314              		.global	baud_rate
 1315              		.comm	wifi_ip_addr,20,4
 1316              		.comm	socket_id,1,1
 1317              		.global	gcfg_key2
 1318              		.section	.rodata.str1.4,"aMS",%progbits,1
 1319              		.align	2
 1320              	.LC43:
 1321 0000 6E765F6D 		.ascii	"nv_model\000"
 1321      6F64656C 
 1321      00
 1322              		.global	gcfg_key1
 1323 0009 000000   		.align	2
 1324              	.LC44:
 1325 000c 69705F69 		.ascii	"ip_ipaddr\000"
 1325      70616464 
 1325      7200
 1326              		.comm	server_id,1,1
 1327              		.comm	sock_id,1,1
 1328              		.comm	len,2,2
 1329              		.comm	mac_addr,17,4
 1330              		.comm	ip_addr,16,4
 1331              		.comm	echo,64,4
 1332              		.global	mode
 1333              		.global	channel_num
 1334              		.global	seckey
 1335 0016 0000     		.align	2
 1336              	.LC45:
 1337 0018 31323334 		.ascii	"123456789\000"
 1337      35363738 
 1337      3900
 1338              		.global	ssid
 1339 0022 0000     		.align	2
 1340              	.LC46:
 1341 0024 53505746 		.ascii	"SPWF04SA\000"
 1341      30345341 
 1341      00
 1342              		.comm	console_psk,20,4
 1343              		.comm	console_ssid,40,4
 1344              		.global	console_count
 1345              		.comm	console_input,1,4
 1346              		.comm	UART_MsgHandle,64,4
 1347              		.comm	config,56,4
 1348              		.comm	wifi_state,1,1
 1349              		.comm	print_msg_buff,512,4
 1350              		.section	.bss.console_count,"aw",%nobits
ARM GAS  /tmp/cc2jInvs.s 			page 41


 1351              		.set	.LANCHOR0,. + 0
 1354              	console_count:
 1355 0000 00       		.space	1
 1356              		.section	.data.baud_rate,"aw"
 1357              		.align	2
 1358              		.set	.LANCHOR3,. + 0
 1361              	baud_rate:
 1362 0000 00C20100 		.word	115200
 1363              		.section	.data.channel_num,"aw"
 1364              		.set	.LANCHOR5,. + 0
 1367              	channel_num:
 1368 0000 06       		.byte	6
 1369              		.section	.data.gcfg_key1,"aw"
 1370              		.align	2
 1373              	gcfg_key1:
 1374 0000 0C000000 		.word	.LC44
 1375              		.section	.data.gcfg_key2,"aw"
 1376              		.align	2
 1379              	gcfg_key2:
 1380 0000 00000000 		.word	.LC43
 1381              		.section	.data.mode,"aw"
 1382              		.set	.LANCHOR4,. + 0
 1385              	mode:
 1386 0000 02       		.byte	2
 1387              		.section	.data.seckey,"aw"
 1388              		.align	2
 1389              		.set	.LANCHOR2,. + 0
 1392              	seckey:
 1393 0000 18000000 		.word	.LC45
 1394              		.section	.data.ssid,"aw"
 1395              		.align	2
 1396              		.set	.LANCHOR1,. + 0
 1399              	ssid:
 1400 0000 24000000 		.word	.LC46
 1401              		.text
 1402              	.Letext0:
 1403              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1404              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 1405              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1406              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1407              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1408              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1409              		.file 8 "/usr/include/newlib/sys/_types.h"
 1410              		.file 9 "/usr/include/newlib/sys/reent.h"
 1411              		.file 10 "/usr/include/newlib/sys/lock.h"
 1412              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1413              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1414              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1415              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1416              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1417              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1418              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1419              		.file 18 "Core/Inc/main.h"
 1420              		.file 19 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_interface.h"
 1421              		.file 20 "/usr/include/newlib/stdlib.h"
 1422              		.file 21 "Middlewares/ST/STM32_SPWF0xSy/Utils/event_buffer.h"
 1423              		.file 22 "/usr/include/newlib/time.h"
ARM GAS  /tmp/cc2jInvs.s 			page 42


 1424              		.file 23 "Middlewares/ST/STM32_SPWF0xSy/Inc/wifi_module.h"
 1425              		.file 24 "Middlewares/ST/STM32_SPWF0xSy/Utils/wifi_globals.h"
 1426              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 1427              		.file 26 "/usr/include/newlib/stdio.h"
 1428              		.file 27 "/usr/include/newlib/string.h"
 1429              		.file 28 "<built-in>"
 1430              		.file 29 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc2jInvs.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc2jInvs.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc2jInvs.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc2jInvs.s:148    .text.SystemClock_Config:0000000000000078 $d
     /tmp/cc2jInvs.s:154    .rodata.wifi_get_AP_settings.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:220    .text.wifi_get_AP_settings:0000000000000000 $t
     /tmp/cc2jInvs.s:227    .text.wifi_get_AP_settings:0000000000000000 wifi_get_AP_settings
     /tmp/cc2jInvs.s:433    .text.wifi_get_AP_settings:0000000000000104 $d
                            *COM*:0000000000000001 console_input
                            *COM*:0000000000000028 console_ssid
                            *COM*:0000000000000014 console_psk
     /tmp/cc2jInvs.s:462    .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:505    .text.main:0000000000000000 $t
     /tmp/cc2jInvs.s:512    .text.main:0000000000000000 main
     /tmp/cc2jInvs.s:675    .text.main:00000000000000a0 $d
     /tmp/cc2jInvs.s:682    .text.main:00000000000000bc $t
     /tmp/cc2jInvs.s:831    .text.main:0000000000000168 $d
                            *COM*:0000000000000038 config
                            *COM*:0000000000000001 wifi_state
                            *COM*:0000000000000014 wifi_ip_addr
                            *COM*:0000000000000040 echo
                            *COM*:0000000000000002 len
     /tmp/cc2jInvs.s:862    .rodata.ind_wifi_socket_data_received.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:875    .text.ind_wifi_socket_data_received:0000000000000000 $t
     /tmp/cc2jInvs.s:882    .text.ind_wifi_socket_data_received:0000000000000000 ind_wifi_socket_data_received
     /tmp/cc2jInvs.s:974    .text.ind_wifi_socket_data_received:000000000000006c $d
                            *COM*:0000000000000001 sock_id
                            *COM*:0000000000000001 server_id
     /tmp/cc2jInvs.s:986    .text.ind_wifi_on:0000000000000000 $t
     /tmp/cc2jInvs.s:993    .text.ind_wifi_on:0000000000000000 ind_wifi_on
     /tmp/cc2jInvs.s:1010   .text.ind_wifi_on:0000000000000008 $d
     /tmp/cc2jInvs.s:1015   .text.ind_wifi_connected:0000000000000000 $t
     /tmp/cc2jInvs.s:1022   .text.ind_wifi_connected:0000000000000000 ind_wifi_connected
     /tmp/cc2jInvs.s:1039   .text.ind_wifi_connected:0000000000000008 $d
     /tmp/cc2jInvs.s:1044   .rodata.ind_socket_server_client_joined.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:1048   .text.ind_socket_server_client_joined:0000000000000000 $t
     /tmp/cc2jInvs.s:1055   .text.ind_socket_server_client_joined:0000000000000000 ind_socket_server_client_joined
     /tmp/cc2jInvs.s:1083   .text.ind_socket_server_client_joined:0000000000000014 $d
     /tmp/cc2jInvs.s:1089   .rodata.ind_socket_server_client_left.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:1093   .text.ind_socket_server_client_left:0000000000000000 $t
     /tmp/cc2jInvs.s:1100   .text.ind_socket_server_client_left:0000000000000000 ind_socket_server_client_left
     /tmp/cc2jInvs.s:1128   .text.ind_socket_server_client_left:0000000000000014 $d
     /tmp/cc2jInvs.s:1134   .rodata.ind_wifi_ap_client_joined.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:1141   .text.ind_wifi_ap_client_joined:0000000000000000 $t
     /tmp/cc2jInvs.s:1148   .text.ind_wifi_ap_client_joined:0000000000000000 ind_wifi_ap_client_joined
     /tmp/cc2jInvs.s:1191   .text.ind_wifi_ap_client_joined:0000000000000024 $d
     /tmp/cc2jInvs.s:1198   .rodata.ind_wifi_ap_client_left.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:1205   .text.ind_wifi_ap_client_left:0000000000000000 $t
     /tmp/cc2jInvs.s:1212   .text.ind_wifi_ap_client_left:0000000000000000 ind_wifi_ap_client_left
     /tmp/cc2jInvs.s:1255   .text.ind_wifi_ap_client_left:0000000000000024 $d
     /tmp/cc2jInvs.s:1262   .rodata.ind_wifi_error.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:1267   .text.ind_wifi_error:0000000000000000 $t
     /tmp/cc2jInvs.s:1274   .text.ind_wifi_error:0000000000000000 ind_wifi_error
     /tmp/cc2jInvs.s:1309   .text.ind_wifi_error:0000000000000018 $d
     /tmp/cc2jInvs.s:1361   .data.baud_rate:0000000000000000 baud_rate
                            *COM*:0000000000000001 socket_id
ARM GAS  /tmp/cc2jInvs.s 			page 44


     /tmp/cc2jInvs.s:1379   .data.gcfg_key2:0000000000000000 gcfg_key2
     /tmp/cc2jInvs.s:1319   .rodata.str1.4:0000000000000000 $d
     /tmp/cc2jInvs.s:1373   .data.gcfg_key1:0000000000000000 gcfg_key1
                            *COM*:0000000000000011 mac_addr
                            *COM*:0000000000000010 ip_addr
     /tmp/cc2jInvs.s:1385   .data.mode:0000000000000000 mode
     /tmp/cc2jInvs.s:1367   .data.channel_num:0000000000000000 channel_num
     /tmp/cc2jInvs.s:1392   .data.seckey:0000000000000000 seckey
     /tmp/cc2jInvs.s:1399   .data.ssid:0000000000000000 ssid
     /tmp/cc2jInvs.s:1354   .bss.console_count:0000000000000000 console_count
                            *COM*:0000000000000040 UART_MsgHandle
                            *COM*:0000000000000200 print_msg_buff
     /tmp/cc2jInvs.s:1355   .bss.console_count:0000000000000000 $d
     /tmp/cc2jInvs.s:1357   .data.baud_rate:0000000000000000 $d
     /tmp/cc2jInvs.s:1370   .data.gcfg_key1:0000000000000000 $d
     /tmp/cc2jInvs.s:1376   .data.gcfg_key2:0000000000000000 $d
     /tmp/cc2jInvs.s:1388   .data.seckey:0000000000000000 $d
     /tmp/cc2jInvs.s:1395   .data.ssid:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
puts
printf
fflush
scanf
strlen
memcpy
_impure_ptr
HAL_Init
Timer_Config
UART_Configuration
wifi_init
wifi_ap_start
wifi_get_IP_address
wifi_get_MAC_address
wifi_socket_server_open
wifi_socket_server_write
putchar
HAL_Delay
